var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/ApiController.html",[0,1.796,1,2.004]],["body/controllers/ApiController.html",[0,1.034,1,1.815,2,1.034,3,0.219,4,0.192,5,0.192,6,1.506,7,1.506,8,1.154,9,0.415,10,0.854,11,1.772,12,2.052,13,3.991,14,2.849,15,2.849,16,2.368,17,2.849,18,2.849,19,1.305,20,2.279,21,3.071,22,0.034,23,2.849,24,1.445,25,1.812,26,1.382,27,1.382,28,1.382,29,1.382,30,3.001,31,1.445,32,2.552,33,1.812,34,1.812,35,1.812,36,3.228,37,2.849,38,1.812,39,3.564,40,1.812,41,2.849,42,1.812,43,1.506,44,2.849,45,1.812,46,1.034,47,1.812,48,2.849,49,1.812,50,1.812,51,2.849,52,1.812,53,0.582,54,3.521,55,1.812,56,1.812,57,1.506,58,1.812,59,1.506,60,0.309,61,1.034,62,1.034,63,1.705,64,0.708,65,1.034,66,1.812,67,1.506,68,1.504,69,1.506,70,1.816,71,1.506,72,1.217,73,1.305,74,1.812,75,0.219,76,0.094,77,0.708,78,2.243,79,1.305,80,1.506,81,1.812,82,1.445,83,1.854,84,1.812,85,1.812,86,0.648,87,1.506,88,1.034,89,0.849,90,1.812,91,1.812,92,1.812,93,1.812,94,1.812,95,1.812,96,1.305,97,1.812,98,1.812,99,1.812,100,1.812,101,1.812,102,1.812,103,1.812,104,0.015,105,0.015]],["title/modules/ApiModule.html",[106,0.943,107,1.796]],["body/modules/ApiModule.html",[1,3.167,2,2.518,3,0.398,4,0.349,5,0.349,22,0.034,53,0.688,60,0.562,70,2.937,71,2.739,75,0.398,76,0.171,104,0.024,105,0.024,106,1.322,107,3.506,108,1.287,109,1.722,110,2.739,111,2.739,112,2.739,113,2.668,114,2.668,115,2.668,116,2.066,117,1.544,118,1.408,119,3.295,120,2.274,121,2.81,122,2.739,123,2.739,124,3.295,125,2.739]],["title/injectables/ApiService.html",[70,1.623,126,0.481]],["body/injectables/ApiService.html",[3,0.402,4,0.352,5,0.352,9,0.762,10,1.332,11,1.499,12,3.199,19,3.199,20,3.043,22,0.034,24,1.332,26,1.332,27,1.332,28,1.332,29,1.332,30,1.902,31,0.999,32,2.081,53,0.671,60,0.568,62,1.902,63,1.423,64,1.301,67,2.769,68,2.44,69,2.769,70,2.291,75,0.402,76,0.173,77,1.301,82,0.999,83,1.898,96,2.399,104,0.024,105,0.024,126,0.68,127,1.191,128,2.769,129,2.769,130,3.331,131,3.331,132,3.331,133,2.399,134,1.902,135,3.331,136,3.331,137,3.331,138,3.331]],["title/modules/AppModule.html",[106,0.943,139,2.004]],["body/modules/AppModule.html",[3,0.335,4,0.294,5,0.294,8,1.768,22,0.035,53,0.714,60,0.473,75,0.335,76,0.144,104,0.021,105,0.021,106,1.175,107,3.084,108,1.084,109,1.53,113,2.531,114,2.531,115,2.531,116,1.836,117,1.3,118,1.185,120,1.431,121,2.497,139,3.859,140,2.307,141,2.307,142,3.084,143,2.775,144,3.918,145,2.307,146,3.918,147,1.768,148,1.768,149,2.775,150,2.775,151,2.775,152,2.775,153,2.307,154,2.775,155,2.775,156,2.775,157,2.307,158,3.257,159,2.307,160,2.775,161,2.775,162,2.775,163,2.775,164,2.775,165,2.775,166,2.775,167,2.307,168,1.768,169,2.775,170,2.775,171,2.775]],["title/controllers/AuthController.html",[0,1.796,172,2.004]],["body/controllers/AuthController.html",[0,1.842,2,1.842,3,0.39,4,0.341,5,0.341,7,2.681,9,0.738,10,1.304,11,1.697,21,2.77,22,0.034,24,1.304,26,1.304,27,1.304,29,1.304,31,1.304,46,2.482,53,0.636,57,2.681,59,2.681,60,0.55,65,1.842,75,0.39,76,0.167,80,2.681,82,1.304,104,0.023,105,0.023,134,1.842,167,2.681,172,2.77,173,2.681,174,3.13,175,3.613,176,3.225,177,3.225,178,3.225,179,5.261,180,3.225,181,3.225,182,3.225,183,3.225,184,1.92,185,2.323,186,2.055,187,3.225,188,3.225,189,3.225,190,3.225,191,3.225,192,3.225,193,3.225,194,3.225,195,3.225,196,3.225,197,3.225]],["title/modules/AuthModule.html",[106,0.943,113,1.474]],["body/modules/AuthModule.html",[2,2.332,3,0.356,4,0.312,5,0.312,22,0.034,53,0.695,60,0.502,75,0.356,76,0.152,104,0.022,105,0.022,106,1.225,108,1.15,109,1.595,113,2.846,115,2.579,116,1.914,117,1.38,118,1.258,120,2.107,121,2.603,123,2.448,172,2.988,184,2.354,185,2.121,198,2.448,199,2.448,200,2.448,201,2.945,202,3.143,203,3.143,204,2.945,205,2.942,206,4.084,207,1.519,208,2.945,209,2.945,210,2.945,211,2.121,212,2.945,213,2.945,214,2.448,215,2.945,216,2.945,217,2.945,218,2.945]],["title/injectables/AuthService.html",[126,0.481,184,1.228]],["body/injectables/AuthService.html",[3,0.259,4,0.227,5,0.227,9,0.491,10,0.973,11,1.619,22,0.035,24,1.308,26,1.308,27,1.308,28,1.308,29,1.308,31,1.173,32,2.044,36,3.082,39,1.366,46,1.224,53,0.566,60,0.365,63,2.421,64,0.837,68,2.106,75,0.259,76,0.111,77,1.267,78,2.067,82,1.479,83,1.672,86,1.675,87,2.696,88,1.852,89,1.52,104,0.017,105,0.017,126,0.496,127,0.766,129,1.782,133,1.544,175,2.696,184,1.267,211,1.544,214,1.782,219,1.782,220,3.243,221,2.696,222,5.12,223,2.143,224,3.243,225,2.143,226,3.243,227,3.913,228,2.143,229,1.673,230,3.243,231,4.686,232,2.143,233,1.544,234,1.544,235,2.143,236,2.336,237,3.243,238,2.143,239,2.143,240,2.143,241,2.143,242,2.143,243,2.067,244,3.243,245,3.913,246,2.696,247,2.143,248,2.143,249,1.782,250,2.143,251,1.782,252,2.143,253,2.143,254,2.143,255,3.243,256,1.782,257,1.782,258,2.143]],["title/classes/ConnectUserDto.html",[76,0.163,259,2.265]],["body/classes/ConnectUserDto.html",[3,0.51,4,0.447,5,0.447,22,0.034,53,0.625,75,0.51,76,0.219,86,1.51,104,0.028,105,0.028,147,3.295,148,2.692,229,2.179,259,3.724,260,2.412,261,3.043,262,2.692,263,3.512,264,3.043,265,3.512,266,3.043,267,3.043,268,3.043,269,1.98,270,4.225]],["title/classes/CreateUserDto.html",[20,1.796,76,0.163]],["body/classes/CreateUserDto.html",[3,0.482,4,0.422,5,0.422,20,2.848,22,0.033,53,0.603,75,0.482,76,0.206,86,1.425,104,0.027,105,0.027,147,3.178,148,2.539,229,2.056,243,3.178,260,2.275,262,2.539,263,3.313,264,3.592,265,3.313,267,2.87,268,2.87,269,1.867,271,2.87,272,2.87,273,3.313,274,3.313,275,3.313,276,3.313,277,3.313,278,3.313,279,3.313,280,3.313,281,2.87,282,3.313,283,3.985]],["title/classes/GameGateway.html",[76,0.163,284,2.004]],["body/classes/GameGateway.html",[3,0.246,4,0.215,5,0.215,9,0.465,10,0.934,11,1.449,21,1.986,22,0.035,24,1.373,26,1.273,27,1.273,28,1.373,29,1.273,30,2.163,31,1.136,53,0.553,61,1.779,62,1.161,63,1.956,64,0.794,72,1.814,73,1.465,75,0.246,76,0.105,77,1.217,78,1.986,79,2.728,82,0.61,83,1.956,86,1.637,88,1.161,89,0.953,104,0.017,105,0.017,168,1.296,174,1.465,184,1.886,249,1.691,256,1.691,257,1.691,260,1.161,284,1.986,285,1.691,286,2.244,287,3.149,288,3.149,289,1.986,290,3.479,291,2.59,292,2.59,293,3.788,294,1.465,295,2.033,296,3.149,297,2.033,298,3.116,299,4.421,300,3.149,301,2.033,302,3.116,303,2.033,304,1.691,305,2.033,306,3.149,307,3.116,308,2.033,309,3.116,310,1.691,311,2.59,312,2.033,313,1.465,314,1.691,315,1.691,316,1.691,317,2.033,318,2.033,319,2.033,320,1.691,321,2.033,322,1.465,323,2.033,324,1.691,325,1.691,326,3.116,327,1.691,328,2.033,329,2.033,330,2.033,331,2.59,332,1.691,333,2.033,334,2.033,335,3.116,336,3.116,337,2.033,338,1.465,339,2.033,340,1.296,341,2.033,342,2.033,343,1.691,344,1.691,345,1.465,346,1.691,347,2.033,348,2.033,349,2.033,350,2.033,351,2.033,352,1.691,353,2.033]],["title/modules/GamesModule.html",[106,0.943,114,1.474]],["body/modules/GamesModule.html",[3,0.441,4,0.386,5,0.386,22,0.034,53,0.631,60,0.622,72,2.663,75,0.441,76,0.189,104,0.025,105,0.025,106,1.415,108,1.426,109,1.842,114,2.86,116,2.21,117,1.711,118,1.56,120,2.433,205,3.397,354,3.035,355,3.035,356,3.035,357,2.502,358,3.651,359,3.651,360,2.629]],["title/injectables/GamesService.html",[72,1.344,126,0.481]],["body/injectables/GamesService.html",[3,0.225,4,0.197,5,0.197,9,0.426,10,0.873,11,1.705,16,2.421,22,0.035,24,1.398,26,1.398,27,1.398,28,1.398,29,1.398,30,2.047,31,1.319,32,1.899,36,3.132,39,3.301,43,2.421,46,2.047,53,0.49,60,0.318,61,1.064,62,2.047,63,1.732,64,0.728,72,1.244,75,0.225,76,0.097,77,0.728,82,1.398,83,1.732,104,0.016,105,0.016,126,0.446,127,0.666,134,1.064,229,1.849,281,1.342,306,2.98,322,4.095,327,2.421,340,1.187,352,2.421,357,1.732,360,1.342,361,1.549,362,2.912,363,2.912,364,2.912,365,2.912,366,1.549,367,1.863,368,2.912,369,1.863,370,2.912,371,4.398,372,1.863,373,2.912,374,1.863,375,1.863,376,2.912,377,1.863,378,1.863,379,2.098,380,1.863,381,1.863,382,3.585,383,1.863,384,4.053,385,1.863,386,1.863,387,1.863,388,2.912,389,1.863,390,3.585,391,1.863,392,4.662,393,2.912,394,1.863,395,1.863,396,1.863,397,1.863,398,1.863,399,1.863,400,1.863]],["title/injectables/JwtAuthGuard.html",[65,1.796,126,0.481]],["body/injectables/JwtAuthGuard.html",[3,0.418,4,0.366,5,0.366,9,0.791,10,1.365,22,0.034,24,1.037,26,1.037,27,1.037,28,1.686,29,1.037,31,1.037,53,0.55,60,0.589,65,2.599,75,0.418,76,0.179,82,1.365,86,1.627,88,1.974,89,1.62,104,0.024,105,0.024,126,0.697,127,1.236,207,1.783,269,1.62,401,3.784,402,2.49,403,4.552,404,4.552,405,5.409,406,3.457,407,2.874,408,2.874,409,3.457,410,3.457,411,3.457,412,3.457,413,3.457,414,3.457,415,3.457,416,3.457,417,3.457,418,3.457,419,3.457,420,3.457]],["title/injectables/JwtStrategy.html",[126,0.481,202,1.796]],["body/injectables/JwtStrategy.html",[3,0.434,4,0.38,5,0.38,9,0.822,10,1.4,11,1.555,22,0.034,24,1.4,26,1.078,27,1.078,29,1.078,31,1.078,46,2.052,53,0.627,60,0.612,75,0.434,76,0.186,77,2.025,82,1.078,104,0.025,105,0.025,126,0.715,127,1.284,202,2.666,207,1.853,236,2.588,246,3.881,251,2.987,269,1.684,421,2.987,422,3.881,423,3.593,424,4.669,425,3.593,426,3.593,427,2.987,428,2.588,429,2.987,430,2.987,431,2.987,432,2.987,433,3.593,434,3.593,435,3.593,436,3.593]],["title/injectables/LocalAuthGuard.html",[126,0.481,186,2.004]],["body/injectables/LocalAuthGuard.html",[3,0.53,4,0.464,5,0.464,22,0.033,53,0.639,60,0.748,75,0.53,76,0.227,104,0.028,105,0.028,126,0.81,127,1.568,186,3.371,207,2.263,269,2.056,402,3.16,408,3.647,437,3.647,438,4.387]],["title/injectables/LocalStrategy.html",[126,0.481,203,1.796]],["body/injectables/LocalStrategy.html",[3,0.387,4,0.339,5,0.339,9,0.733,10,1.297,11,1.469,22,0.034,24,1.297,26,1.297,27,1.297,28,1.297,29,1.297,31,0.96,32,2.027,36,3.224,53,0.634,60,0.546,63,2.093,75,0.387,76,0.166,77,1.251,82,0.96,83,1.368,86,1.145,88,1.829,89,1.501,104,0.023,105,0.023,126,0.662,127,1.145,134,1.829,184,2.205,185,2.307,203,2.47,207,1.652,229,1.652,243,3.343,269,1.501,294,2.307,422,3.596,427,2.662,428,2.307,430,2.662,431,2.662,432,2.662,439,2.662,440,3.203,441,4.326,442,3.203,443,2.662,444,4.326,445,3.203]],["title/classes/MatchmakeGateway.html",[76,0.163,446,2.004]],["body/classes/MatchmakeGateway.html",[3,0.276,4,0.242,5,0.242,9,0.522,10,1.02,11,1.219,21,1.454,22,0.034,24,1.444,26,1.219,27,1.219,28,1.35,29,1.219,31,1.02,39,1.454,53,0.61,63,2.057,64,0.891,72,1.924,73,1.644,75,0.276,76,0.118,77,1.328,78,2.167,79,2.927,82,0.685,83,1.453,86,1.453,89,1.593,104,0.018,105,0.018,168,1.454,174,1.644,184,1.971,233,1.644,234,1.644,260,1.303,286,2.449,287,3.378,288,3.378,289,2.167,290,3.636,291,2.827,292,2.827,294,1.644,296,3.378,299,4.347,300,3.378,304,1.897,310,1.897,311,2.827,313,1.644,314,1.897,315,1.897,316,1.897,320,1.897,322,1.644,324,1.897,325,1.897,331,2.827,332,1.897,338,1.644,340,2.589,343,1.897,344,1.897,345,1.644,346,1.897,446,2.167,447,1.897,448,2.282,449,2.282,450,3.4,451,2.282,452,3.4,453,2.282,454,3.4,455,3.4,456,2.282,457,2.282,458,2.282,459,2.282,460,2.282,461,2.282,462,2.282,463,2.282,464,2.282,465,2.282,466,2.282,467,2.282,468,2.282,469,2.282,470,2.282,471,2.282,472,2.282,473,2.282,474,2.282,475,2.282]],["title/modules/PlayModule.html",[106,0.943,142,1.796]],["body/modules/PlayModule.html",[3,0.438,4,0.383,5,0.383,22,0.034,53,0.689,60,0.617,75,0.438,76,0.188,104,0.025,105,0.025,106,1.407,108,1.414,109,1.833,113,2.739,114,2.739,116,2.199,117,1.697,118,1.547,120,1.868,121,2.99,122,3.011,125,3.011,142,3.443,284,2.99,446,2.99,476,3.622,477,3.622,478,3.622,479,3.622,480,3.622]],["title/injectables/PrismaService.html",[126,0.481,357,1.344]],["body/injectables/PrismaService.html",[3,0.421,4,0.369,5,0.369,9,0.797,10,1.372,11,1.768,22,0.034,24,1.372,26,1.045,27,1.045,28,1.045,29,1.045,31,1.372,53,0.553,60,0.594,64,1.36,75,0.421,76,0.18,83,1.955,104,0.025,105,0.025,126,0.7,127,1.245,269,2.144,286,2.509,357,1.955,481,2.896,482,5.109,483,4.575,484,5.783,485,4.575,486,5.425,487,3.484,488,2.896,489,3.484,490,3.484,491,3.484,492,3.484]],["title/modules/UsersModule.html",[106,0.943,115,1.474]],["body/modules/UsersModule.html",[3,0.441,4,0.386,5,0.386,22,0.034,53,0.631,60,0.622,68,2.663,75,0.441,76,0.189,104,0.025,105,0.025,106,1.415,108,1.426,109,1.842,115,2.86,116,2.21,117,1.711,118,1.56,120,2.433,205,3.397,357,2.502,360,2.629,493,3.035,494,3.035,495,3.035,496,3.651,497,3.651]],["title/injectables/UsersService.html",[68,1.344,126,0.481]],["body/injectables/UsersService.html",[3,0.271,4,0.237,5,0.237,9,0.513,10,1.007,11,1.766,12,2.417,19,2.417,22,0.034,24,1.504,26,1.504,27,1.504,28,1.669,29,1.504,30,2.729,31,1.433,32,2.608,53,0.486,60,0.382,62,2.296,63,1.907,64,0.876,68,1.434,75,0.271,76,0.116,77,0.876,82,1.433,86,1.2,96,2.896,104,0.018,105,0.018,126,0.514,127,0.802,134,1.281,340,2.139,357,1.907,366,1.865,498,1.865,499,3.356,500,3.356,501,2.243,502,2.243,503,3.356,504,5.346,505,2.243,506,3.356,507,4.464,508,2.243,509,4.464,510,2.243,511,2.243,512,4.022,513,3.356,514,2.243,515,2.243,516,2.243,517,4.022,518,2.79,519,4.022,520,4.022,521,2.243,522,4.022,523,2.243,524,2.243,525,2.243,526,2.243,527,2.243,528,2.243]],["title/coverage.html",[529,3.553]],["body/coverage.html",[0,2.145,1,1.667,5,0.277,6,2.175,20,1.494,22,0.034,28,0.784,65,1.494,68,1.118,70,1.349,72,1.118,76,0.249,89,1.226,104,0.02,105,0.02,126,0.87,128,2.175,172,1.667,173,2.175,184,1.022,186,1.667,202,1.494,203,1.494,219,2.175,259,1.884,261,2.706,262,3.062,266,1.884,271,2.706,272,1.884,284,1.667,285,2.175,357,1.118,361,2.175,379,1.884,401,2.175,402,2.706,421,2.175,437,2.175,439,2.175,446,1.667,447,2.175,481,2.175,498,2.175,529,2.175,530,1.884,531,2.616,532,2.616,533,6.274,534,2.616,535,5.088,536,2.616,537,2.616,538,5.954,539,3.757,540,2.175,541,2.616,542,2.175,543,5.685,544,3.757,545,4.536,546,2.175,547,2.175,548,2.175,549,2.175,550,2.175,551,2.175,552,2.616,553,2.616]],["title/dependencies.html",[109,1.475,554,2.192]],["body/dependencies.html",[22,0.034,60,0.632,64,1.449,104,0.026,105,0.026,109,1.449,133,2.672,145,3.084,147,2.364,148,2.364,153,3.084,157,3.084,158,3.084,168,2.364,207,1.914,211,2.672,313,2.672,428,3.792,429,3.084,443,3.084,555,5.266,556,3.71,557,3.71,558,3.71,559,4.766,560,3.084,561,4.766,562,3.71,563,3.71,564,3.71,565,3.71,566,3.71,567,3.71,568,3.71,569,3.71,570,3.71,571,3.71,572,3.71,573,3.71,574,3.71,575,3.71]],["title/miscellaneous/functions.html",[576,1.68,577,3.141]],["body/miscellaneous/functions.html",[9,1.088,22,0.03,104,0.03,105,0.03,540,3.95,542,4.884,576,3.028,577,3.95,578,4.752]],["title/index.html",[9,0.603,579,2.192,580,2.192]],["body/index.html",[4,0.356,8,2.146,22,0.032,61,1.923,104,0.024,105,0.024,159,2.8,290,2.426,407,2.8,488,2.8,530,3.222,581,3.619,582,2.8,583,3.368,584,4.474,585,3.368,586,3.368,587,3.368,588,3.368,589,3.368,590,3.368,591,3.368,592,3.368,593,3.368,594,3.368,595,3.368,596,3.368,597,3.368,598,3.368,599,3.368,600,3.368,601,4.474,602,3.368,603,5.353,604,3.368,605,3.368,606,5.024,607,3.368,608,3.368,609,4.474,610,3.368,611,3.368,612,3.368,613,3.72,614,4.474,615,3.368,616,3.368,617,3.368,618,3.368,619,3.368,620,2.8,621,3.368,622,3.368,623,3.368,624,3.368,625,3.368,626,3.368,627,3.368,628,3.368,629,2.8,630,4.474,631,3.368,632,4.474,633,2.8,634,3.368,635,2.8,636,3.368,637,2.426]],["title/license.html",[579,2.192,580,2.192,637,1.899]],["body/license.html",[22,0.024,104,0.024,105,0.024,118,1.423,345,2.399,530,2.399,560,2.769,581,2.399,638,4.997,639,3.331,640,3.331,641,4.442,642,3.331,643,3.331,644,3.331,645,3.331,646,3.331,647,3.331,648,4.442,649,5.996,650,3.331,651,3.331,652,3.331,653,4.997,654,3.331,655,4.442,656,3.331,657,3.331,658,3.692,659,3.331,660,3.331,661,3.331,662,3.331,663,3.331,664,3.331,665,3.331,666,4.442,667,3.331,668,3.331,669,3.331,670,3.331,671,3.331,672,3.331,673,3.331,674,4.442,675,4.442,676,3.331,677,3.331,678,3.331,679,3.331,680,3.331,681,3.331,682,3.331,683,3.331,684,3.331,685,3.331,686,3.331,687,3.331,688,3.331,689,3.331,690,3.331,691,3.331,692,3.331,693,3.331,694,3.331,695,3.331,696,3.331,697,3.331,698,3.331,699,3.331,700,3.331,701,3.331,702,3.331,703,3.331]],["title/modules.html",[108,1.669]],["body/modules.html",[22,0.028,104,0.028,105,0.028,107,2.423,108,1.657,113,1.989,114,1.989,115,1.989,139,2.705,142,2.423,620,5.058,704,6.085,705,6.085,706,6.085]],["title/overview.html",[707,3.553]],["body/overview.html",[2,1.565,22,0.034,68,2.364,70,2.327,72,2.364,104,0.021,105,0.021,107,3.367,108,1.071,109,1.517,110,2.279,111,2.279,112,2.279,113,2.833,114,2.731,115,2.731,116,1.82,117,1.285,118,1.171,127,0.98,139,3.794,140,2.279,141,2.279,142,3.159,184,2.16,198,2.279,199,2.279,200,2.279,202,2.576,203,2.576,260,1.565,338,1.974,354,2.279,355,2.279,356,2.279,357,2.097,493,2.279,494,2.279,495,2.279,707,2.279,708,2.741,709,2.741,710,2.741]],["title/properties.html",[289,2.407,554,2.192]],["body/properties.html",[22,0.033,61,2.493,104,0.028,105,0.028,289,2.782,581,3.144,582,3.629,613,3.629,629,3.629,633,3.629,635,3.629,637,3.144,711,4.366,712,4.366,713,4.366,714,4.366,715,4.366,716,4.366,717,4.366,718,4.366,719,4.366,720,4.366,721,4.366]],["title/miscellaneous/variables.html",[576,1.68,722,3.141]],["body/miscellaneous/variables.html",[8,1.742,9,0.626,11,0.82,22,0.034,28,1.47,32,1.281,36,2.572,82,1.162,86,1.61,104,0.021,105,0.021,221,2.272,229,1.999,233,4.138,234,4.138,236,1.968,243,2.47,261,1.968,262,3.123,264,1.968,266,2.792,267,2.792,268,2.792,271,1.968,272,2.792,273,2.272,274,2.272,275,2.272,276,2.272,277,2.272,278,2.272,279,2.272,280,2.272,281,1.968,282,2.272,379,2.792,518,3.222,545,2.272,546,3.222,547,3.744,548,3.222,549,3.222,550,3.222,551,3.744,576,1.742,658,2.272,722,2.272,723,5.527,724,2.733,725,2.733,726,2.733,727,2.733,728,2.733,729,2.733,730,2.733,731,2.733,732,2.733,733,2.733,734,2.733,735,2.733,736,2.733,737,2.733,738,2.733,739,2.733,740,3.876,741,2.733,742,2.733,743,2.733]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":712,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":137,"title":{},"body":{"injectables/ApiService.html":{}}}],["10.0.2",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":338,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"overview.html":{}}}],["2.3.1",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":640,"title":{},"body":{"license.html":{}}}],["3.0.1",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":710,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["4.11.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.1.0",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":708,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["8",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":709,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":673,"title":{},"body":{"license.html":{}}}],["access",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":697,"title":{},"body":{"license.html":{}}}],["aeiou",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alphabet",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":621,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":664,"title":{},"body":{"license.html":{}}}],["anthony",{"_index":635,"title":{},"body":{"index.html":{},"properties.html":{}}}],["api",{"_index":8,"title":{},"body":{"controllers/ApiController.html":{},"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.controller",{"_index":124,"title":{},"body":{"modules/ApiModule.html":{}}}],["api.service",{"_index":71,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{}}}],["api/api.module",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["apicontroller",{"_index":1,"title":{"controllers/ApiController.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"coverage.html":{}}}],["apimodule",{"_index":107,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apis",{"_index":590,"title":{},"body":{"index.html":{}}}],["apiservice",{"_index":70,"title":{"injectables/ApiService.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":488,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":492,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app_pipe",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":139,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":300,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["arising",{"_index":701,"title":{},"body":{"license.html":{}}}],["array(numconsonants)].map",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array(numvowels)].map",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":650,"title":{},"body":{"license.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["atleastone('digit",{"_index":277,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('lowercase",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('special",{"_index":278,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('uppercase",{"_index":279,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["auth.controller",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":402,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":406,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":172,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":408,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":409,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":438,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":113,"title":{"modules/AuthModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":721,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":690,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":184,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":83,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{}}}],["backers",{"_index":622,"title":{},"body":{"index.html":{}}}],["based",{"_index":715,"title":{},"body":{"properties.html":{}}}],["bcdfghjklmnpqrstvwxyz",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["body",{"_index":54,"title":{},"body":{"controllers/ApiController.html":{}}}],["bootstrap",{"_index":542,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":706,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":704,"title":{},"body":{"modules.html":{}}}],["c",{"_index":639,"title":{},"body":{"license.html":{}}}],["catch",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"classes/GameGateway.html":{}}}],["changed",{"_index":344,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["characters",{"_index":390,"title":{},"body":{"injectables/GamesService.html":{}}}],["charge",{"_index":645,"title":{},"body":{"license.html":{}}}],["claim",{"_index":693,"title":{},"body":{"license.html":{}}}],["class",{"_index":76,"title":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":260,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"overview.html":{}}}],["cleanup",{"_index":470,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client",{"_index":454,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.disconnect(true",{"_index":461,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.emit('error",{"_index":460,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.emit('welcome",{"_index":462,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.handshake.auth.token",{"_index":459,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["cluster_apimodule",{"_index":110,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_imports",{"_index":112,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_providers",{"_index":111,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_gamesmodule",{"_index":354,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_gamesmodule_exports",{"_index":355,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_gamesmodule_providers",{"_index":356,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_playmodule",{"_index":476,"title":{},"body":{"modules/PlayModule.html":{}}}],["cluster_playmodule_imports",{"_index":477,"title":{},"body":{"modules/PlayModule.html":{}}}],["cluster_usersmodule",{"_index":493,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":495,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":494,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["comes",{"_index":596,"title":{},"body":{"index.html":{}}}],["command",{"_index":718,"title":{},"body":{"properties.html":{}}}],["compare",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(pass",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["conditions",{"_index":672,"title":{},"body":{"license.html":{}}}],["configmodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":385,"title":{},"body":{"injectables/GamesService.html":{}}}],["connection",{"_index":702,"title":{},"body":{"license.html":{}}}],["connectuserdto",{"_index":259,"title":{"classes/ConnectUserDto.html":{}},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{}}}],["connectuserschema",{"_index":266,"title":{},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consonants",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consonants.length",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consonants[math.floor(math.random",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":86,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":77,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":294,"title":{},"body":{"classes/GameGateway.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{}}}],["constructor(prisma",{"_index":366,"title":{},"body":{"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":134,"title":{},"body":{"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["context",{"_index":407,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["context.gettype",{"_index":410,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":412,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtows().getclient",{"_index":415,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["contract",{"_index":698,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('api",{"_index":74,"title":{},"body":{"controllers/ApiController.html":{}}}],["controller('auth",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["copies",{"_index":666,"title":{},"body":{"license.html":{}}}],["copy",{"_index":648,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":638,"title":{},"body":{"license.html":{}}}],["cors",{"_index":315,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["coverage",{"_index":529,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":389,"title":{},"body":{"injectables/GamesService.html":{}}}],["creategame",{"_index":362,"title":{},"body":{"injectables/GamesService.html":{}}}],["creategame(...users",{"_index":368,"title":{},"body":{"injectables/GamesService.html":{}}}],["createuser",{"_index":12,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["createuser(@body",{"_index":94,"title":{},"body":{"controllers/ApiController.html":{}}}],["createuser(data",{"_index":19,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":20,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["createuserschema",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createzoddto",{"_index":263,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{}}}],["createzoddto(connectuserschema",{"_index":270,"title":{},"body":{"classes/ConnectUserDto.html":{}}}],["createzoddto(createuserschema.required",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["credentials",{"_index":325,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["ctx",{"_index":414,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ctx.handshake",{"_index":416,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cursor",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["damages",{"_index":694,"title":{},"body":{"license.html":{}}}],["data",{"_index":30,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["data.password",{"_index":135,"title":{},"body":{"injectables/ApiService.html":{}}}],["data.winner_id",{"_index":103,"title":{},"body":{"controllers/ApiController.html":{}}}],["deal",{"_index":652,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":703,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["default",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"classes/MatchmakeGateway.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["deleteuser",{"_index":499,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(where",{"_index":503,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":109,"title":{"dependencies.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":597,"title":{},"body":{"index.html":{}}}],["description",{"_index":582,"title":{},"body":{"index.html":{},"properties.html":{}}}],["designed",{"_index":716,"title":{},"body":{"properties.html":{}}}],["designer",{"_index":632,"title":{},"body":{"index.html":{}}}],["development",{"_index":605,"title":{},"body":{"index.html":{}}}],["dictionary",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":662,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":530,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["email",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":483,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":485,"title":{},"body":{"injectables/PrismaService.html":{}}}],["english",{"_index":719,"title":{},"body":{"properties.html":{}}}],["err",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"classes/GameGateway.html":{}}}],["error(`this",{"_index":417,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["event",{"_index":345,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"license.html":{}}}],["exclude",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["execution",{"_index":600,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":405,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["expiresin",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":75,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":560,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":269,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":434,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":595,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":651,"title":{},"body":{"license.html":{}}}],["find",{"_index":586,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":686,"title":{},"body":{"license.html":{}}}],["following",{"_index":671,"title":{},"body":{"license.html":{}}}],["found",{"_index":91,"title":{},"body":{"controllers/ApiController.html":{}}}],["framework",{"_index":593,"title":{},"body":{"index.html":{}}}],["free",{"_index":644,"title":{},"body":{"license.html":{}}}],["function",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":577,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":669,"title":{},"body":{"license.html":{}}}],["game",{"_index":61,"title":{},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"index.html":{},"properties.html":{}}}],["game.gateway",{"_index":480,"title":{},"body":{"modules/PlayModule.html":{}}}],["gamegateway",{"_index":284,"title":{"classes/GameGateway.html":{}},"body":{"classes/GameGateway.html":{},"modules/PlayModule.html":{},"coverage.html":{}}}],["gameid",{"_index":327,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{}}}],["gameover",{"_index":363,"title":{},"body":{"injectables/GamesService.html":{}}}],["gameover(gameid",{"_index":370,"title":{},"body":{"injectables/GamesService.html":{}}}],["games.service",{"_index":359,"title":{},"body":{"modules/GamesModule.html":{}}}],["games/games.module",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["gameservice",{"_index":79,"title":{},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["gamesmodule",{"_index":114,"title":{"modules/GamesModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["gamesservice",{"_index":72,"title":{"injectables/GamesService.html":{}},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{},"overview.html":{}}}],["gamestatus",{"_index":378,"title":{},"body":{"injectables/GamesService.html":{}}}],["gamestatus.ended",{"_index":396,"title":{},"body":{"injectables/GamesService.html":{}}}],["gamestatus.in_progress",{"_index":383,"title":{},"body":{"injectables/GamesService.html":{}}}],["generaterandomsequence",{"_index":379,"title":{},"body":{"injectables/GamesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('games/:id",{"_index":37,"title":{},"body":{"controllers/ApiController.html":{}}}],["get('hello",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('users",{"_index":81,"title":{},"body":{"controllers/ApiController.html":{}}}],["get('users/:id",{"_index":41,"title":{},"body":{"controllers/ApiController.html":{}}}],["get('users/:id/games",{"_index":44,"title":{},"body":{"controllers/ApiController.html":{}}}],["getallusers",{"_index":13,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame",{"_index":14,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame(@param('id",{"_index":97,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame(id",{"_index":35,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgamebyid",{"_index":364,"title":{},"body":{"injectables/GamesService.html":{}}}],["getgamebyid(id",{"_index":373,"title":{},"body":{"injectables/GamesService.html":{}}}],["getrequest",{"_index":403,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["getrequest(context",{"_index":404,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["getting",{"_index":579,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":15,"title":{},"body":{"controllers/ApiController.html":{}}}],["getuser(@param('id",{"_index":85,"title":{},"body":{"controllers/ApiController.html":{}}}],["getuser(id",{"_index":40,"title":{},"body":{"controllers/ApiController.html":{}}}],["getusergames",{"_index":16,"title":{},"body":{"controllers/ApiController.html":{},"injectables/GamesService.html":{}}}],["getusergames(@param('id",{"_index":92,"title":{},"body":{"controllers/ApiController.html":{}}}],["getusergames(id",{"_index":43,"title":{},"body":{"controllers/ApiController.html":{},"injectables/GamesService.html":{}}}],["granted",{"_index":643,"title":{},"body":{"license.html":{}}}],["grow",{"_index":617,"title":{},"body":{"index.html":{}}}],["guard",{"_index":418,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["guards",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleconnection",{"_index":291,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["handleconnection(client",{"_index":452,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["handleconnection(socket",{"_index":298,"title":{},"body":{"classes/GameGateway.html":{}}}],["handledisconnect",{"_index":292,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["handledisconnect(client",{"_index":455,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["handledisconnect(socket",{"_index":302,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlegamemoveorevent",{"_index":293,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlegamemoveorevent(data",{"_index":305,"title":{},"body":{"classes/GameGateway.html":{}}}],["hash",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{}}}],["hash(data.password",{"_index":136,"title":{},"body":{"injectables/ApiService.html":{}}}],["hello",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["hello(@request",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["hello(req",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["here",{"_index":584,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":642,"title":{},"body":{"license.html":{}}}],["holders",{"_index":691,"title":{},"body":{"license.html":{}}}],["http",{"_index":411,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["httpexception",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(err.message",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.bad_request",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":39,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{}}}],["identifier",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":435,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":286,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{}}}],["implied",{"_index":682,"title":{},"body":{"license.html":{}}}],["import",{"_index":53,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlayModule.html":{}}}],["improve",{"_index":717,"title":{},"body":{"properties.html":{}}}],["included",{"_index":676,"title":{},"body":{"license.html":{}}}],["including",{"_index":655,"title":{},"body":{"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":486,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":126,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injection",{"_index":598,"title":{},"body":{"index.html":{}}}],["installation",{"_index":602,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":604,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":713,"title":{},"body":{"properties.html":{}}}],["invalid",{"_index":324,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["isws",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["join",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["joined",{"_index":335,"title":{},"body":{"classes/GameGateway.html":{}}}],["josef",{"_index":629,"title":{},"body":{"index.html":{},"properties.html":{}}}],["jwt",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":65,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":433,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":202,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kind",{"_index":681,"title":{},"body":{"license.html":{}}}],["language",{"_index":720,"title":{},"body":{"properties.html":{}}}],["left",{"_index":346,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["liability",{"_index":695,"title":{},"body":{"license.html":{}}}],["liable",{"_index":692,"title":{},"body":{"license.html":{}}}],["license",{"_index":637,"title":{"license.html":{}},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":614,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":656,"title":{},"body":{"license.html":{}}}],["limited",{"_index":683,"title":{},"body":{"license.html":{}}}],["literal",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["local",{"_index":443,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":186,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":203,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["lol",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["lot",{"_index":594,"title":{},"body":{"index.html":{}}}],["macera",{"_index":630,"title":{},"body":{"index.html":{}}}],["made",{"_index":419,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["makemove",{"_index":365,"title":{},"body":{"injectables/GamesService.html":{}}}],["makemove(move",{"_index":376,"title":{},"body":{"injectables/GamesService.html":{}}}],["map",{"_index":450,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["markgameasover",{"_index":17,"title":{},"body":{"controllers/ApiController.html":{}}}],["markgameasover(@param('id",{"_index":101,"title":{},"body":{"controllers/ApiController.html":{}}}],["markgameasover(id",{"_index":47,"title":{},"body":{"controllers/ApiController.html":{}}}],["matched",{"_index":468,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["matching",{"_index":105,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matchmake",{"_index":458,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["matchmake.gateway",{"_index":479,"title":{},"body":{"modules/PlayModule.html":{}}}],["matchmakegateway",{"_index":446,"title":{"classes/MatchmakeGateway.html":{}},"body":{"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"coverage.html":{}}}],["max(100",{"_index":276,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":685,"title":{},"body":{"license.html":{}}}],["merge",{"_index":660,"title":{},"body":{"license.html":{}}}],["message",{"_index":331,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["messagebody",{"_index":309,"title":{},"body":{"classes/GameGateway.html":{}}}],["metadata",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["mikeal",{"_index":633,"title":{},"body":{"index.html":{},"properties.html":{}}}],["min(8",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":576,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":613,"title":{},"body":{"index.html":{},"properties.html":{}}}],["mode",{"_index":609,"title":{},"body":{"index.html":{}}}],["modify",{"_index":659,"title":{},"body":{"license.html":{}}}],["module",{"_index":106,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":108,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["montana",{"_index":636,"title":{},"body":{"index.html":{}}}],["more",{"_index":601,"title":{},"body":{"index.html":{}}}],["move",{"_index":352,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{}}}],["moves",{"_index":388,"title":{},"body":{"injectables/GamesService.html":{}}}],["name",{"_index":27,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["namespace",{"_index":316,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["nest",{"_index":592,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":60,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":313,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"dependencies.html":{}}}],["net",{"_index":457,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["new",{"_index":89,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{}}}],["newgame",{"_index":465,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["newgame.id",{"_index":469,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["newmove",{"_index":349,"title":{},"body":{"classes/GameGateway.html":{}}}],["noninfringement",{"_index":689,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":55,"title":{},"body":{"controllers/ApiController.html":{}}}],["notfoundexception('user",{"_index":90,"title":{},"body":{"controllers/ApiController.html":{}}}],["notice",{"_index":674,"title":{},"body":{"license.html":{}}}],["npm",{"_index":603,"title":{},"body":{"index.html":{}}}],["null",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["numconsonants",{"_index":548,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["numvowels",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":647,"title":{},"body":{"license.html":{}}}],["ongatewayconnection",{"_index":288,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["ongatewaydisconnect",{"_index":287,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["onmoduleinit",{"_index":484,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":615,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["orderby",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["otherwise",{"_index":700,"title":{},"body":{"license.html":{}}}],["out",{"_index":118,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":707,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":554,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":56,"title":{},"body":{"controllers/ApiController.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["particular",{"_index":687,"title":{},"body":{"license.html":{}}}],["pass",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":430,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":431,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["permission",{"_index":641,"title":{},"body":{"license.html":{}}}],["permit",{"_index":667,"title":{},"body":{"license.html":{}}}],["person",{"_index":646,"title":{},"body":{"license.html":{}}}],["persons",{"_index":668,"title":{},"body":{"license.html":{}}}],["picture",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/GamesService.html":{},"miscellaneous/variables.html":{}}}],["play",{"_index":317,"title":{},"body":{"classes/GameGateway.html":{}}}],["play/play.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["players",{"_index":384,"title":{},"body":{"injectables/GamesService.html":{}}}],["playmodule",{"_index":142,"title":{"modules/PlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["please",{"_index":624,"title":{},"body":{"index.html":{}}}],["points",{"_index":398,"title":{},"body":{"injectables/GamesService.html":{}}}],["portions",{"_index":678,"title":{},"body":{"license.html":{}}}],["post",{"_index":57,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["post('login",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('users",{"_index":23,"title":{},"body":{"controllers/ApiController.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["prisma",{"_index":62,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["prisma.movecreatemanyinput",{"_index":306,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{}}}],["prisma.service",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.usercreateinput",{"_index":96,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["prisma.userorderbywithrelationinput",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userupdateinput",{"_index":526,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereinput",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereuniqueinput",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma/client",{"_index":64,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":482,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":357,"title":{"injectables/PrismaService.html":{}},"body":{"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":78,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["process.env.jwt_secret",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":611,"title":{},"body":{"index.html":{}}}],["programmer",{"_index":628,"title":{},"body":{"index.html":{}}}],["project",{"_index":616,"title":{},"body":{"index.html":{}}}],["promise",{"_index":32,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":289,"title":{"properties.html":{}},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"properties.html":{}}}],["provide",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":679,"title":{},"body":{"license.html":{}}}],["providers",{"_index":120,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["publish",{"_index":661,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":688,"title":{},"body":{"license.html":{}}}],["put",{"_index":58,"title":{},"body":{"controllers/ApiController.html":{}}}],["put('games/:id/game_over",{"_index":48,"title":{},"body":{"controllers/ApiController.html":{}}}],["put('users/:id",{"_index":51,"title":{},"body":{"controllers/ApiController.html":{}}}],["randomconsonants",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomvowels",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomvowels.concat(randomconsonants",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":625,"title":{},"body":{"index.html":{}}}],["realime",{"_index":589,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["req",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["requests",{"_index":420,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["reset",{"_index":117,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["rest",{"_index":588,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":654,"title":{},"body":{"license.html":{}}}],["result",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":104,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":82,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["rights",{"_index":657,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["roomlength",{"_index":336,"title":{},"body":{"classes/GameGateway.html":{}}}],["rootpath",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["rule",{"_index":634,"title":{},"body":{"index.html":{}}}],["run",{"_index":606,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":471,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["s.disconnect(true",{"_index":473,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["scope",{"_index":599,"title":{},"body":{"index.html":{}}}],["secret",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":436,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":392,"title":{},"body":{"injectables/GamesService.html":{}}}],["sell",{"_index":665,"title":{},"body":{"license.html":{}}}],["seq",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seq.join",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":290,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"index.html":{}}}],["serveroot",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["shall",{"_index":675,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["skip",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["socket",{"_index":299,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["socket.disconnect(true",{"_index":326,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.emit('error",{"_index":323,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.emit('welcome",{"_index":330,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.emit('your",{"_index":341,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.handshake.auth.id",{"_index":328,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.handshake.auth.token",{"_index":321,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.io",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"dependencies.html":{}}}],["socket.join(game.id",{"_index":333,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.leave(room",{"_index":348,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.rooms.foreach((room",{"_index":347,"title":{},"body":{"classes/GameGateway.html":{}}}],["software",{"_index":649,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spellsword",{"_index":581,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["spellsword's",{"_index":587,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":619,"title":{},"body":{"index.html":{}}}],["src/.../connect",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../words.ts",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api.controller.ts",{"_index":6,"title":{},"body":{"controllers/ApiController.html":{},"coverage.html":{}}}],["src/api/api.controller.ts:26",{"_index":34,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:31",{"_index":42,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:40",{"_index":45,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:44",{"_index":25,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:51",{"_index":38,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:56",{"_index":52,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:66",{"_index":49,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.module.ts",{"_index":119,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/api/api.service.ts",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/api/api.service.ts:7",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/api/api.service.ts:9",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app.module.ts",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:10",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":122,"title":{},"body":{"modules/ApiModule.html":{},"modules/PlayModule.html":{}}}],["src/auth/auth.module.ts",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":314,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["src/auth/auth.service.ts",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards",{"_index":66,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/auth/guards/jwt",{"_index":401,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":437,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:15",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:6",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":439,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:12",{"_index":442,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":440,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/games/games.module",{"_index":125,"title":{},"body":{"modules/ApiModule.html":{},"modules/PlayModule.html":{}}}],["src/games/games.module.ts",{"_index":358,"title":{},"body":{"modules/GamesModule.html":{}}}],["src/games/games.service",{"_index":73,"title":{},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["src/games/games.service.ts",{"_index":361,"title":{},"body":{"injectables/GamesService.html":{},"coverage.html":{}}}],["src/games/games.service.ts:10",{"_index":369,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:25",{"_index":374,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:46",{"_index":377,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:50",{"_index":372,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:62",{"_index":375,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:7",{"_index":367,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/main.ts",{"_index":540,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models",{"_index":67,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{}}}],["src/models/user/connect",{"_index":261,"title":{},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/user/create",{"_index":271,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/play/game.gateway.ts",{"_index":285,"title":{},"body":{"classes/GameGateway.html":{},"coverage.html":{}}}],["src/play/game.gateway.ts:20",{"_index":295,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:25",{"_index":301,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:58",{"_index":297,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:60",{"_index":303,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:72",{"_index":308,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/matchmake.gateway.ts",{"_index":447,"title":{},"body":{"classes/MatchmakeGateway.html":{},"coverage.html":{}}}],["src/play/matchmake.gateway.ts:20",{"_index":448,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:26",{"_index":449,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:27",{"_index":451,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:28",{"_index":453,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:60",{"_index":456,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/play.module.ts",{"_index":478,"title":{},"body":{"modules/PlayModule.html":{}}}],["src/prisma.service",{"_index":360,"title":{},"body":{"modules/GamesModule.html":{},"injectables/GamesService.html":{},"modules/UsersModule.html":{}}}],["src/prisma.service.ts",{"_index":481,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma.service.ts:10",{"_index":487,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma.service.ts:6",{"_index":489,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/users.module",{"_index":123,"title":{},"body":{"modules/ApiModule.html":{},"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":496,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":69,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{}}}],["src/users/users.service.ts",{"_index":498,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:17",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:34",{"_index":502,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:40",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:51",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:6",{"_index":501,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/util/words",{"_index":380,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/util/words.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":607,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":610,"title":{},"body":{"index.html":{}}}],["start:prodsupport",{"_index":612,"title":{},"body":{"index.html":{}}}],["started",{"_index":580,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":382,"title":{},"body":{"injectables/GamesService.html":{}}}],["stay",{"_index":626,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":36,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":670,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":663,"title":{},"body":{"license.html":{}}}],["subscribemessage",{"_index":310,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["subscribemessage('moves",{"_index":307,"title":{},"body":{"classes/GameGateway.html":{}}}],["substantial",{"_index":677,"title":{},"body":{"license.html":{}}}],["super",{"_index":432,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":620,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":705,"title":{},"body":{"modules.html":{}}}],["table",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["thanks",{"_index":618,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":490,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":491,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.apiservice.createuser",{"_index":95,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.authservice.login(req.user",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":445,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.verify",{"_index":320,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["this.gameservice.creategame(...this.users.values",{"_index":466,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.gameservice.gameover(id",{"_index":102,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.gameservice.getgamebyid(gameid",{"_index":329,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.gameservice.getgamebyid(id",{"_index":98,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.gameservice.getusergames(id",{"_index":93,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.gameservice.makemove(data",{"_index":350,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.jwtservice.sign(payload",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.game.create",{"_index":381,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.game.findmany",{"_index":397,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.game.findunique",{"_index":391,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.game.update",{"_index":395,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.move.create",{"_index":394,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.user.create",{"_index":525,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":528,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":527,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.server.emit('match",{"_index":467,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.server.emit('users",{"_index":343,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["this.server.to(data.gameid).emit('new",{"_index":351,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.server.to(game.id).emit('player",{"_index":334,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.server.to(game.id).emit('ready",{"_index":339,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.server.to(game.id).fetchsockets()).length",{"_index":337,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.users.clear",{"_index":474,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.delete(client",{"_index":475,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.keys",{"_index":472,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.set(client",{"_index":463,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.size",{"_index":464,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.usersservice.createuser(data",{"_index":138,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.usersservice.updateuser",{"_index":100,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.usersservice.user",{"_index":87,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.users",{"_index":84,"title":{},"body":{"controllers/ApiController.html":{}}}],["throw",{"_index":88,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["timestamp",{"_index":393,"title":{},"body":{"injectables/GamesService.html":{}}}],["todo",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["tort",{"_index":699,"title":{},"body":{"license.html":{}}}],["touch",{"_index":627,"title":{},"body":{"index.html":{}}}],["transports",{"_index":318,"title":{},"body":{"classes/GameGateway.html":{}}}],["true",{"_index":322,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{}}}],["try",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"classes/GameGateway.html":{}}}],["turn",{"_index":342,"title":{},"body":{"classes/GameGateway.html":{}}}],["type",{"_index":28,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":631,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception",{"_index":444,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unknown",{"_index":46,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtStrategy.html":{}}}],["updateuser",{"_index":500,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(params",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusers",{"_index":18,"title":{},"body":{"controllers/ApiController.html":{}}}],["updateusers(@param('id",{"_index":99,"title":{},"body":{"controllers/ApiController.html":{}}}],["updateusers(id",{"_index":50,"title":{},"body":{"controllers/ApiController.html":{}}}],["use",{"_index":658,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":59,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":80,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('hello",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('users",{"_index":33,"title":{},"body":{"controllers/ApiController.html":{}}}],["useguards(localauthguard",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":63,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["user(userwhereuniqueinput",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":262,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.id",{"_index":387,"title":{},"body":{"injectables/GamesService.html":{}}}],["user.password",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":332,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["userid",{"_index":399,"title":{},"body":{"injectables/GamesService.html":{}}}],["username",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":340,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["users(params",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.map((user",{"_index":386,"title":{},"body":{"injectables/GamesService.html":{}}}],["users.service",{"_index":497,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":115,"title":{"modules/UsersModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":68,"title":{"injectables/UsersService.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwhereuniqueinput",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["uses",{"_index":591,"title":{},"body":{"index.html":{}}}],["validate",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":441,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"classes/MatchmakeGateway.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":722,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["verify(token",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyword",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":711,"title":{},"body":{"properties.html":{}}}],["void",{"_index":304,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["vowels",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vowels.length",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vowels[math.floor(math.random",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":684,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":680,"title":{},"body":{"license.html":{}}}],["watch",{"_index":608,"title":{},"body":{"index.html":{}}}],["web",{"_index":714,"title":{},"body":{"properties.html":{}}}],["websocket",{"_index":319,"title":{},"body":{"classes/GameGateway.html":{}}}],["websocketgateway",{"_index":311,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["websocketserver",{"_index":296,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["welcome",{"_index":583,"title":{},"body":{"index.html":{}}}],["whether",{"_index":696,"title":{},"body":{"license.html":{}}}],["winner",{"_index":400,"title":{},"body":{"injectables/GamesService.html":{}}}],["winnerid",{"_index":371,"title":{},"body":{"injectables/GamesService.html":{}}}],["without",{"_index":653,"title":{},"body":{"license.html":{}}}],["word",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws",{"_index":413,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["wsexception",{"_index":312,"title":{},"body":{"classes/GameGateway.html":{}}}],["wsexception(err",{"_index":353,"title":{},"body":{"classes/GameGateway.html":{}}}],["you'd",{"_index":623,"title":{},"body":{"index.html":{}}}],["you'll",{"_index":585,"title":{},"body":{"index.html":{}}}],["z",{"_index":264,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":267,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().email",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().min(6).max(20",{"_index":268,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().url",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["zod/z",{"_index":265,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{}}}],["zodvalidationpipe",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":116,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/ApiController.html":{"url":"controllers/ApiController.html","title":"controller - ApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getGame\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserGames\n                            \n                            \n                                    Async\n                                markGameAsOver\n                            \n                            \n                                    Async\n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('users')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('users')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('games/:id')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('users/:id')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserGames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserGames(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('users/:id/games')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        markGameAsOver\n                        \n                    \n                \n            \n            \n                \n                    \n                    markGameAsOver(id: string, data)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('games/:id/game_over')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUsers(id: string, data)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('users/:id')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { Game, Prisma, User } from '@prisma/client';\nimport { JwtAuthGuard } from 'src/auth/guards';\nimport { CreateUserDto } from 'src/models';\nimport { UsersService } from 'src/users/users.service';\nimport { ApiService } from './api.service';\nimport { GamesService } from 'src/games/games.service';\n@Controller('api')\nexport class ApiController {\n  constructor(\n    private usersService: UsersService,\n    private apiService: ApiService,\n    private gameService: GamesService,\n  ) {}\n  @UseGuards(JwtAuthGuard)\n  @Get('users')\n  async getAllUsers(): Promise {\n    return await this.usersService.users({});\n  }\n\n  @Get('users/:id')\n  async getUser(@Param('id') id: string): Promise {\n    const user = await this.usersService.user({ id });\n    if (!user) {\n      throw new NotFoundException('User with id ' + id + ' not found.');\n    }\n    return user;\n  }\n\n  @Get('users/:id/games')\n  async getUserGames(@Param('id') id: string) {\n    return await this.gameService.getUserGames(id);\n  }\n  @Post('users')\n  async createUser(@Body() data: CreateUserDto): Promise {\n    return await this.apiService.createUser({\n      ...(data as Prisma.UserCreateInput),\n    });\n  }\n\n  @Get('games/:id')\n  async getGame(@Param('id') id: string): Promise {\n    return await this.gameService.getGameById(id);\n  }\n\n  @Put('users/:id')\n  async updateUsers(@Param('id') id: string, @Body() data): Promise {\n    return this.usersService.updateUser({\n      where: {\n        id,\n      },\n      data,\n    });\n  }\n\n  @Put('games/:id/game_over')\n  async markGameAsOver(@Param('id') id: string, @Body() data): Promise {\n    return this.gameService.gameOver(id, data.winner_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_providers\n\n\n\ncluster_ApiModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nApiModule -->\n\nGamesModule->ApiModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nApiModule -->\n\nUsersModule->ApiModule\n\n\n\n\n\nApiService\n\nApiService\n\nApiModule -->\n\nApiService->ApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { ApiController } from './api.controller';\nimport { ApiService } from './api.service';\nimport { GamesModule } from 'src/games/games.module';\n\n@Module({\n  controllers: [ApiController],\n  providers: [ApiService],\n  imports: [UsersModule, AuthModule, GamesModule],\n})\nexport class ApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from 'src/models';\nimport { UsersService } from 'src/users/users.service';\nimport { hash } from 'bcrypt';\nimport { Prisma, User } from '@prisma/client';\n@Injectable()\nexport class ApiService {\n  constructor(private usersService: UsersService) {}\n  async createUser(data: CreateUserDto): Promise {\n    data.password = await hash(data.password, 10);\n    return await this.usersService.createUser(data as Prisma.UserCreateInput);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nAppModule -->\n\nGamesModule->AppModule\n\n\n\n\n\nPlayModule\n\nPlayModule\n\nAppModule -->\n\nPlayModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ApiModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                        \n                            PlayModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { ZodValidationPipe } from 'nestjs-zod';\nimport { ApiModule } from './api/api.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { PlayModule } from './play/play.module';\nimport { GamesModule } from './games/games.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    ApiModule,\n    UsersModule,\n    AuthModule,\n    PlayModule,\n    GamesModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n      exclude: ['/auth', '/api', '/socket.io'],\n      serveRoot: '/static',\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_PIPE,\n      useClass: ZodValidationPipe,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hello\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hello\n                        \n                    \n                \n            \n            \n                \n                    \n                    hello(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('hello')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Post, UseGuards, Get } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './guards/local-auth.guard';\nimport { JwtAuthGuard } from './guards';\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('hello')\n  async hello(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategies/jwt.strategy';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: 'lol',\n      signOptions: { expiresIn: '7d' },\n    }),\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(token: string, isWs)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isWs\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { compare } from 'bcrypt';\nimport { User } from '@prisma/client';\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.user({ username });\n    if (user && (await compare(pass, user.password))) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: User) {\n    const { password, ...payload } = user;\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  async verify(token: string, isWs = false): Promise {\n    try {\n      const payload = this.jwtService.verify(token, {\n        secret: process.env.JWT_SECRET,\n      });\n      const user = await this.usersService.user({\n        id: payload.id,\n      });\n\n      if (!user) {\n        if (isWs) {\n          return null;\n        } else {\n          throw new HttpException(\n            'Unauthorized access',\n            HttpStatus.BAD_REQUEST,\n          );\n        }\n      }\n\n      return user;\n    } catch (err: any) {\n      if (isWs) {\n        return null;\n      } else {\n        throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectUserDto.html":{"url":"classes/ConnectUserDto.html","title":"class - ConnectUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/connect-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from 'nestjs-zod';\nimport { z } from 'nestjs-zod/z';\n\nconst ConnectUserSchema = z.object({\n  username: z.string().min(6).max(20),\n});\n\nexport class ConnectUserDto extends createZodDto(ConnectUserSchema) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from 'nestjs-zod';\nimport { z } from 'nestjs-zod/z';\n\nconst CreateUserSchema = z.object({\n  username: z.string().min(6).max(20)!,\n  email: z.string().email(),\n  password: z\n    .password()\n    .min(8)\n    .max(100)\n    .atLeastOne('digit')\n    .atLeastOne('special')\n    .atLeastOne('uppercase')\n    .atLeastOne('lowercase'),\n  picture: z.string().url(),\n});\n\nexport class CreateUserDto extends createZodDto(CreateUserSchema.required()) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameGateway.html":{"url":"classes/GameGateway.html","title":"class - GameGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/play/game.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayDisconnect\n                        OnGatewayConnection\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                    Async\n                                handleGameMoveOrEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameService: GamesService)\n                    \n                \n                        \n                            \n                                Defined in src/play/game.gateway.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GamesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/play/game.gateway.ts:58\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleConnection(socket: Socket, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/play/game.gateway.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(socket: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/play/game.gateway.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleGameMoveOrEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleGameMoveOrEvent(data: Prisma.MoveCreateManyInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('moves')\n                \n            \n\n            \n                \n                    Defined in src/play/game.gateway.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.MoveCreateManyInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MessageBody,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  WsException,\n} from '@nestjs/websockets';\nimport { Socket, Server } from 'socket.io';\nimport { AuthService } from 'src/auth/auth.service';\nimport { User, Prisma } from '@prisma/client';\nimport { GamesService } from 'src/games/games.service';\n\n@WebSocketGateway({\n  cors: '*:*',\n  namespace: 'play',\n  transports: ['websocket'],\n})\nexport class GameGateway implements OnGatewayDisconnect, OnGatewayConnection {\n  constructor(\n    private authService: AuthService,\n    private gameService: GamesService,\n  ) {}\n  async handleConnection(socket: Socket, ...args: any[]) {\n    const user: User = await this.authService.verify(\n      socket.handshake.auth.token,\n      true,\n    );\n    if (!user) {\n      socket.emit('error', 'Invalid credentials.');\n      socket.disconnect(true);\n      return;\n    }\n    const gameId = socket.handshake.auth.id;\n\n    const game = await this.gameService.getGameById(gameId);\n\n    socket.emit('welcome', {\n      message: `Hello, ${user.username!}`,\n      game,\n    });\n\n    await socket.join(game.id);\n    this.server.to(game.id).emit('player-joined', {\n      user,\n    });\n\n    const roomLength = (await this.server.to(game.id).fetchSockets()).length;\n    if (roomLength >= 2) {\n      this.server.to(game.id).emit('ready', {\n        message: 'all users joined!',\n      });\n      socket.emit('your-turn');\n    }\n  }\n  @WebSocketServer()\n  server: Server;\n\n  handleDisconnect(socket: Socket) {\n    this.server.emit('users-changed', {\n      event: 'left',\n    });\n    socket.rooms.forEach((room) => {\n      socket.leave(room);\n    });\n\n    socket.disconnect(true);\n  }\n\n  @SubscribeMessage('moves')\n  async handleGameMoveOrEvent(\n    @MessageBody()\n    data: Prisma.MoveCreateManyInput,\n  ) {\n    try {\n      const newMove = await this.gameService.makeMove(data);\n      this.server.to(data.gameId).emit('new-move', {\n        data,\n      });\n    } catch (err) {\n      throw new WsException(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GamesModule.html":{"url":"modules/GamesModule.html","title":"module - GamesModule","body":"\n                   \n\n\n\n\n    Modules\n    GamesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GamesModule\n\n\n\ncluster_GamesModule_exports\n\n\n\ncluster_GamesModule_providers\n\n\n\n\nGamesService \n\nGamesService \n\n\n\nGamesModule\n\nGamesModule\n\nGamesService  -->\n\nGamesModule->GamesService \n\n\n\n\n\nGamesService\n\nGamesService\n\nGamesModule -->\n\nGamesService->GamesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nGamesModule -->\n\nPrismaService->GamesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/games/games.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GamesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GamesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GamesService } from './games.service';\nimport { PrismaService } from 'src/prisma.service';\n\n@Module({\n  providers: [GamesService, PrismaService],\n  exports: [GamesService],\n})\nexport class GamesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamesService.html":{"url":"injectables/GamesService.html","title":"injectable - GamesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/games/games.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                gameOver\n                            \n                            \n                                    Async\n                                getGameById\n                            \n                            \n                                    Async\n                                getUserGames\n                            \n                            \n                                    Async\n                                makeMove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/games/games.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(...users: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    users\n                                    \n                                            User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        gameOver\n                        \n                    \n                \n            \n            \n                \n                    \n                    gameOver(gameId: string, winnerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gameId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    winnerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGameById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGameById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserGames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserGames(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        makeMove\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeMove(move: Prisma.MoveCreateManyInput)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    move\n                                    \n                                            Prisma.MoveCreateManyInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User, Game, GameStatus, Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma.service';\nimport { generateRandomSequence } from 'src/util/words';\n\n@Injectable()\nexport class GamesService {\n  constructor(private prisma: PrismaService) {}\n\n  async createGame(...users: User[]): Promise {\n    return await this.prisma.game.create({\n      data: {\n        status: GameStatus.IN_PROGRESS,\n        players: {\n          connect: users.map((user) => {\n            return { id: user.id };\n          }),\n        },\n        moves: { create: [] },\n        characters: generateRandomSequence(),\n      },\n    });\n  }\n\n  async getGameById(id: string): Promise {\n    return await this.prisma.game.findUnique({\n      where: {\n        id,\n      },\n      select: {\n        timestamp: true,\n        id: true,\n        characters: true,\n        status: true,\n        winnerId: true,\n        players: {\n          select: {\n            username: true,\n            picture: true,\n          },\n        },\n      },\n    });\n  }\n\n  async makeMove(move: Prisma.MoveCreateManyInput) {\n    return await this.prisma.move.create({ data: { ...move } });\n  }\n\n  async gameOver(gameId: string, winnerId: string) {\n    return this.prisma.game.update({\n      where: {\n        id: gameId,\n      },\n      data: {\n        winnerId,\n        status: GameStatus.ENDED,\n      },\n    });\n  }\n\n  async getUserGames(id: string) {\n    return await this.prisma.game.findMany({\n      where: {\n        players: {\n          some: {\n            id,\n          },\n        },\n      },\n      select: {\n        timestamp: true,\n        characters: true,\n        moves: {\n          select: {\n            points: true,\n            userId: true,\n          },\n        },\n        players: {\n          select: {\n            username: true,\n            id: true,\n          },\n        },\n        id: true,\n        winner: {\n          select: {\n            username: true,\n          },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const type = context.getType();\n    if (type === 'http') {\n      return context.switchToHttp().getRequest();\n    } else if (type === 'ws') {\n      const ctx = context.switchToWs().getClient();\n      return ctx.handshake;\n    } else {\n      throw new Error(`This guard was not made for ${type} requests`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload) {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchmakeGateway.html":{"url":"classes/MatchmakeGateway.html","title":"class - MatchmakeGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchmakeGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/play/matchmake.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayDisconnect\n                        OnGatewayConnection\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameService: GamesService)\n                    \n                \n                        \n                            \n                                Defined in src/play/matchmake.gateway.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GamesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/play/matchmake.gateway.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/play/matchmake.gateway.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleConnection(client: Socket, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/play/matchmake.gateway.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/play/matchmake.gateway.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Socket } from 'socket.io';\nimport { Server } from 'net';\nimport { AuthService } from 'src/auth/auth.service';\nimport { User } from '@prisma/client';\nimport { GamesService } from 'src/games/games.service';\n\n@WebSocketGateway({\n  cors: '*:*',\n  namespace: 'matchmake',\n})\nexport class MatchmakeGateway\n  implements OnGatewayDisconnect, OnGatewayConnection\n{\n  constructor(\n    private authService: AuthService,\n    private gameService: GamesService,\n  ) {}\n  @WebSocketServer()\n  server: Server;\n  users = new Map();\n  async handleConnection(client: Socket, ...args: any[]) {\n    const user: User = await this.authService.verify(\n      client.handshake.auth.token,\n      true,\n    );\n    if (!user) {\n      client.emit('error', 'Invalid credentials.');\n      client.disconnect(true);\n      return;\n    }\n    client.emit('welcome', {\n      message: `Hello, ${user.username}!`,\n    });\n\n    this.users.set(client, user);\n    if (this.users.size == 2) {\n      const newGame = await this.gameService.createGame(...this.users.values());\n\n      this.server.emit('match', {\n        message: 'You have been matched!',\n        id: newGame.id,\n      });\n\n      // cleanup\n\n      for (const s of this.users.keys()) {\n        s.disconnect(true);\n      }\n      this.users.clear();\n    }\n  }\n\n  handleDisconnect(client: Socket) {\n    this.users.delete(client);\n    this.server.emit('users-changed', {\n      event: 'left',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayModule.html":{"url":"modules/PlayModule.html","title":"module - PlayModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PlayModule\n\n\n\ncluster_PlayModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nPlayModule\n\nPlayModule\n\nPlayModule -->\n\nAuthModule->PlayModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nPlayModule -->\n\nGamesModule->PlayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/play/play.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MatchmakeGateway } from './matchmake.gateway';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { GamesModule } from 'src/games/games.module';\nimport { GameGateway } from './game.gateway';\n\n@Module({\n  providers: [MatchmakeGateway, GameGateway],\n  imports: [AuthModule, GamesModule],\n})\nexport class PlayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma.service';\nimport { UsersService } from './users.service';\n\n@Module({\n  providers: [UsersService, PrismaService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                user\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: Prisma.UserCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.UserCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(where: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(userWhereUniqueInput: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userWhereUniqueInput\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma.service';\nimport { User, Prisma } from '@prisma/client';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) {}\n\n  async user(\n    userWhereUniqueInput: Prisma.UserWhereUniqueInput,\n  ): Promise {\n    return this.prisma.user.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  async users(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.UserWhereUniqueInput;\n    where?: Prisma.UserWhereInput;\n    orderBy?: Prisma.UserOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.user.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  async createUser(data: Prisma.UserCreateInput): Promise {\n    return this.prisma.user.create({\n      data,\n    });\n  }\n\n  async updateUser(params: {\n    where: Prisma.UserWhereUniqueInput;\n    data: Prisma.UserUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.user.update({\n      data,\n      where,\n    });\n  }\n\n  async deleteUser(where: Prisma.UserWhereUniqueInput): Promise {\n    return this.prisma.user.delete({\n      where,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/api.controller.ts\n            \n            controller\n            ApiController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/games/games.service.ts\n            \n            injectable\n            GamesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/connect-user.dto.ts\n            \n            class\n            ConnectUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/connect-user.dto.ts\n            \n            variable\n            ConnectUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/create-user.dto.ts\n            \n            variable\n            CreateUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/play/game.gateway.ts\n            \n            class\n            GameGateway\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/play/matchmake.gateway.ts\n            \n            class\n            MatchmakeGateway\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            alphabet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            consonants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            generateRandomSequence\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            numConsonants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            numVowels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            verifyWord\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            vowels\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-socket.io : ^9.4.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @nestjs/websockets : ^9.4.0\n        \n            @prisma/client : ^4.11.0\n        \n            bcrypt : ^5.1.0\n        \n            nestjs-zod : ^1.2.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSpellsword API Documentation\nDescription\nWelcome! Here, you'll find the documentation for Spellsword's REST and Realime APIs. The server uses the Nest framework. which has a lot of features when it comes to dependency injection, scope, execution context, and more.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodSupport\nSpellsword is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nProgrammer Josef Macera\nUI Designer Mikeal Macera\nGame Rule Designer Anthony Montana\n\nLicense\nSpellsword is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2023 Spellsword\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GamesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\ncluster_ApiModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GamesModule\n\n\n\ncluster_GamesModule_exports\n\n\n\ncluster_GamesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nPlayModule\n\nPlayModule\n\nPlayModule -->\n\nAuthModule->PlayModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nGamesModule\n\nGamesModule\n\nApiModule -->\n\nGamesModule->ApiModule\n\n\n\nPlayModule -->\n\nGamesModule->PlayModule\n\n\n\nAppModule -->\n\nGamesModule->AppModule\n\n\n\n\n\nGamesService \n\nGamesService \n\nGamesService  -->\n\nGamesModule->GamesService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nApiModule -->\n\nUsersModule->ApiModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nApiModule -->\n\nApiService->ApiModule\n\n\n\nAppModule -->\n\nPlayModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nGamesService\n\nGamesService\n\nGamesModule -->\n\nGamesService->GamesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nGamesModule -->\n\nPrismaService->GamesModule\n\n\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Spellsword is an interactive web-based game designed to improve our command of the English language.\n        \n            License : MIT\n        \n            Author : Josef, Mikeal & Anthony\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alphabet   (src/.../words.ts)\n                        \n                        \n                            ConnectUserSchema   (src/.../connect-user.dto.ts)\n                        \n                        \n                            consonants   (src/.../words.ts)\n                        \n                        \n                            CreateUserSchema   (src/.../create-user.dto.ts)\n                        \n                        \n                            generateRandomSequence   (src/.../words.ts)\n                        \n                        \n                            numConsonants   (src/.../words.ts)\n                        \n                        \n                            numVowels   (src/.../words.ts)\n                        \n                        \n                            verifyWord   (src/.../words.ts)\n                        \n                        \n                            vowels   (src/.../words.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/words.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alphabet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : consonants + vowels\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consonants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BCDFGHJKLMNPQRSTVWXYZ'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomSequence\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const randomVowels = [...Array(numVowels)].map(\n    () => vowels[Math.floor(Math.random() * vowels.length)],\n  );\n  const randomConsonants = [...Array(numConsonants)].map(\n    () => consonants[Math.floor(Math.random() * consonants.length)],\n  );\n  const seq = randomVowels.concat(randomConsonants);\n  return seq.join('');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numConsonants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numVowels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyWord\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (word: string): Promise => {\n  // TODO: use dictionary API to verify word\n  return false;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vowels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AEIOU'\n                    \n                \n\n\n        \n    \n\n    src/models/user/connect-user.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConnectUserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  username: z.string().min(6).max(20),\n})\n                    \n                \n\n\n        \n    \n\n    src/models/user/create-user.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateUserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  username: z.string().min(6).max(20)!,\n  email: z.string().email(),\n  password: z\n    .password()\n    .min(8)\n    .max(100)\n    .atLeastOne('digit')\n    .atLeastOne('special')\n    .atLeastOne('uppercase')\n    .atLeastOne('lowercase'),\n  picture: z.string().url(),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
