var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/ApiController.html",[0,1.753,1,1.961]],["body/controllers/ApiController.html",[0,1.018,1,1.789,2,1.018,3,0.2,4,0.173,5,0.173,6,1.491,7,1.491,8,1.289,9,0.396,10,0.826,11,1.709,12,2.026,13,3.955,14,2.825,15,2.825,16,2.344,17,2.825,18,2.825,19,1.289,20,2.24,21,3.023,22,0.036,23,2.825,24,1.395,25,1.798,26,1.334,27,1.334,28,1.334,29,1.334,30,2.947,31,1.395,32,2.496,33,1.798,34,1.798,35,1.798,36,3.169,37,2.825,38,1.798,39,3.506,40,1.798,41,2.825,42,1.798,43,1.491,44,2.825,45,1.798,46,1.018,47,1.798,48,2.825,49,1.798,50,1.798,51,2.825,52,1.798,53,0.531,54,3.49,55,1.798,56,1.798,57,1.491,58,1.798,59,1.491,60,0.29,61,1.289,62,1.018,63,1.665,64,0.69,65,1.018,66,1.798,67,1.491,68,1.469,69,1.491,70,1.782,71,1.491,72,1.189,73,1.289,74,1.798,75,0.2,76,0.074,77,0.69,78,2.21,79,1.289,80,1.491,81,1.798,82,1.395,83,1.81,84,1.798,85,1.798,86,0.63,87,1.491,88,1.018,89,0.832,90,1.798,91,1.798,92,1.798,93,1.798,94,1.798,95,1.798,96,1.289,97,1.798,98,1.798,99,1.798,100,1.798,101,1.798,102,1.798,103,1.798,104,0.016,105,0.016]],["title/modules/ApiModule.html",[106,0.905,107,1.753]],["body/modules/ApiModule.html",[1,3.116,2,2.473,3,0.363,4,0.314,5,0.314,22,0.035,53,0.627,60,0.527,70,2.876,71,2.709,75,0.363,76,0.135,104,0.025,105,0.025,106,1.276,107,3.44,108,1.253,109,1.676,110,2.709,111,2.709,112,2.709,113,2.607,114,2.607,115,2.607,116,2.021,117,1.511,118,1.511,119,3.265,120,2.229,121,2.766,122,2.709,123,2.709,124,3.265,125,2.709]],["title/injectables/ApiService.html",[70,1.581,126,0.445]],["body/injectables/ApiService.html",[3,0.367,4,0.317,5,0.317,9,0.728,10,1.285,11,1.446,12,3.155,19,3.155,20,2.988,22,0.035,24,1.285,26,1.285,27,1.285,28,1.285,29,1.285,30,1.869,31,0.965,32,2.036,53,0.611,60,0.533,62,1.869,63,1.39,64,1.267,67,2.738,68,2.379,69,2.738,70,2.246,75,0.367,76,0.137,77,1.267,82,0.965,83,1.852,96,2.367,104,0.025,105,0.025,126,0.633,127,1.157,128,2.738,129,2.738,130,3.301,131,3.301,132,3.301,133,2.367,134,1.869,135,3.301,136,3.301,137,3.301,138,3.301]],["title/modules/AppModule.html",[106,0.905,139,1.961]],["body/modules/AppModule.html",[3,0.306,4,0.264,5,0.264,8,1.973,22,0.036,53,0.65,60,0.444,75,0.306,76,0.114,104,0.022,105,0.022,106,1.134,107,3.028,108,1.056,109,1.49,113,2.474,114,2.474,115,2.474,116,1.796,117,1.273,118,1.273,120,1.404,121,2.458,139,3.795,140,2.282,141,2.282,142,3.028,143,2.751,144,3.882,145,2.282,146,3.882,147,1.742,148,1.742,149,2.751,150,2.751,151,2.751,152,2.751,153,2.282,154,2.751,155,2.751,156,2.751,157,2.282,158,3.22,159,2.282,160,2.751,161,2.751,162,2.751,163,2.751,164,2.751,165,2.751,166,2.751,167,2.282,168,1.742,169,2.751,170,2.751,171,2.751]],["title/controllers/AuthController.html",[0,1.753,172,1.961]],["body/controllers/AuthController.html",[0,1.81,2,1.81,3,0.355,4,0.307,5,0.307,7,2.651,9,0.705,10,1.258,11,1.636,21,2.726,22,0.035,24,1.258,26,1.258,27,1.258,29,1.258,31,1.258,46,2.438,53,0.579,57,2.651,59,2.651,60,0.516,65,1.81,75,0.355,76,0.132,80,2.651,82,1.258,104,0.024,105,0.024,134,1.81,167,2.651,172,2.726,173,2.651,174,3.087,175,3.571,176,3.196,177,3.196,178,3.196,179,5.208,180,3.196,181,3.196,182,3.196,183,3.196,184,1.868,185,2.292,186,2.024,187,3.196,188,3.196,189,3.196,190,3.196,191,3.196,192,3.196,193,3.196,194,3.196,195,3.196,196,3.196,197,3.196]],["title/modules/AuthModule.html",[106,0.905,113,1.433]],["body/modules/AuthModule.html",[2,2.291,3,0.325,4,0.28,5,0.28,22,0.035,53,0.633,60,0.471,75,0.325,76,0.121,104,0.023,105,0.023,106,1.182,108,1.12,109,1.553,113,2.781,115,2.521,116,1.872,117,1.351,118,1.351,120,2.066,121,2.562,123,2.421,172,2.941,184,2.29,185,2.093,198,2.421,199,2.421,200,2.421,201,2.919,202,3.085,203,3.085,204,2.919,205,2.902,206,4.046,207,1.49,208,2.919,209,2.919,210,2.919,211,2.093,212,2.919,213,2.919,214,2.421,215,2.919,216,2.919,217,2.919,218,2.919]],["title/injectables/AuthService.html",[126,0.445,184,1.188]],["body/injectables/AuthService.html",[3,0.236,4,0.204,5,0.204,9,0.469,10,0.94,11,1.562,22,0.036,24,1.263,26,1.263,27,1.263,28,1.263,29,1.263,31,1.133,32,2,36,3.026,39,1.347,46,1.204,53,0.516,60,0.343,63,2.361,64,0.816,68,2.055,75,0.236,76,0.088,77,1.234,78,2.036,82,1.427,83,1.632,86,1.627,87,2.667,88,1.821,89,1.488,104,0.018,105,0.018,126,0.462,127,0.745,129,1.764,133,1.525,175,2.667,184,1.234,211,1.525,214,1.764,219,1.764,220,3.215,221,2.667,222,5.07,223,2.126,224,3.215,225,2.126,226,3.215,227,3.877,228,2.126,229,1.642,230,3.215,231,4.642,232,2.126,233,1.525,234,1.525,235,2.126,236,2.306,237,3.215,238,2.126,239,2.126,240,2.126,241,2.126,242,2.126,243,2.036,244,3.215,245,3.877,246,2.667,247,2.126,248,2.126,249,1.764,250,2.126,251,1.764,252,2.126,253,2.126,254,2.126,255,3.215,256,1.764,257,1.764,258,2.126]],["title/classes/ConnectUserDto.html",[76,0.128,259,2.221]],["body/classes/ConnectUserDto.html",[3,0.465,4,0.402,5,0.402,22,0.035,53,0.569,75,0.465,76,0.173,86,1.466,104,0.029,105,0.029,147,3.241,148,2.649,229,2.135,259,3.67,260,2.369,261,3,262,2.649,263,3.469,264,3,265,3.469,266,3,267,3,268,3,269,1.936,270,4.183]],["title/classes/CreateUserDto.html",[20,1.753,76,0.128]],["body/classes/CreateUserDto.html",[3,0.439,4,0.379,5,0.379,20,2.796,22,0.034,53,0.549,75,0.439,76,0.163,86,1.383,104,0.028,105,0.028,147,3.126,148,2.499,229,2.015,243,3.126,260,2.235,262,2.499,263,3.273,264,3.54,265,3.273,267,2.83,268,2.83,269,1.826,271,2.83,272,2.83,273,3.273,274,3.273,275,3.273,276,3.273,277,3.273,278,3.273,279,3.273,280,3.273,281,2.83,282,3.273,283,3.946]],["title/classes/GameGateway.html",[76,0.128,284,1.961]],["body/classes/GameGateway.html",[3,0.224,4,0.194,5,0.194,9,0.445,10,0.903,11,1.398,21,1.957,22,0.036,24,1.325,26,1.229,27,1.229,28,1.325,29,1.229,30,2.126,31,1.097,53,0.504,61,2.216,62,1.143,63,1.909,64,0.774,72,1.771,73,1.447,75,0.224,76,0.084,77,1.186,78,1.957,79,2.692,82,0.59,83,1.909,86,1.589,88,1.143,89,0.934,104,0.017,105,0.017,168,1.278,174,1.447,184,1.836,249,1.674,256,1.674,257,1.674,260,1.143,284,1.957,285,1.674,286,2.216,287,3.114,288,3.114,289,1.957,290,3.431,291,2.563,292,2.563,293,3.754,294,1.447,295,2.018,296,3.114,297,2.018,298,3.09,299,4.367,300,3.114,301,2.018,302,3.09,303,2.018,304,1.674,305,2.018,306,3.114,307,3.09,308,2.018,309,3.09,310,1.674,311,2.563,312,2.018,313,1.447,314,1.674,315,1.674,316,1.674,317,2.018,318,2.018,319,2.018,320,1.674,321,2.018,322,1.447,323,2.018,324,1.674,325,1.674,326,3.09,327,1.674,328,2.018,329,2.018,330,2.018,331,2.563,332,1.674,333,2.018,334,2.018,335,3.09,336,3.09,337,2.018,338,1.447,339,2.018,340,1.278,341,2.018,342,2.018,343,1.674,344,1.674,345,1.674,346,1.674,347,2.018,348,2.018,349,2.018,350,2.018,351,2.018,352,1.674,353,2.018]],["title/modules/GamesModule.html",[106,0.905,114,1.433]],["body/modules/GamesModule.html",[3,0.402,4,0.347,5,0.347,22,0.035,53,0.575,60,0.584,72,2.597,75,0.402,76,0.15,104,0.026,105,0.026,106,1.365,108,1.388,109,1.793,114,2.794,116,2.161,117,1.674,118,1.674,120,2.384,205,3.349,354,3,355,3,356,3,357,2.44,358,3.616,359,3.616,360,2.594]],["title/injectables/GamesService.html",[72,1.303,126,0.445]],["body/injectables/GamesService.html",[3,0.206,4,0.178,5,0.178,9,0.408,10,0.844,11,1.645,16,2.396,22,0.036,24,1.349,26,1.349,27,1.349,28,1.349,29,1.349,30,2.012,31,1.273,32,1.859,36,3.075,39,3.248,43,2.396,46,2.012,53,0.447,60,0.298,61,1.326,62,2.012,63,1.691,64,0.71,72,1.216,75,0.206,76,0.077,77,0.71,82,1.349,83,1.691,104,0.016,105,0.016,126,0.415,127,0.648,134,1.047,229,1.814,281,1.326,306,2.948,322,4.037,327,2.396,340,1.171,352,2.396,357,1.691,360,1.326,361,1.534,362,2.888,363,2.888,364,2.888,365,2.888,366,1.534,367,1.849,368,2.888,369,1.849,370,2.888,371,4.357,372,1.849,373,2.888,374,1.849,375,1.849,376,2.888,377,1.849,378,1.849,379,2.071,380,1.849,381,1.849,382,3.554,383,1.849,384,4.016,385,1.849,386,1.849,387,1.849,388,2.888,389,1.849,390,3.554,391,1.849,392,4.617,393,2.888,394,1.849,395,1.849,396,1.849,397,1.849,398,1.849,399,1.849,400,1.849]],["title/injectables/JwtAuthGuard.html",[65,1.753,126,0.445]],["body/injectables/JwtAuthGuard.html",[3,0.381,4,0.329,5,0.329,9,0.755,10,1.317,22,0.035,24,1.001,26,1.001,27,1.001,28,1.626,29,1.001,31,1.001,53,0.501,60,0.553,65,2.553,75,0.381,76,0.142,82,1.317,86,1.58,88,1.94,89,1.585,104,0.025,105,0.025,126,0.648,127,1.2,207,1.749,269,1.585,401,3.739,402,2.457,403,4.508,404,4.508,405,5.354,406,3.425,407,3.425,408,2.841,409,3.425,410,3.425,411,3.425,412,3.425,413,3.425,414,3.425,415,3.425,416,3.425,417,3.425,418,3.425,419,3.425,420,3.425]],["title/injectables/JwtStrategy.html",[126,0.445,202,1.753]],["body/injectables/JwtStrategy.html",[3,0.396,4,0.342,5,0.342,9,0.785,10,1.351,11,1.5,22,0.035,24,1.351,26,1.04,27,1.04,29,1.04,31,1.04,46,2.016,53,0.571,60,0.574,75,0.396,76,0.147,77,1.971,82,1.04,104,0.026,105,0.026,126,0.665,127,1.247,202,2.618,207,1.817,236,2.553,246,3.834,251,2.953,269,1.647,421,2.953,422,3.834,423,3.56,424,4.623,425,3.56,426,3.56,427,2.953,428,2.553,429,2.953,430,2.953,431,2.953,432,2.953,433,3.56,434,3.56,435,3.56,436,3.56]],["title/injectables/LocalAuthGuard.html",[126,0.445,186,1.961]],["body/injectables/LocalAuthGuard.html",[3,0.483,4,0.417,5,0.417,22,0.034,53,0.582,60,0.701,75,0.483,76,0.18,104,0.029,105,0.029,126,0.753,127,1.522,186,3.315,207,2.217,269,2.01,402,3.114,408,3.602,437,3.602,438,4.343]],["title/injectables/LocalStrategy.html",[126,0.445,203,1.753]],["body/injectables/LocalStrategy.html",[3,0.353,4,0.305,5,0.305,9,0.7,10,1.252,11,1.417,22,0.035,24,1.252,26,1.252,27,1.252,28,1.252,29,1.252,31,0.928,32,1.983,36,3.164,53,0.578,60,0.512,63,2.042,75,0.353,76,0.131,77,1.218,82,0.928,83,1.336,86,1.112,88,1.797,89,1.469,104,0.024,105,0.024,126,0.616,127,1.112,134,1.797,184,2.145,185,2.276,203,2.426,207,1.62,229,1.62,243,3.289,269,1.469,294,2.276,422,3.554,427,2.633,428,2.276,430,2.633,431,2.633,432,2.633,439,2.633,440,3.174,441,4.285,442,3.174,443,2.633,444,4.285,445,3.174]],["title/classes/MatchmakeGateway.html",[76,0.128,446,1.961]],["body/classes/MatchmakeGateway.html",[3,0.252,4,0.217,5,0.217,9,0.499,10,0.985,11,1.177,21,1.434,22,0.036,24,1.393,26,1.177,27,1.177,28,1.303,29,1.177,31,0.985,39,1.434,53,0.556,63,2.007,64,0.869,72,1.878,73,1.624,75,0.252,76,0.094,77,1.294,78,2.134,79,2.887,82,0.662,83,1.419,86,1.411,89,1.56,104,0.019,105,0.019,168,1.434,174,1.624,184,1.919,233,1.624,234,1.624,260,1.282,286,2.417,287,3.34,288,3.34,289,2.134,290,3.585,291,2.796,292,2.796,294,1.624,296,3.34,299,4.294,300,3.34,304,1.878,310,1.878,311,2.796,313,1.624,314,1.878,315,1.878,316,1.878,320,1.878,322,1.624,324,1.878,325,1.878,331,2.796,332,1.878,338,1.624,340,2.55,343,1.878,344,1.878,345,1.878,346,1.878,446,2.134,447,1.878,448,2.264,449,2.264,450,3.37,451,2.264,452,3.37,453,2.264,454,3.37,455,3.37,456,2.264,457,2.264,458,2.264,459,2.264,460,2.264,461,2.264,462,2.264,463,2.264,464,2.264,465,2.264,466,2.264,467,2.264,468,2.264,469,2.264,470,2.264,471,2.264,472,2.264,473,2.264,474,2.264,475,2.264]],["title/modules/PlayModule.html",[106,0.905,142,1.753]],["body/modules/PlayModule.html",[3,0.399,4,0.345,5,0.345,22,0.035,53,0.628,60,0.579,75,0.399,76,0.149,104,0.026,105,0.026,106,1.358,108,1.377,109,1.783,113,2.676,114,2.676,116,2.15,117,1.66,118,1.66,120,1.832,121,2.942,122,2.976,125,2.976,142,3.379,284,2.942,446,2.942,476,3.588,477,3.588,478,3.588,479,3.588,480,3.588]],["title/injectables/PrismaService.html",[126,0.445,357,1.303]],["body/injectables/PrismaService.html",[3,0.384,4,0.331,5,0.331,9,0.761,10,1.324,11,1.705,22,0.035,24,1.324,26,1.009,27,1.009,28,1.009,29,1.009,31,1.324,53,0.504,60,0.557,64,1.325,75,0.384,76,0.143,83,1.907,104,0.025,105,0.025,126,0.651,127,1.21,269,2.096,286,2.475,357,1.907,481,2.863,482,5.057,483,4.53,484,5.723,485,4.53,486,5.37,487,3.451,488,2.863,489,3.451,490,3.451,491,3.451,492,3.451]],["title/modules/UsersModule.html",[106,0.905,115,1.433]],["body/modules/UsersModule.html",[3,0.402,4,0.347,5,0.347,22,0.035,53,0.575,60,0.584,68,2.597,75,0.402,76,0.15,104,0.026,105,0.026,106,1.365,108,1.388,109,1.793,115,2.794,116,2.161,117,1.674,118,1.674,120,2.384,205,3.349,357,2.44,360,2.594,493,3,494,3,495,3,496,3.616,497,3.616]],["title/injectables/UsersService.html",[68,1.303,126,0.445]],["body/injectables/UsersService.html",[3,0.247,4,0.214,5,0.214,9,0.491,10,0.972,11,1.703,12,2.386,19,2.386,22,0.036,24,1.451,26,1.451,27,1.451,28,1.61,29,1.451,30,2.681,31,1.383,32,2.55,53,0.443,60,0.359,62,2.257,63,1.862,64,0.854,68,1.401,75,0.247,76,0.092,77,0.854,82,1.383,86,1.166,96,2.858,104,0.019,105,0.019,126,0.478,127,0.78,134,1.26,340,2.107,357,1.862,366,1.846,498,1.846,499,3.327,500,3.327,501,2.225,502,2.225,503,3.327,504,5.293,505,2.225,506,3.327,507,4.422,508,2.225,509,4.422,510,2.225,511,2.225,512,3.985,513,3.327,514,2.225,515,2.225,516,2.225,517,3.985,518,2.76,519,3.985,520,3.985,521,2.225,522,3.985,523,2.225,524,2.225,525,2.225,526,2.225,527,2.225,528,2.225]],["title/coverage.html",[529,3.022]],["body/coverage.html",[0,2.108,1,1.643,5,0.249,6,2.152,20,1.469,22,0.035,28,0.758,65,1.469,68,1.092,70,1.324,72,1.092,76,0.197,89,1.2,104,0.021,105,0.021,126,0.809,128,2.152,172,1.643,173,2.152,184,0.996,186,1.643,202,1.469,203,1.469,219,2.152,259,1.86,261,2.67,262,3.013,266,1.86,271,2.67,272,1.86,284,1.643,285,2.152,357,1.092,361,2.152,379,1.86,401,2.152,402,2.67,421,2.152,437,2.152,439,2.152,446,1.643,447,2.152,481,2.152,498,2.152,529,1.86,530,2.594,531,2.594,532,2.594,533,6.208,534,2.594,535,5.038,536,2.594,537,2.594,538,5.892,539,3.723,540,2.152,541,2.594,542,2.152,543,5.627,544,3.723,545,4.481,546,2.152,547,2.152,548,2.152,549,2.152,550,2.152,551,2.152,552,2.594,553,2.594]],["title/dependencies.html",[109,1.428,554,2.15]],["body/dependencies.html",[22,0.036,60,0.593,64,1.411,104,0.026,105,0.026,109,1.411,133,2.636,145,3.048,147,2.327,148,2.327,153,3.048,157,3.048,158,3.048,168,2.327,207,1.876,211,2.636,313,2.636,428,3.738,429,3.048,443,3.048,555,5.212,556,3.675,557,3.675,558,3.675,559,4.719,560,3.675,561,4.719,562,3.675,563,3.675,564,3.675,565,3.675,566,3.675,567,3.675,568,3.675,569,3.675,570,3.675,571,3.675,572,3.675,573,3.675,574,3.675,575,3.675]],["title/miscellaneous/functions.html",[576,1.641,577,3.086]],["body/miscellaneous/functions.html",[9,1.037,22,0.031,104,0.031,105,0.031,540,3.9,542,4.821,576,2.978,577,3.9,578,4.702]],["title/index.html",[9,0.571,579,2.592,580,2.592]],["body/index.html",[4,0.315,22,0.035,104,0.025,105,0.025,159,2.718,290,2.35,488,2.718,529,2.35,581,3.277,582,3.277,583,4.378,584,3.277,585,3.277,586,3.277,587,3.277,588,3.277,589,2.718,590,4.929,591,3.277,592,3.277,593,3.277,594,3.277,595,5.759,596,3.277,597,3.277,598,5.64,599,3.277,600,3.277,601,4.378,602,3.277,603,3.277,604,3.277,605,3.277,606,4.378,607,4.378,608,3.277,609,3.277,610,3.277,611,4.378,612,4.378,613,3.277,614,3.277,615,3.277,616,3.277,617,3.277,618,2.718,619,3.277,620,3.277,621,3.277,622,3.277,623,3.277,624,3.277,625,3.277,626,3.277,627,3.277,628,2.718,629,3.277,630,3.277,631,3.277,632,3.277,633,3.277,634,3.277,635,2.718]],["title/modules.html",[108,1.617]],["body/modules.html",[22,0.029,104,0.029,105,0.029,107,2.38,108,1.613,113,1.944,114,1.944,115,1.944,139,2.661,142,2.38,618,4.994,636,6.02,637,6.02,638,6.02]],["title/overview.html",[639,3.495]],["body/overview.html",[2,1.539,22,0.035,68,2.305,70,2.281,72,2.305,104,0.022,105,0.022,107,3.304,108,1.043,109,1.477,110,2.255,111,2.255,112,2.255,113,2.768,114,2.67,115,2.67,116,1.781,117,1.258,118,1.258,127,0.953,139,3.731,140,2.255,141,2.255,142,3.101,184,2.102,198,2.255,199,2.255,200,2.255,202,2.53,203,2.53,260,1.539,338,1.949,354,2.255,355,2.255,356,2.255,357,2.046,493,2.255,494,2.255,495,2.255,639,2.255,640,2.718,641,2.718,642,2.718]],["title/properties.html",[289,2.356,554,2.15]],["body/properties.html",[22,0.035,104,0.031,105,0.031,289,2.932,589,3.841,628,3.841,635,3.841,643,4.63,644,4.63,645,4.63]],["title/miscellaneous/variables.html",[576,1.641,646,3.086]],["body/miscellaneous/variables.html",[8,1.944,9,0.597,11,0.792,22,0.036,28,1.418,32,1.254,36,2.526,82,1.122,86,1.563,104,0.022,105,0.022,221,2.248,229,1.961,233,4.078,234,4.078,236,1.944,243,2.432,261,1.944,262,3.073,264,1.944,266,2.754,267,2.754,268,2.754,271,1.944,272,2.754,273,2.248,274,2.248,275,2.248,276,2.248,277,2.248,278,2.248,279,2.248,280,2.248,281,1.944,282,2.248,379,2.754,518,3.186,545,2.248,546,3.186,547,3.7,548,3.186,549,3.186,550,3.186,551,3.7,576,1.716,646,2.248,647,5.471,648,2.71,649,2.71,650,2.71,651,2.71,652,2.71,653,2.71,654,2.71,655,2.71,656,2.71,657,2.71,658,2.71,659,2.71,660,2.71,661,2.71,662,2.71,663,2.71,664,3.841,665,2.71,666,2.71,667,2.71,668,2.71]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":644,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":137,"title":{},"body":{"injectables/ApiService.html":{}}}],["10.0.2",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":338,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"overview.html":{}}}],["2.3.1",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":642,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["4.11.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.1.0",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":640,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["8",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":641,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["aeiou",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alphabet",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":619,"title":{},"body":{"index.html":{}}}],["api",{"_index":8,"title":{},"body":{"controllers/ApiController.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["api.controller",{"_index":124,"title":{},"body":{"modules/ApiModule.html":{}}}],["api.service",{"_index":71,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{}}}],["api/api.module",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["apicontroller",{"_index":1,"title":{"controllers/ApiController.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"coverage.html":{}}}],["apimodule",{"_index":107,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apiservice",{"_index":70,"title":{"injectables/ApiService.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":488,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":492,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app_pipe",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":588,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":139,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":300,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["array(numconsonants)].map",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array(numvowels)].map",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["atleastone('digit",{"_index":277,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('lowercase",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('special",{"_index":278,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('uppercase",{"_index":279,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["auth.controller",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":402,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":406,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":172,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":408,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":409,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":438,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":113,"title":{"modules/AuthModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":628,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":184,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":83,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{}}}],["backers",{"_index":620,"title":{},"body":{"index.html":{}}}],["bcdfghjklmnpqrstvwxyz",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["body",{"_index":54,"title":{},"body":{"controllers/ApiController.html":{}}}],["bootstrap",{"_index":542,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":638,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":636,"title":{},"body":{"modules.html":{}}}],["building",{"_index":584,"title":{},"body":{"index.html":{}}}],["catch",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"classes/GameGateway.html":{}}}],["changed",{"_index":344,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["characters",{"_index":390,"title":{},"body":{"injectables/GamesService.html":{}}}],["class",{"_index":76,"title":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":260,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"overview.html":{}}}],["cleanup",{"_index":470,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client",{"_index":454,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.disconnect(true",{"_index":461,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.emit('error",{"_index":460,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.emit('welcome",{"_index":462,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.handshake.auth.token",{"_index":459,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["cluster_apimodule",{"_index":110,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_imports",{"_index":112,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_providers",{"_index":111,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_gamesmodule",{"_index":354,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_gamesmodule_exports",{"_index":355,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_gamesmodule_providers",{"_index":356,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_playmodule",{"_index":476,"title":{},"body":{"modules/PlayModule.html":{}}}],["cluster_playmodule_imports",{"_index":477,"title":{},"body":{"modules/PlayModule.html":{}}}],["cluster_usersmodule",{"_index":493,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":495,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":494,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["compare",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(pass",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["configmodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":385,"title":{},"body":{"injectables/GamesService.html":{}}}],["connectuserdto",{"_index":259,"title":{"classes/ConnectUserDto.html":{}},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{}}}],["connectuserschema",{"_index":266,"title":{},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consonants",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consonants.length",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consonants[math.floor(math.random",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":86,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":77,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":294,"title":{},"body":{"classes/GameGateway.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{}}}],["constructor(prisma",{"_index":366,"title":{},"body":{"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":134,"title":{},"body":{"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["context",{"_index":407,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gettype",{"_index":410,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":412,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtows().getclient",{"_index":415,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('api",{"_index":74,"title":{},"body":{"controllers/ApiController.html":{}}}],["controller('auth",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["cors",{"_index":315,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["coverage",{"_index":529,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":389,"title":{},"body":{"injectables/GamesService.html":{}}}],["creategame",{"_index":362,"title":{},"body":{"injectables/GamesService.html":{}}}],["creategame(...users",{"_index":368,"title":{},"body":{"injectables/GamesService.html":{}}}],["createuser",{"_index":12,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["createuser(@body",{"_index":94,"title":{},"body":{"controllers/ApiController.html":{}}}],["createuser(data",{"_index":19,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":20,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["createuserschema",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createzoddto",{"_index":263,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{}}}],["createzoddto(connectuserschema",{"_index":270,"title":{},"body":{"classes/ConnectUserDto.html":{}}}],["createzoddto(createuserschema.required",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["credentials",{"_index":325,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["ctx",{"_index":414,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ctx.handshake",{"_index":416,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cursor",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["data",{"_index":30,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["data.password",{"_index":135,"title":{},"body":{"injectables/ApiService.html":{}}}],["data.winner_id",{"_index":103,"title":{},"body":{"controllers/ApiController.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["default",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"classes/MatchmakeGateway.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["deleteuser",{"_index":499,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(where",{"_index":503,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":109,"title":{"dependencies.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":589,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":597,"title":{},"body":{"index.html":{}}}],["dictionary",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":608,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":585,"title":{},"body":{"index.html":{}}}],["email",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":483,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":485,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"classes/GameGateway.html":{}}}],["error(`this",{"_index":417,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["event",{"_index":345,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["exclude",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["executioncontext",{"_index":405,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["expiresin",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":75,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":269,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":434,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["found",{"_index":91,"title":{},"body":{"controllers/ApiController.html":{}}}],["framework",{"_index":583,"title":{},"body":{"index.html":{}}}],["function",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":577,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":61,"title":{},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{}}}],["game.gateway",{"_index":480,"title":{},"body":{"modules/PlayModule.html":{}}}],["gamegateway",{"_index":284,"title":{"classes/GameGateway.html":{}},"body":{"classes/GameGateway.html":{},"modules/PlayModule.html":{},"coverage.html":{}}}],["gameid",{"_index":327,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{}}}],["gameover",{"_index":363,"title":{},"body":{"injectables/GamesService.html":{}}}],["gameover(gameid",{"_index":370,"title":{},"body":{"injectables/GamesService.html":{}}}],["games.service",{"_index":359,"title":{},"body":{"modules/GamesModule.html":{}}}],["games/games.module",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["gameservice",{"_index":79,"title":{},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["gamesmodule",{"_index":114,"title":{"modules/GamesModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["gamesservice",{"_index":72,"title":{"injectables/GamesService.html":{}},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{},"overview.html":{}}}],["gamestatus",{"_index":378,"title":{},"body":{"injectables/GamesService.html":{}}}],["gamestatus.ended",{"_index":396,"title":{},"body":{"injectables/GamesService.html":{}}}],["gamestatus.in_progress",{"_index":383,"title":{},"body":{"injectables/GamesService.html":{}}}],["generaterandomsequence",{"_index":379,"title":{},"body":{"injectables/GamesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('games/:id",{"_index":37,"title":{},"body":{"controllers/ApiController.html":{}}}],["get('hello",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('users",{"_index":81,"title":{},"body":{"controllers/ApiController.html":{}}}],["get('users/:id",{"_index":41,"title":{},"body":{"controllers/ApiController.html":{}}}],["get('users/:id/games",{"_index":44,"title":{},"body":{"controllers/ApiController.html":{}}}],["getallusers",{"_index":13,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame",{"_index":14,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame(@param('id",{"_index":97,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame(id",{"_index":35,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgamebyid",{"_index":364,"title":{},"body":{"injectables/GamesService.html":{}}}],["getgamebyid(id",{"_index":373,"title":{},"body":{"injectables/GamesService.html":{}}}],["getrequest",{"_index":403,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["getrequest(context",{"_index":404,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["getting",{"_index":579,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":15,"title":{},"body":{"controllers/ApiController.html":{}}}],["getuser(@param('id",{"_index":85,"title":{},"body":{"controllers/ApiController.html":{}}}],["getuser(id",{"_index":40,"title":{},"body":{"controllers/ApiController.html":{}}}],["getusergames",{"_index":16,"title":{},"body":{"controllers/ApiController.html":{},"injectables/GamesService.html":{}}}],["getusergames(@param('id",{"_index":92,"title":{},"body":{"controllers/ApiController.html":{}}}],["getusergames(id",{"_index":43,"title":{},"body":{"controllers/ApiController.html":{},"injectables/GamesService.html":{}}}],["grow",{"_index":615,"title":{},"body":{"index.html":{}}}],["guard",{"_index":418,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["guards",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleconnection",{"_index":291,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["handleconnection(client",{"_index":452,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["handleconnection(socket",{"_index":298,"title":{},"body":{"classes/GameGateway.html":{}}}],["handledisconnect",{"_index":292,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["handledisconnect(client",{"_index":455,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["handledisconnect(socket",{"_index":302,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlegamemoveorevent",{"_index":293,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlegamemoveorevent(data",{"_index":305,"title":{},"body":{"classes/GameGateway.html":{}}}],["hash",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{}}}],["hash(data.password",{"_index":136,"title":{},"body":{"injectables/ApiService.html":{}}}],["hello",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["hello(@request",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["hello(req",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["here",{"_index":625,"title":{},"body":{"index.html":{}}}],["http",{"_index":411,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["httpexception",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(err.message",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":632,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.bad_request",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":39,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{}}}],["identifier",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":435,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":286,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":53,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlayModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":486,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":126,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":594,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":596,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":324,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["isws",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["join",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["joined",{"_index":335,"title":{},"body":{"classes/GameGateway.html":{}}}],["jwt",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":65,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":433,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":202,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":629,"title":{},"body":{"index.html":{}}}],["left",{"_index":346,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["license",{"_index":635,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":612,"title":{},"body":{"index.html":{}}}],["literal",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["local",{"_index":443,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":186,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":203,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["lol",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["made",{"_index":419,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["makemove",{"_index":365,"title":{},"body":{"injectables/GamesService.html":{}}}],["makemove(move",{"_index":376,"title":{},"body":{"injectables/GamesService.html":{}}}],["map",{"_index":450,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["markgameasover",{"_index":17,"title":{},"body":{"controllers/ApiController.html":{}}}],["markgameasover(@param('id",{"_index":101,"title":{},"body":{"controllers/ApiController.html":{}}}],["markgameasover(id",{"_index":47,"title":{},"body":{"controllers/ApiController.html":{}}}],["matched",{"_index":468,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["matching",{"_index":105,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matchmake",{"_index":458,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["matchmake.gateway",{"_index":479,"title":{},"body":{"modules/PlayModule.html":{}}}],["matchmakegateway",{"_index":446,"title":{"classes/MatchmakeGateway.html":{}},"body":{"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"coverage.html":{}}}],["max(100",{"_index":276,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":331,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["messagebody",{"_index":309,"title":{},"body":{"classes/GameGateway.html":{}}}],["metadata",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["min(8",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":576,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":611,"title":{},"body":{"index.html":{}}}],["mode",{"_index":601,"title":{},"body":{"index.html":{}}}],["module",{"_index":106,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":108,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":624,"title":{},"body":{"index.html":{}}}],["move",{"_index":352,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{}}}],["moves",{"_index":388,"title":{},"body":{"injectables/GamesService.html":{}}}],["myśliwiec",{"_index":630,"title":{},"body":{"index.html":{}}}],["name",{"_index":27,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["namespace",{"_index":316,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["nest",{"_index":590,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":634,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":60,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":313,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"dependencies.html":{}}}],["net",{"_index":457,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["new",{"_index":89,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{}}}],["newgame",{"_index":465,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["newgame.id",{"_index":469,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["newmove",{"_index":349,"title":{},"body":{"classes/GameGateway.html":{}}}],["node.js",{"_index":582,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":55,"title":{},"body":{"controllers/ApiController.html":{}}}],["notfoundexception('user",{"_index":90,"title":{},"body":{"controllers/ApiController.html":{}}}],["npm",{"_index":595,"title":{},"body":{"index.html":{}}}],["null",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["numconsonants",{"_index":548,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["numvowels",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ongatewayconnection",{"_index":288,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["ongatewaydisconnect",{"_index":287,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["onmoduleinit",{"_index":484,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":613,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["orderby",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["out",{"_index":118,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":639,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":554,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":56,"title":{},"body":{"controllers/ApiController.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["pass",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":430,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":431,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["picture",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/GamesService.html":{},"miscellaneous/variables.html":{}}}],["play",{"_index":317,"title":{},"body":{"classes/GameGateway.html":{}}}],["play/play.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["players",{"_index":384,"title":{},"body":{"injectables/GamesService.html":{}}}],["playmodule",{"_index":142,"title":{"modules/PlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["please",{"_index":622,"title":{},"body":{"index.html":{}}}],["points",{"_index":398,"title":{},"body":{"injectables/GamesService.html":{}}}],["post",{"_index":57,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["post('login",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('users",{"_index":23,"title":{},"body":{"controllers/ApiController.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["prisma",{"_index":62,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["prisma.movecreatemanyinput",{"_index":306,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{}}}],["prisma.service",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.usercreateinput",{"_index":96,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["prisma.userorderbywithrelationinput",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userupdateinput",{"_index":526,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereinput",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereuniqueinput",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma/client",{"_index":64,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":482,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":357,"title":{"injectables/PrismaService.html":{}},"body":{"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":78,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["process.env.jwt_secret",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":603,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":581,"title":{},"body":{"index.html":{}}}],["project",{"_index":614,"title":{},"body":{"index.html":{}}}],["promise",{"_index":32,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":289,"title":{"properties.html":{}},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"properties.html":{}}}],["provide",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":120,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["put",{"_index":58,"title":{},"body":{"controllers/ApiController.html":{}}}],["put('games/:id/game_over",{"_index":48,"title":{},"body":{"controllers/ApiController.html":{}}}],["put('users/:id",{"_index":51,"title":{},"body":{"controllers/ApiController.html":{}}}],["randomconsonants",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomvowels",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomvowels.concat(randomconsonants",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":623,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":593,"title":{},"body":{"index.html":{}}}],["req",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["requests",{"_index":420,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["reset",{"_index":117,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":104,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":82,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["roomlength",{"_index":336,"title":{},"body":{"classes/GameGateway.html":{}}}],["rootpath",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":598,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":471,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["s.disconnect(true",{"_index":473,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["scalable",{"_index":586,"title":{},"body":{"index.html":{}}}],["secret",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":436,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":392,"title":{},"body":{"injectables/GamesService.html":{}}}],["seq",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seq.join",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":290,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"index.html":{}}}],["serveroot",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":587,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["skip",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["socket",{"_index":299,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["socket.disconnect(true",{"_index":326,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.emit('error",{"_index":323,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.emit('welcome",{"_index":330,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.emit('your",{"_index":341,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.handshake.auth.id",{"_index":328,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.handshake.auth.token",{"_index":321,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.io",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"dependencies.html":{}}}],["socket.join(game.id",{"_index":333,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.leave(room",{"_index":348,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.rooms.foreach((room",{"_index":347,"title":{},"body":{"classes/GameGateway.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":617,"title":{},"body":{"index.html":{}}}],["src/.../connect",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../words.ts",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api.controller.ts",{"_index":6,"title":{},"body":{"controllers/ApiController.html":{},"coverage.html":{}}}],["src/api/api.controller.ts:26",{"_index":34,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:31",{"_index":42,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:40",{"_index":45,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:44",{"_index":25,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:51",{"_index":38,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:56",{"_index":52,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:66",{"_index":49,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.module.ts",{"_index":119,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/api/api.service.ts",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/api/api.service.ts:7",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/api/api.service.ts:9",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app.module.ts",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:10",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":122,"title":{},"body":{"modules/ApiModule.html":{},"modules/PlayModule.html":{}}}],["src/auth/auth.module.ts",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":314,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["src/auth/auth.service.ts",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards",{"_index":66,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/auth/guards/jwt",{"_index":401,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":437,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:15",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:6",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":439,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:12",{"_index":442,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":440,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/games/games.module",{"_index":125,"title":{},"body":{"modules/ApiModule.html":{},"modules/PlayModule.html":{}}}],["src/games/games.module.ts",{"_index":358,"title":{},"body":{"modules/GamesModule.html":{}}}],["src/games/games.service",{"_index":73,"title":{},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["src/games/games.service.ts",{"_index":361,"title":{},"body":{"injectables/GamesService.html":{},"coverage.html":{}}}],["src/games/games.service.ts:10",{"_index":369,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:25",{"_index":374,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:46",{"_index":377,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:50",{"_index":372,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:62",{"_index":375,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:7",{"_index":367,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/main.ts",{"_index":540,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models",{"_index":67,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{}}}],["src/models/user/connect",{"_index":261,"title":{},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/user/create",{"_index":271,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/play/game.gateway.ts",{"_index":285,"title":{},"body":{"classes/GameGateway.html":{},"coverage.html":{}}}],["src/play/game.gateway.ts:20",{"_index":295,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:25",{"_index":301,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:58",{"_index":297,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:60",{"_index":303,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:72",{"_index":308,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/matchmake.gateway.ts",{"_index":447,"title":{},"body":{"classes/MatchmakeGateway.html":{},"coverage.html":{}}}],["src/play/matchmake.gateway.ts:20",{"_index":448,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:26",{"_index":449,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:27",{"_index":451,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:28",{"_index":453,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:60",{"_index":456,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/play.module.ts",{"_index":478,"title":{},"body":{"modules/PlayModule.html":{}}}],["src/prisma.service",{"_index":360,"title":{},"body":{"modules/GamesModule.html":{},"injectables/GamesService.html":{},"modules/UsersModule.html":{}}}],["src/prisma.service.ts",{"_index":481,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma.service.ts:10",{"_index":487,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma.service.ts:6",{"_index":489,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/users.module",{"_index":123,"title":{},"body":{"modules/ApiModule.html":{},"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":496,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":69,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{}}}],["src/users/users.service.ts",{"_index":498,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:17",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:34",{"_index":502,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:40",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:51",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:6",{"_index":501,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/util/words",{"_index":380,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/util/words.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":599,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":602,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":604,"title":{},"body":{"index.html":{}}}],["started",{"_index":580,"title":{"index.html":{}},"body":{}}],["starter",{"_index":592,"title":{},"body":{"index.html":{}}}],["statements",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":382,"title":{},"body":{"injectables/GamesService.html":{}}}],["stay",{"_index":626,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":36,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["subscribemessage",{"_index":310,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["subscribemessage('moves",{"_index":307,"title":{},"body":{"classes/GameGateway.html":{}}}],["super",{"_index":432,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":618,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":637,"title":{},"body":{"modules.html":{}}}],["table",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["test",{"_index":607,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":610,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":609,"title":{},"body":{"index.html":{}}}],["tests",{"_index":606,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":616,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":490,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":491,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.apiservice.createuser",{"_index":95,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.authservice.login(req.user",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":445,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.verify",{"_index":320,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["this.gameservice.creategame(...this.users.values",{"_index":466,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.gameservice.gameover(id",{"_index":102,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.gameservice.getgamebyid(gameid",{"_index":329,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.gameservice.getgamebyid(id",{"_index":98,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.gameservice.getusergames(id",{"_index":93,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.gameservice.makemove(data",{"_index":350,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.jwtservice.sign(payload",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.game.create",{"_index":381,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.game.findmany",{"_index":397,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.game.findunique",{"_index":391,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.game.update",{"_index":395,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.move.create",{"_index":394,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.user.create",{"_index":525,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":528,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":527,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.server.emit('match",{"_index":467,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.server.emit('users",{"_index":343,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["this.server.to(data.gameid).emit('new",{"_index":351,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.server.to(game.id).emit('player",{"_index":334,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.server.to(game.id).emit('ready",{"_index":339,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.server.to(game.id).fetchsockets()).length",{"_index":337,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.users.clear",{"_index":474,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.delete(client",{"_index":475,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.keys",{"_index":472,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.set(client",{"_index":463,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.size",{"_index":464,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.usersservice.createuser(data",{"_index":138,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.usersservice.updateuser",{"_index":100,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.usersservice.user",{"_index":87,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.users",{"_index":84,"title":{},"body":{"controllers/ApiController.html":{}}}],["throw",{"_index":88,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["timestamp",{"_index":393,"title":{},"body":{"injectables/GamesService.html":{}}}],["todo",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":627,"title":{},"body":{"index.html":{}}}],["transports",{"_index":318,"title":{},"body":{"classes/GameGateway.html":{}}}],["true",{"_index":322,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{}}}],["try",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"classes/GameGateway.html":{}}}],["turn",{"_index":342,"title":{},"body":{"classes/GameGateway.html":{}}}],["twitter",{"_index":633,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":591,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception",{"_index":444,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unit",{"_index":605,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":46,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":645,"title":{},"body":{"properties.html":{}}}],["updateuser",{"_index":500,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(params",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusers",{"_index":18,"title":{},"body":{"controllers/ApiController.html":{}}}],["updateusers(@param('id",{"_index":99,"title":{},"body":{"controllers/ApiController.html":{}}}],["updateusers(id",{"_index":50,"title":{},"body":{"controllers/ApiController.html":{}}}],["use",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":59,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":80,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('hello",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('users",{"_index":33,"title":{},"body":{"controllers/ApiController.html":{}}}],["useguards(localauthguard",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":63,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["user(userwhereuniqueinput",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":262,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.id",{"_index":387,"title":{},"body":{"injectables/GamesService.html":{}}}],["user.password",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":332,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["userid",{"_index":399,"title":{},"body":{"injectables/GamesService.html":{}}}],["username",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":340,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["users(params",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.map((user",{"_index":386,"title":{},"body":{"injectables/GamesService.html":{}}}],["users.service",{"_index":497,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":115,"title":{"modules/UsersModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":68,"title":{"injectables/UsersService.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwhereuniqueinput",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["validate",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":441,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"classes/MatchmakeGateway.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":646,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["verify(token",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyword",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":643,"title":{},"body":{"properties.html":{}}}],["void",{"_index":304,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["vowels",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vowels.length",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vowels[math.floor(math.random",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":600,"title":{},"body":{"index.html":{}}}],["website",{"_index":631,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":319,"title":{},"body":{"classes/GameGateway.html":{}}}],["websocketgateway",{"_index":311,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["websocketserver",{"_index":296,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["winner",{"_index":400,"title":{},"body":{"injectables/GamesService.html":{}}}],["winnerid",{"_index":371,"title":{},"body":{"injectables/GamesService.html":{}}}],["word",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws",{"_index":413,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["wsexception",{"_index":312,"title":{},"body":{"classes/GameGateway.html":{}}}],["wsexception(err",{"_index":353,"title":{},"body":{"classes/GameGateway.html":{}}}],["you'd",{"_index":621,"title":{},"body":{"index.html":{}}}],["z",{"_index":264,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":267,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().email",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().min(6).max(20",{"_index":268,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().url",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["zod/z",{"_index":265,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{}}}],["zodvalidationpipe",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":116,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/ApiController.html":{"url":"controllers/ApiController.html","title":"controller - ApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getGame\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserGames\n                            \n                            \n                                    Async\n                                markGameAsOver\n                            \n                            \n                                    Async\n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('users')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('users')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('games/:id')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('users/:id')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserGames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserGames(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('users/:id/games')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        markGameAsOver\n                        \n                    \n                \n            \n            \n                \n                    \n                    markGameAsOver(id: string, data)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('games/:id/game_over')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUsers(id: string, data)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('users/:id')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { Game, Prisma, User } from '@prisma/client';\nimport { JwtAuthGuard } from 'src/auth/guards';\nimport { CreateUserDto } from 'src/models';\nimport { UsersService } from 'src/users/users.service';\nimport { ApiService } from './api.service';\nimport { GamesService } from 'src/games/games.service';\n@Controller('api')\nexport class ApiController {\n  constructor(\n    private usersService: UsersService,\n    private apiService: ApiService,\n    private gameService: GamesService,\n  ) {}\n  @UseGuards(JwtAuthGuard)\n  @Get('users')\n  async getAllUsers(): Promise {\n    return await this.usersService.users({});\n  }\n\n  @Get('users/:id')\n  async getUser(@Param('id') id: string): Promise {\n    const user = await this.usersService.user({ id });\n    if (!user) {\n      throw new NotFoundException('User with id ' + id + ' not found.');\n    }\n    return user;\n  }\n\n  @Get('users/:id/games')\n  async getUserGames(@Param('id') id: string) {\n    return await this.gameService.getUserGames(id);\n  }\n  @Post('users')\n  async createUser(@Body() data: CreateUserDto): Promise {\n    return await this.apiService.createUser({\n      ...(data as Prisma.UserCreateInput),\n    });\n  }\n\n  @Get('games/:id')\n  async getGame(@Param('id') id: string): Promise {\n    return await this.gameService.getGameById(id);\n  }\n\n  @Put('users/:id')\n  async updateUsers(@Param('id') id: string, @Body() data): Promise {\n    return this.usersService.updateUser({\n      where: {\n        id,\n      },\n      data,\n    });\n  }\n\n  @Put('games/:id/game_over')\n  async markGameAsOver(@Param('id') id: string, @Body() data): Promise {\n    return this.gameService.gameOver(id, data.winner_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_providers\n\n\n\ncluster_ApiModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nApiModule -->\n\nGamesModule->ApiModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nApiModule -->\n\nUsersModule->ApiModule\n\n\n\n\n\nApiService\n\nApiService\n\nApiModule -->\n\nApiService->ApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { ApiController } from './api.controller';\nimport { ApiService } from './api.service';\nimport { GamesModule } from 'src/games/games.module';\n\n@Module({\n  controllers: [ApiController],\n  providers: [ApiService],\n  imports: [UsersModule, AuthModule, GamesModule],\n})\nexport class ApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from 'src/models';\nimport { UsersService } from 'src/users/users.service';\nimport { hash } from 'bcrypt';\nimport { Prisma, User } from '@prisma/client';\n@Injectable()\nexport class ApiService {\n  constructor(private usersService: UsersService) {}\n  async createUser(data: CreateUserDto): Promise {\n    data.password = await hash(data.password, 10);\n    return await this.usersService.createUser(data as Prisma.UserCreateInput);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nAppModule -->\n\nGamesModule->AppModule\n\n\n\n\n\nPlayModule\n\nPlayModule\n\nAppModule -->\n\nPlayModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ApiModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                        \n                            PlayModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { ZodValidationPipe } from 'nestjs-zod';\nimport { ApiModule } from './api/api.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { PlayModule } from './play/play.module';\nimport { GamesModule } from './games/games.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    ApiModule,\n    UsersModule,\n    AuthModule,\n    PlayModule,\n    GamesModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n      exclude: ['/auth', '/api', '/socket.io'],\n      serveRoot: '/static',\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_PIPE,\n      useClass: ZodValidationPipe,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hello\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hello\n                        \n                    \n                \n            \n            \n                \n                    \n                    hello(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('hello')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Post, UseGuards, Get } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './guards/local-auth.guard';\nimport { JwtAuthGuard } from './guards';\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('hello')\n  async hello(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategies/jwt.strategy';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: 'lol',\n      signOptions: { expiresIn: '7d' },\n    }),\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(token: string, isWs)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isWs\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { compare } from 'bcrypt';\nimport { User } from '@prisma/client';\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.user({ username });\n    if (user && (await compare(pass, user.password))) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: User) {\n    const { password, ...payload } = user;\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  async verify(token: string, isWs = false): Promise {\n    try {\n      const payload = this.jwtService.verify(token, {\n        secret: process.env.JWT_SECRET,\n      });\n      const user = await this.usersService.user({\n        id: payload.id,\n      });\n\n      if (!user) {\n        if (isWs) {\n          return null;\n        } else {\n          throw new HttpException(\n            'Unauthorized access',\n            HttpStatus.BAD_REQUEST,\n          );\n        }\n      }\n\n      return user;\n    } catch (err: any) {\n      if (isWs) {\n        return null;\n      } else {\n        throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectUserDto.html":{"url":"classes/ConnectUserDto.html","title":"class - ConnectUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/connect-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from 'nestjs-zod';\nimport { z } from 'nestjs-zod/z';\n\nconst ConnectUserSchema = z.object({\n  username: z.string().min(6).max(20),\n});\n\nexport class ConnectUserDto extends createZodDto(ConnectUserSchema) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from 'nestjs-zod';\nimport { z } from 'nestjs-zod/z';\n\nconst CreateUserSchema = z.object({\n  username: z.string().min(6).max(20)!,\n  email: z.string().email(),\n  password: z\n    .password()\n    .min(8)\n    .max(100)\n    .atLeastOne('digit')\n    .atLeastOne('special')\n    .atLeastOne('uppercase')\n    .atLeastOne('lowercase'),\n  picture: z.string().url(),\n});\n\nexport class CreateUserDto extends createZodDto(CreateUserSchema.required()) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameGateway.html":{"url":"classes/GameGateway.html","title":"class - GameGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/play/game.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayDisconnect\n                        OnGatewayConnection\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                    Async\n                                handleGameMoveOrEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameService: GamesService)\n                    \n                \n                        \n                            \n                                Defined in src/play/game.gateway.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GamesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/play/game.gateway.ts:58\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleConnection(socket: Socket, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/play/game.gateway.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(socket: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/play/game.gateway.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleGameMoveOrEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleGameMoveOrEvent(data: Prisma.MoveCreateManyInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('moves')\n                \n            \n\n            \n                \n                    Defined in src/play/game.gateway.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.MoveCreateManyInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MessageBody,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  WsException,\n} from '@nestjs/websockets';\nimport { Socket, Server } from 'socket.io';\nimport { AuthService } from 'src/auth/auth.service';\nimport { User, Prisma } from '@prisma/client';\nimport { GamesService } from 'src/games/games.service';\n\n@WebSocketGateway({\n  cors: '*:*',\n  namespace: 'play',\n  transports: ['websocket'],\n})\nexport class GameGateway implements OnGatewayDisconnect, OnGatewayConnection {\n  constructor(\n    private authService: AuthService,\n    private gameService: GamesService,\n  ) {}\n  async handleConnection(socket: Socket, ...args: any[]) {\n    const user: User = await this.authService.verify(\n      socket.handshake.auth.token,\n      true,\n    );\n    if (!user) {\n      socket.emit('error', 'Invalid credentials.');\n      socket.disconnect(true);\n      return;\n    }\n    const gameId = socket.handshake.auth.id;\n\n    const game = await this.gameService.getGameById(gameId);\n\n    socket.emit('welcome', {\n      message: `Hello, ${user.username!}`,\n      game,\n    });\n\n    await socket.join(game.id);\n    this.server.to(game.id).emit('player-joined', {\n      user,\n    });\n\n    const roomLength = (await this.server.to(game.id).fetchSockets()).length;\n    if (roomLength >= 2) {\n      this.server.to(game.id).emit('ready', {\n        message: 'all users joined!',\n      });\n      socket.emit('your-turn');\n    }\n  }\n  @WebSocketServer()\n  server: Server;\n\n  handleDisconnect(socket: Socket) {\n    this.server.emit('users-changed', {\n      event: 'left',\n    });\n    socket.rooms.forEach((room) => {\n      socket.leave(room);\n    });\n\n    socket.disconnect(true);\n  }\n\n  @SubscribeMessage('moves')\n  async handleGameMoveOrEvent(\n    @MessageBody()\n    data: Prisma.MoveCreateManyInput,\n  ) {\n    try {\n      const newMove = await this.gameService.makeMove(data);\n      this.server.to(data.gameId).emit('new-move', {\n        data,\n      });\n    } catch (err) {\n      throw new WsException(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GamesModule.html":{"url":"modules/GamesModule.html","title":"module - GamesModule","body":"\n                   \n\n\n\n\n    Modules\n    GamesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GamesModule\n\n\n\ncluster_GamesModule_exports\n\n\n\ncluster_GamesModule_providers\n\n\n\n\nGamesService \n\nGamesService \n\n\n\nGamesModule\n\nGamesModule\n\nGamesService  -->\n\nGamesModule->GamesService \n\n\n\n\n\nGamesService\n\nGamesService\n\nGamesModule -->\n\nGamesService->GamesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nGamesModule -->\n\nPrismaService->GamesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/games/games.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GamesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GamesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GamesService } from './games.service';\nimport { PrismaService } from 'src/prisma.service';\n\n@Module({\n  providers: [GamesService, PrismaService],\n  exports: [GamesService],\n})\nexport class GamesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamesService.html":{"url":"injectables/GamesService.html","title":"injectable - GamesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/games/games.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                gameOver\n                            \n                            \n                                    Async\n                                getGameById\n                            \n                            \n                                    Async\n                                getUserGames\n                            \n                            \n                                    Async\n                                makeMove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/games/games.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(...users: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    users\n                                    \n                                            User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        gameOver\n                        \n                    \n                \n            \n            \n                \n                    \n                    gameOver(gameId: string, winnerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gameId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    winnerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGameById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGameById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserGames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserGames(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        makeMove\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeMove(move: Prisma.MoveCreateManyInput)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    move\n                                    \n                                            Prisma.MoveCreateManyInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User, Game, GameStatus, Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma.service';\nimport { generateRandomSequence } from 'src/util/words';\n\n@Injectable()\nexport class GamesService {\n  constructor(private prisma: PrismaService) {}\n\n  async createGame(...users: User[]): Promise {\n    return await this.prisma.game.create({\n      data: {\n        status: GameStatus.IN_PROGRESS,\n        players: {\n          connect: users.map((user) => {\n            return { id: user.id };\n          }),\n        },\n        moves: { create: [] },\n        characters: generateRandomSequence(),\n      },\n    });\n  }\n\n  async getGameById(id: string): Promise {\n    return await this.prisma.game.findUnique({\n      where: {\n        id,\n      },\n      select: {\n        timestamp: true,\n        id: true,\n        characters: true,\n        status: true,\n        winnerId: true,\n        players: {\n          select: {\n            username: true,\n            picture: true,\n          },\n        },\n      },\n    });\n  }\n\n  async makeMove(move: Prisma.MoveCreateManyInput) {\n    return await this.prisma.move.create({ data: { ...move } });\n  }\n\n  async gameOver(gameId: string, winnerId: string) {\n    return this.prisma.game.update({\n      where: {\n        id: gameId,\n      },\n      data: {\n        winnerId,\n        status: GameStatus.ENDED,\n      },\n    });\n  }\n\n  async getUserGames(id: string) {\n    return await this.prisma.game.findMany({\n      where: {\n        players: {\n          some: {\n            id,\n          },\n        },\n      },\n      select: {\n        timestamp: true,\n        characters: true,\n        moves: {\n          select: {\n            points: true,\n            userId: true,\n          },\n        },\n        players: {\n          select: {\n            username: true,\n            id: true,\n          },\n        },\n        id: true,\n        winner: {\n          select: {\n            username: true,\n          },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const type = context.getType();\n    if (type === 'http') {\n      return context.switchToHttp().getRequest();\n    } else if (type === 'ws') {\n      const ctx = context.switchToWs().getClient();\n      return ctx.handshake;\n    } else {\n      throw new Error(`This guard was not made for ${type} requests`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload) {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchmakeGateway.html":{"url":"classes/MatchmakeGateway.html","title":"class - MatchmakeGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchmakeGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/play/matchmake.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayDisconnect\n                        OnGatewayConnection\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameService: GamesService)\n                    \n                \n                        \n                            \n                                Defined in src/play/matchmake.gateway.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GamesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/play/matchmake.gateway.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/play/matchmake.gateway.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleConnection(client: Socket, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/play/matchmake.gateway.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/play/matchmake.gateway.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Socket } from 'socket.io';\nimport { Server } from 'net';\nimport { AuthService } from 'src/auth/auth.service';\nimport { User } from '@prisma/client';\nimport { GamesService } from 'src/games/games.service';\n\n@WebSocketGateway({\n  cors: '*:*',\n  namespace: 'matchmake',\n})\nexport class MatchmakeGateway\n  implements OnGatewayDisconnect, OnGatewayConnection\n{\n  constructor(\n    private authService: AuthService,\n    private gameService: GamesService,\n  ) {}\n  @WebSocketServer()\n  server: Server;\n  users = new Map();\n  async handleConnection(client: Socket, ...args: any[]) {\n    const user: User = await this.authService.verify(\n      client.handshake.auth.token,\n      true,\n    );\n    if (!user) {\n      client.emit('error', 'Invalid credentials.');\n      client.disconnect(true);\n      return;\n    }\n    client.emit('welcome', {\n      message: `Hello, ${user.username}!`,\n    });\n\n    this.users.set(client, user);\n    if (this.users.size == 2) {\n      const newGame = await this.gameService.createGame(...this.users.values());\n\n      this.server.emit('match', {\n        message: 'You have been matched!',\n        id: newGame.id,\n      });\n\n      // cleanup\n\n      for (const s of this.users.keys()) {\n        s.disconnect(true);\n      }\n      this.users.clear();\n    }\n  }\n\n  handleDisconnect(client: Socket) {\n    this.users.delete(client);\n    this.server.emit('users-changed', {\n      event: 'left',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayModule.html":{"url":"modules/PlayModule.html","title":"module - PlayModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PlayModule\n\n\n\ncluster_PlayModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nPlayModule\n\nPlayModule\n\nPlayModule -->\n\nAuthModule->PlayModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nPlayModule -->\n\nGamesModule->PlayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/play/play.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MatchmakeGateway } from './matchmake.gateway';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { GamesModule } from 'src/games/games.module';\nimport { GameGateway } from './game.gateway';\n\n@Module({\n  providers: [MatchmakeGateway, GameGateway],\n  imports: [AuthModule, GamesModule],\n})\nexport class PlayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma.service';\nimport { UsersService } from './users.service';\n\n@Module({\n  providers: [UsersService, PrismaService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                user\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: Prisma.UserCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.UserCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(where: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(userWhereUniqueInput: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userWhereUniqueInput\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma.service';\nimport { User, Prisma } from '@prisma/client';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) {}\n\n  async user(\n    userWhereUniqueInput: Prisma.UserWhereUniqueInput,\n  ): Promise {\n    return this.prisma.user.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  async users(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.UserWhereUniqueInput;\n    where?: Prisma.UserWhereInput;\n    orderBy?: Prisma.UserOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.user.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  async createUser(data: Prisma.UserCreateInput): Promise {\n    return this.prisma.user.create({\n      data,\n    });\n  }\n\n  async updateUser(params: {\n    where: Prisma.UserWhereUniqueInput;\n    data: Prisma.UserUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.user.update({\n      data,\n      where,\n    });\n  }\n\n  async deleteUser(where: Prisma.UserWhereUniqueInput): Promise {\n    return this.prisma.user.delete({\n      where,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/api.controller.ts\n            \n            controller\n            ApiController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/games/games.service.ts\n            \n            injectable\n            GamesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/connect-user.dto.ts\n            \n            class\n            ConnectUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/connect-user.dto.ts\n            \n            variable\n            ConnectUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/create-user.dto.ts\n            \n            variable\n            CreateUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/play/game.gateway.ts\n            \n            class\n            GameGateway\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/play/matchmake.gateway.ts\n            \n            class\n            MatchmakeGateway\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            alphabet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            consonants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            generateRandomSequence\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            numConsonants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            numVowels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            verifyWord\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            vowels\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-socket.io : ^9.4.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @nestjs/websockets : ^9.4.0\n        \n            @prisma/client : ^4.11.0\n        \n            bcrypt : ^5.1.0\n        \n            nestjs-zod : ^1.2.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GamesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\ncluster_ApiModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GamesModule\n\n\n\ncluster_GamesModule_exports\n\n\n\ncluster_GamesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nPlayModule\n\nPlayModule\n\nPlayModule -->\n\nAuthModule->PlayModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nGamesModule\n\nGamesModule\n\nApiModule -->\n\nGamesModule->ApiModule\n\n\n\nPlayModule -->\n\nGamesModule->PlayModule\n\n\n\nAppModule -->\n\nGamesModule->AppModule\n\n\n\n\n\nGamesService \n\nGamesService \n\nGamesService  -->\n\nGamesModule->GamesService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nApiModule -->\n\nUsersModule->ApiModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nApiModule -->\n\nApiService->ApiModule\n\n\n\nAppModule -->\n\nPlayModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nGamesService\n\nGamesService\n\nGamesModule -->\n\nGamesService->GamesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nGamesModule -->\n\nPrismaService->GamesModule\n\n\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alphabet   (src/.../words.ts)\n                        \n                        \n                            ConnectUserSchema   (src/.../connect-user.dto.ts)\n                        \n                        \n                            consonants   (src/.../words.ts)\n                        \n                        \n                            CreateUserSchema   (src/.../create-user.dto.ts)\n                        \n                        \n                            generateRandomSequence   (src/.../words.ts)\n                        \n                        \n                            numConsonants   (src/.../words.ts)\n                        \n                        \n                            numVowels   (src/.../words.ts)\n                        \n                        \n                            verifyWord   (src/.../words.ts)\n                        \n                        \n                            vowels   (src/.../words.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/words.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alphabet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : consonants + vowels\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consonants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BCDFGHJKLMNPQRSTVWXYZ'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomSequence\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const randomVowels = [...Array(numVowels)].map(\n    () => vowels[Math.floor(Math.random() * vowels.length)],\n  );\n  const randomConsonants = [...Array(numConsonants)].map(\n    () => consonants[Math.floor(Math.random() * consonants.length)],\n  );\n  const seq = randomVowels.concat(randomConsonants);\n  return seq.join('');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numConsonants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numVowels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyWord\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (word: string): Promise => {\n  // TODO: use dictionary API to verify word\n  return false;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vowels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AEIOU'\n                    \n                \n\n\n        \n    \n\n    src/models/user/connect-user.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConnectUserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  username: z.string().min(6).max(20),\n})\n                    \n                \n\n\n        \n    \n\n    src/models/user/create-user.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateUserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  username: z.string().min(6).max(20)!,\n  email: z.string().email(),\n  password: z\n    .password()\n    .min(8)\n    .max(100)\n    .atLeastOne('digit')\n    .atLeastOne('special')\n    .atLeastOne('uppercase')\n    .atLeastOne('lowercase'),\n  picture: z.string().url(),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
