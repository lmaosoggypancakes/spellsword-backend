var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/ApiController.html",[0,1.796,1,2.004]],["body/controllers/ApiController.html",[0,1.032,1,1.812,2,1.032,3,0.218,4,0.191,5,0.191,6,1.502,7,1.502,8,1.152,9,0.414,10,0.853,11,1.772,12,2.048,13,3.986,14,2.843,15,2.843,16,2.364,17,2.843,18,2.843,19,1.302,20,2.276,21,3.068,22,0.034,23,2.843,24,1.444,25,1.807,26,1.38,27,1.38,28,1.38,29,1.38,30,2.999,31,1.444,32,2.551,33,1.807,34,1.807,35,1.807,36,3.226,37,2.843,38,1.807,39,3.562,40,1.807,41,2.843,42,1.807,43,1.502,44,2.843,45,1.807,46,1.032,47,1.807,48,2.843,49,1.807,50,1.807,51,2.843,52,1.807,53,0.582,54,3.515,55,1.807,56,1.807,57,1.502,58,1.807,59,1.502,60,0.308,61,1.152,62,1.032,63,1.703,64,0.706,65,1.032,66,1.807,67,1.502,68,1.502,69,1.502,70,1.813,71,1.502,72,1.215,73,1.302,74,1.807,75,0.218,76,0.094,77,0.706,78,2.24,79,1.302,80,1.502,81,1.807,82,1.444,83,1.852,84,1.807,85,1.807,86,0.646,87,1.502,88,1.032,89,0.847,90,1.807,91,1.807,92,1.807,93,1.807,94,1.807,95,1.807,96,1.302,97,1.807,98,1.807,99,1.807,100,1.807,101,1.807,102,1.807,103,1.807,104,0.015,105,0.015]],["title/modules/ApiModule.html",[106,0.943,107,1.796]],["body/modules/ApiModule.html",[1,3.165,2,2.515,3,0.398,4,0.348,5,0.348,22,0.034,53,0.688,60,0.561,70,2.935,71,2.736,75,0.398,76,0.17,104,0.024,105,0.024,106,1.321,107,3.505,108,1.285,109,1.72,110,2.736,111,2.736,112,2.736,113,2.667,114,2.667,115,2.667,116,2.064,117,1.542,118,1.406,119,3.291,120,2.272,121,2.807,122,2.736,123,2.736,124,3.291,125,2.736]],["title/injectables/ApiService.html",[70,1.623,126,0.481]],["body/injectables/ApiService.html",[3,0.402,4,0.352,5,0.352,9,0.761,10,1.331,11,1.498,12,3.196,19,3.196,20,3.042,22,0.034,24,1.331,26,1.331,27,1.331,28,1.331,29,1.331,30,1.899,31,0.998,32,2.079,53,0.671,60,0.567,62,1.899,63,1.421,64,1.299,67,2.766,68,2.439,69,2.766,70,2.289,75,0.402,76,0.172,77,1.299,82,0.998,83,1.896,96,2.396,104,0.024,105,0.024,126,0.679,127,1.189,128,2.766,129,2.766,130,3.327,131,3.327,132,3.327,133,2.396,134,1.899,135,3.327,136,3.327,137,3.327,138,3.327]],["title/modules/AppModule.html",[106,0.943,139,2.004]],["body/modules/AppModule.html",[3,0.335,4,0.293,5,0.293,8,1.765,22,0.035,53,0.714,60,0.472,75,0.335,76,0.143,104,0.021,105,0.021,106,1.174,107,3.082,108,1.082,109,1.528,113,2.529,114,2.529,115,2.529,116,1.834,117,1.298,118,1.183,120,1.429,121,2.494,139,3.858,140,2.303,141,2.303,142,3.082,143,2.77,144,3.913,145,2.303,146,3.913,147,1.765,148,1.765,149,2.77,150,2.77,151,2.77,152,2.77,153,2.303,154,2.77,155,2.77,156,2.77,157,2.303,158,3.253,159,2.303,160,2.77,161,2.77,162,2.77,163,2.77,164,2.77,165,2.77,166,2.77,167,2.303,168,1.765,169,2.77,170,2.77,171,2.77]],["title/controllers/AuthController.html",[0,1.796,172,2.004]],["body/controllers/AuthController.html",[0,1.839,2,1.839,3,0.389,4,0.341,5,0.341,7,2.677,9,0.737,10,1.302,11,1.696,21,2.767,22,0.034,24,1.302,26,1.302,27,1.302,29,1.302,31,1.302,46,2.479,53,0.635,57,2.677,59,2.677,60,0.549,65,1.839,75,0.389,76,0.167,80,2.677,82,1.302,104,0.023,105,0.023,134,1.839,167,2.677,172,2.767,173,2.677,174,3.127,175,3.61,176,3.221,177,3.221,178,3.221,179,5.258,180,3.221,181,3.221,182,3.221,183,3.221,184,1.918,185,2.32,186,2.052,187,3.221,188,3.221,189,3.221,190,3.221,191,3.221,192,3.221,193,3.221,194,3.221,195,3.221,196,3.221,197,3.221]],["title/modules/AuthModule.html",[106,0.943,113,1.474]],["body/modules/AuthModule.html",[2,2.329,3,0.355,4,0.311,5,0.311,22,0.034,53,0.695,60,0.501,75,0.355,76,0.152,104,0.022,105,0.022,106,1.223,108,1.148,109,1.593,113,2.845,115,2.578,116,1.912,117,1.378,118,1.256,120,2.104,121,2.6,123,2.444,172,2.986,184,2.354,185,2.117,198,2.444,199,2.444,200,2.444,201,2.94,202,3.141,203,3.141,204,2.94,205,2.938,206,4.08,207,1.516,208,2.94,209,2.94,210,2.94,211,2.117,212,2.94,213,2.94,214,2.444,215,2.94,216,2.94,217,2.94,218,2.94]],["title/injectables/AuthService.html",[126,0.481,184,1.228]],["body/injectables/AuthService.html",[3,0.258,4,0.226,5,0.226,9,0.489,10,0.971,11,1.618,22,0.035,24,1.307,26,1.307,27,1.307,28,1.307,29,1.307,31,1.172,32,2.042,36,3.08,39,1.363,46,1.221,53,0.566,60,0.365,63,2.42,64,0.835,68,2.105,75,0.258,76,0.111,77,1.264,78,2.063,82,1.477,83,1.669,86,1.674,87,2.692,88,1.849,89,1.517,104,0.017,105,0.017,126,0.496,127,0.764,129,1.778,133,1.54,175,2.692,184,1.264,211,1.54,214,1.778,219,1.778,220,3.238,221,2.692,222,5.116,223,2.138,224,3.238,225,2.138,226,3.238,227,3.907,228,2.138,229,1.67,230,3.238,231,4.682,232,2.138,233,1.54,234,1.54,235,2.138,236,2.332,237,3.238,238,2.138,239,2.138,240,2.138,241,2.138,242,2.138,243,2.063,244,3.238,245,3.907,246,2.692,247,2.138,248,2.138,249,1.778,250,2.138,251,1.778,252,2.138,253,2.138,254,2.138,255,3.238,256,1.778,257,1.778,258,2.138]],["title/classes/ConnectUserDto.html",[76,0.163,259,2.265]],["body/classes/ConnectUserDto.html",[3,0.51,4,0.447,5,0.447,22,0.034,53,0.625,75,0.51,76,0.219,86,1.509,104,0.028,105,0.028,147,3.294,148,2.69,229,2.178,259,3.723,260,2.411,261,3.041,262,2.69,263,3.51,264,3.041,265,3.51,266,3.041,267,3.041,268,3.041,269,1.978,270,4.222]],["title/classes/CreateUserDto.html",[20,1.796,76,0.163]],["body/classes/CreateUserDto.html",[3,0.481,4,0.421,5,0.421,20,2.846,22,0.033,53,0.602,75,0.481,76,0.206,86,1.423,104,0.027,105,0.027,147,3.176,148,2.537,229,2.054,243,3.176,260,2.273,262,2.537,263,3.31,264,3.59,265,3.31,267,2.868,268,2.868,269,1.866,271,2.868,272,2.868,273,3.31,274,3.31,275,3.31,276,3.31,277,3.31,278,3.31,279,3.31,280,3.31,281,2.868,282,3.31,283,3.982]],["title/classes/GameGateway.html",[76,0.163,284,2.004]],["body/classes/GameGateway.html",[3,0.245,4,0.215,5,0.215,9,0.464,10,0.933,11,1.447,21,1.982,22,0.035,24,1.372,26,1.272,27,1.272,28,1.372,29,1.272,30,2.16,31,1.134,53,0.553,61,1.982,62,1.158,63,1.954,64,0.792,72,1.812,73,1.461,75,0.245,76,0.105,77,1.215,78,1.982,79,2.724,82,0.608,83,1.954,86,1.635,88,1.158,89,0.951,104,0.017,105,0.017,168,1.293,174,1.461,184,1.885,249,1.687,256,1.687,257,1.687,260,1.158,284,1.982,285,1.687,286,2.24,287,3.145,288,3.145,289,1.982,290,3.476,291,2.586,292,2.586,293,3.783,294,1.461,295,2.029,296,3.145,297,2.029,298,3.111,299,4.418,300,3.145,301,2.029,302,3.111,303,2.029,304,1.687,305,2.029,306,3.145,307,3.111,308,2.029,309,3.111,310,1.687,311,2.586,312,2.029,313,1.461,314,1.687,315,1.687,316,1.687,317,2.029,318,2.029,319,2.029,320,1.687,321,2.029,322,1.461,323,2.029,324,1.687,325,1.687,326,3.111,327,1.687,328,2.029,329,2.029,330,2.029,331,2.586,332,1.687,333,2.029,334,2.029,335,3.111,336,3.111,337,2.029,338,1.461,339,2.029,340,1.293,341,2.029,342,2.029,343,1.687,344,1.687,345,1.461,346,1.687,347,2.029,348,2.029,349,2.029,350,2.029,351,2.029,352,1.687,353,2.029]],["title/modules/GamesModule.html",[106,0.943,114,1.474]],["body/modules/GamesModule.html",[3,0.441,4,0.386,5,0.386,22,0.034,53,0.631,60,0.622,72,2.663,75,0.441,76,0.189,104,0.025,105,0.025,106,1.414,108,1.424,109,1.841,114,2.859,116,2.209,117,1.709,118,1.558,120,2.431,205,3.395,354,3.032,355,3.032,356,3.032,357,2.502,358,3.647,359,3.647,360,2.626]],["title/injectables/GamesService.html",[72,1.344,126,0.481]],["body/injectables/GamesService.html",[3,0.225,4,0.197,5,0.197,9,0.425,10,0.872,11,1.705,16,2.417,22,0.035,24,1.397,26,1.397,27,1.397,28,1.397,29,1.397,30,2.044,31,1.317,32,1.897,36,3.13,39,3.299,43,2.417,46,2.044,53,0.489,60,0.317,61,1.185,62,2.044,63,1.729,64,0.726,72,1.242,75,0.225,76,0.096,77,0.726,82,1.397,83,1.729,104,0.016,105,0.016,126,0.445,127,0.665,134,1.061,229,1.846,281,1.339,306,2.976,322,4.093,327,2.417,340,1.185,352,2.417,357,1.729,360,1.339,361,1.545,362,2.907,363,2.907,364,2.907,365,2.907,366,1.545,367,1.859,368,2.907,369,1.859,370,2.907,371,4.393,372,1.859,373,2.907,374,1.859,375,1.859,376,2.907,377,1.859,378,1.859,379,2.094,380,1.859,381,1.859,382,3.579,383,1.859,384,4.048,385,1.859,386,1.859,387,1.859,388,2.907,389,1.859,390,3.579,391,1.859,392,4.657,393,2.907,394,1.859,395,1.859,396,1.859,397,1.859,398,1.859,399,1.859,400,1.859]],["title/injectables/JwtAuthGuard.html",[65,1.796,126,0.481]],["body/injectables/JwtAuthGuard.html",[3,0.417,4,0.365,5,0.365,9,0.79,10,1.364,22,0.034,24,1.036,26,1.036,27,1.036,28,1.685,29,1.036,31,1.036,53,0.55,60,0.589,65,2.597,75,0.417,76,0.179,82,1.364,86,1.626,88,1.972,89,1.618,104,0.024,105,0.024,126,0.696,127,1.234,207,1.781,269,1.618,401,3.781,402,2.487,403,4.549,404,4.549,405,5.406,406,3.453,407,2.87,408,2.87,409,3.453,410,3.453,411,3.453,412,3.453,413,3.453,414,3.453,415,3.453,416,3.453,417,3.453,418,3.453,419,3.453,420,3.453]],["title/injectables/JwtStrategy.html",[126,0.481,202,1.796]],["body/injectables/JwtStrategy.html",[3,0.434,4,0.38,5,0.38,9,0.821,10,1.399,11,1.554,22,0.034,24,1.399,26,1.076,27,1.076,29,1.076,31,1.076,46,2.049,53,0.626,60,0.612,75,0.434,76,0.186,77,2.024,82,1.076,104,0.025,105,0.025,126,0.714,127,1.283,202,2.664,207,1.851,236,2.585,246,3.878,251,2.984,269,1.682,421,2.984,422,3.878,423,3.589,424,4.665,425,3.589,426,3.589,427,2.984,428,2.585,429,2.984,430,2.984,431,2.984,432,2.984,433,3.589,434,3.589,435,3.589,436,3.589]],["title/injectables/LocalAuthGuard.html",[126,0.481,186,2.004]],["body/injectables/LocalAuthGuard.html",[3,0.53,4,0.464,5,0.464,22,0.033,53,0.639,60,0.747,75,0.53,76,0.227,104,0.028,105,0.028,126,0.81,127,1.567,186,3.37,207,2.262,269,2.054,402,3.158,408,3.645,437,3.645,438,4.384]],["title/injectables/LocalStrategy.html",[126,0.481,203,1.796]],["body/injectables/LocalStrategy.html",[3,0.386,4,0.338,5,0.338,9,0.732,10,1.296,11,1.468,22,0.034,24,1.296,26,1.296,27,1.296,28,1.296,29,1.296,31,0.959,32,2.025,36,3.222,53,0.633,60,0.545,63,2.091,75,0.386,76,0.166,77,1.249,82,0.959,83,1.366,86,1.143,88,1.826,89,1.499,104,0.023,105,0.023,126,0.662,127,1.143,134,1.826,184,2.204,185,2.303,203,2.468,207,1.65,229,1.65,243,3.341,269,1.499,294,2.303,422,3.593,427,2.659,428,2.303,430,2.659,431,2.659,432,2.659,439,2.659,440,3.198,441,4.322,442,3.198,443,2.659,444,4.322,445,3.198]],["title/classes/MatchmakeGateway.html",[76,0.163,446,2.004]],["body/classes/MatchmakeGateway.html",[3,0.275,4,0.241,5,0.241,9,0.521,10,1.018,11,1.217,21,1.451,22,0.034,24,1.443,26,1.217,27,1.217,28,1.349,29,1.217,31,1.018,39,1.451,53,0.609,63,2.055,64,0.889,72,1.922,73,1.64,75,0.275,76,0.118,77,1.326,78,2.163,79,2.923,82,0.683,83,1.45,86,1.451,89,1.591,104,0.018,105,0.018,168,1.451,174,1.64,184,1.97,233,1.64,234,1.64,260,1.301,286,2.445,287,3.374,288,3.374,289,2.163,290,3.633,291,2.822,292,2.822,294,1.64,296,3.374,299,4.344,300,3.374,304,1.893,310,1.893,311,2.822,313,1.64,314,1.893,315,1.893,316,1.893,320,1.893,322,1.64,324,1.893,325,1.893,331,2.822,332,1.893,338,1.64,340,2.586,343,1.893,344,1.893,345,1.64,346,1.893,446,2.163,447,1.893,448,2.278,449,2.278,450,3.395,451,2.278,452,3.395,453,2.278,454,3.395,455,3.395,456,2.278,457,2.278,458,2.278,459,2.278,460,2.278,461,2.278,462,2.278,463,2.278,464,2.278,465,2.278,466,2.278,467,2.278,468,2.278,469,2.278,470,2.278,471,2.278,472,2.278,473,2.278,474,2.278,475,2.278]],["title/modules/PlayModule.html",[106,0.943,142,1.796]],["body/modules/PlayModule.html",[3,0.437,4,0.383,5,0.383,22,0.034,53,0.689,60,0.617,75,0.437,76,0.187,104,0.025,105,0.025,106,1.406,108,1.413,109,1.831,113,2.738,114,2.738,116,2.197,117,1.695,118,1.546,120,1.866,121,2.988,122,3.007,125,3.007,142,3.442,284,2.988,446,2.988,476,3.618,477,3.618,478,3.618,479,3.618,480,3.618]],["title/injectables/PrismaService.html",[126,0.481,357,1.344]],["body/injectables/PrismaService.html",[3,0.42,4,0.368,5,0.368,9,0.796,10,1.371,11,1.767,22,0.034,24,1.371,26,1.043,27,1.043,28,1.043,29,1.043,31,1.371,53,0.552,60,0.593,64,1.359,75,0.42,76,0.18,83,1.953,104,0.025,105,0.025,126,0.7,127,1.244,269,2.142,286,2.506,357,1.953,481,2.892,482,5.106,483,4.571,484,5.781,485,4.571,486,5.422,487,3.479,488,2.892,489,3.479,490,3.479,491,3.479,492,3.479]],["title/modules/UsersModule.html",[106,0.943,115,1.474]],["body/modules/UsersModule.html",[3,0.441,4,0.386,5,0.386,22,0.034,53,0.631,60,0.622,68,2.663,75,0.441,76,0.189,104,0.025,105,0.025,106,1.414,108,1.424,109,1.841,115,2.859,116,2.209,117,1.709,118,1.558,120,2.431,205,3.395,357,2.502,360,2.626,493,3.032,494,3.032,495,3.032,496,3.647,497,3.647]],["title/injectables/UsersService.html",[68,1.344,126,0.481]],["body/injectables/UsersService.html",[3,0.27,4,0.237,5,0.237,9,0.512,10,1.005,11,1.766,12,2.414,19,2.414,22,0.034,24,1.503,26,1.503,27,1.503,28,1.668,29,1.503,30,2.727,31,1.432,32,2.607,53,0.485,60,0.382,62,2.293,63,1.905,64,0.874,68,1.432,75,0.27,76,0.116,77,0.874,82,1.432,86,1.198,96,2.893,104,0.018,105,0.018,126,0.513,127,0.8,134,1.278,340,2.135,357,1.905,366,1.861,498,1.861,499,3.351,500,3.351,501,2.238,502,2.238,503,3.351,504,5.343,505,2.238,506,3.351,507,4.459,508,2.238,509,4.459,510,2.238,511,2.238,512,4.017,513,3.351,514,2.238,515,2.238,516,2.238,517,4.017,518,2.786,519,4.017,520,4.017,521,2.238,522,4.017,523,2.238,524,2.238,525,2.238,526,2.238,527,2.238,528,2.238]],["title/coverage.html",[529,3.553]],["body/coverage.html",[0,2.142,1,1.664,5,0.276,6,2.171,20,1.491,22,0.034,28,0.783,65,1.491,68,1.115,70,1.347,72,1.115,76,0.249,89,1.223,104,0.02,105,0.02,126,0.87,128,2.171,172,1.664,173,2.171,184,1.02,186,1.664,202,1.491,203,1.491,219,2.171,259,1.88,261,2.702,262,3.059,266,1.88,271,2.702,272,1.88,284,1.664,285,2.171,357,1.115,361,2.171,379,1.88,401,2.171,402,2.702,421,2.171,437,2.171,439,2.171,446,1.664,447,2.171,481,2.171,498,2.171,529,2.171,530,1.88,531,2.611,532,2.611,533,6.273,534,2.611,535,5.085,536,2.611,537,2.611,538,5.952,539,3.752,540,2.171,541,2.611,542,2.171,543,5.683,544,3.752,545,4.534,546,2.171,547,2.171,548,2.171,549,2.171,550,2.171,551,2.171,552,2.611,553,2.611]],["title/dependencies.html",[109,1.475,554,2.192]],["body/dependencies.html",[22,0.034,60,0.632,64,1.447,104,0.026,105,0.026,109,1.447,133,2.669,145,3.081,147,2.362,148,2.362,153,3.081,157,3.081,158,3.081,168,2.362,207,1.912,211,2.669,313,2.669,428,3.791,429,3.081,443,3.081,555,5.263,556,3.706,557,3.706,558,3.706,559,4.763,560,3.081,561,4.763,562,3.706,563,3.706,564,3.706,565,3.706,566,3.706,567,3.706,568,3.706,569,3.706,570,3.706,571,3.706,572,3.706,573,3.706,574,3.706,575,3.706]],["title/miscellaneous/functions.html",[576,1.68,577,3.141]],["body/miscellaneous/functions.html",[9,1.087,22,0.03,104,0.03,105,0.03,540,3.949,542,4.884,576,3.027,577,3.949,578,4.751]],["title/index.html",[9,0.603,579,2.192,580,2.192]],["body/index.html",[4,0.356,8,2.143,22,0.032,61,2.143,104,0.024,105,0.024,159,2.796,290,2.423,407,2.796,488,2.796,530,3.22,581,4.174,582,2.796,583,3.364,584,4.47,585,3.364,586,3.364,587,3.364,588,3.364,589,3.364,590,3.364,591,3.364,592,3.364,593,3.364,594,3.364,595,3.364,596,3.364,597,3.364,598,3.364,599,3.364,600,3.364,601,4.47,602,3.364,603,5.351,604,3.364,605,3.364,606,5.021,607,3.364,608,3.364,609,4.47,610,3.364,611,3.364,612,3.364,613,4.47,614,4.47,615,3.364,616,3.364,617,3.364,618,3.364,619,3.364,620,2.796,621,3.364,622,3.364,623,3.364,624,3.364,625,3.364,626,3.364,627,3.364,628,3.364,629,3.364,630,4.47,631,3.364,632,4.47,633,3.364,634,3.364,635,3.364,636,3.364,637,2.423]],["title/license.html",[579,2.192,580,2.192,637,1.899]],["body/license.html",[22,0.024,104,0.024,105,0.024,118,1.421,345,2.396,530,2.396,560,2.766,581,2.766,638,4.994,639,3.327,640,3.327,641,4.438,642,3.327,643,3.327,644,3.327,645,3.327,646,3.327,647,3.327,648,4.438,649,5.995,650,3.327,651,3.327,652,3.327,653,4.994,654,3.327,655,4.438,656,3.327,657,3.327,658,3.689,659,3.327,660,3.327,661,3.327,662,3.327,663,3.327,664,3.327,665,3.327,666,4.438,667,3.327,668,3.327,669,3.327,670,3.327,671,3.327,672,3.327,673,3.327,674,4.438,675,4.438,676,3.327,677,3.327,678,3.327,679,3.327,680,3.327,681,3.327,682,3.327,683,3.327,684,3.327,685,3.327,686,3.327,687,3.327,688,3.327,689,3.327,690,3.327,691,3.327,692,3.327,693,3.327,694,3.327,695,3.327,696,3.327,697,3.327,698,3.327,699,3.327,700,3.327,701,3.327,702,3.327,703,3.327]],["title/modules.html",[108,1.669]],["body/modules.html",[22,0.028,104,0.028,105,0.028,107,2.422,108,1.656,113,1.987,114,1.987,115,1.987,139,2.703,142,2.422,620,5.058,704,6.084,705,6.084,706,6.084]],["title/overview.html",[707,3.553]],["body/overview.html",[2,1.563,22,0.034,68,2.362,70,2.325,72,2.362,104,0.021,105,0.021,107,3.365,108,1.069,109,1.515,110,2.275,111,2.275,112,2.275,113,2.832,114,2.73,115,2.73,116,1.818,117,1.282,118,1.169,127,0.978,139,3.792,140,2.275,141,2.275,142,3.157,184,2.159,198,2.275,199,2.275,200,2.275,202,2.574,203,2.574,260,1.563,338,1.971,354,2.275,355,2.275,356,2.275,357,2.095,493,2.275,494,2.275,495,2.275,707,2.275,708,2.737,709,2.737,710,2.737]],["title/properties.html",[289,2.407,554,2.192]],["body/properties.html",[22,0.033,104,0.03,105,0.03,289,2.981,582,3.888,637,3.369,711,4.677,712,4.677,713,4.677,714,4.677]],["title/miscellaneous/variables.html",[576,1.68,715,3.141]],["body/miscellaneous/variables.html",[8,1.739,9,0.624,11,0.818,22,0.034,28,1.469,32,1.278,36,2.569,82,1.161,86,1.609,104,0.021,105,0.021,221,2.268,229,1.997,233,4.136,234,4.136,236,1.965,243,2.467,261,1.965,262,3.121,264,1.965,266,2.788,267,2.788,268,2.788,271,1.965,272,2.788,273,2.268,274,2.268,275,2.268,276,2.268,277,2.268,278,2.268,279,2.268,280,2.268,281,1.965,282,2.268,379,2.788,518,3.218,545,2.268,546,3.218,547,3.741,548,3.218,549,3.218,550,3.218,551,3.741,576,1.739,658,2.268,715,2.268,716,5.525,717,2.728,718,2.728,719,2.728,720,2.728,721,2.728,722,2.728,723,2.728,724,2.728,725,2.728,726,2.728,727,2.728,728,2.728,729,2.728,730,2.728,731,2.728,732,2.728,733,3.871,734,2.728,735,2.728,736,2.728]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":712,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":137,"title":{},"body":{"injectables/ApiService.html":{}}}],["10.0.2",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":338,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"overview.html":{}}}],["2.3.1",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":640,"title":{},"body":{"license.html":{}}}],["3.0.1",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":710,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["4.11.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.1.0",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":708,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["8",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":709,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":673,"title":{},"body":{"license.html":{}}}],["access",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":697,"title":{},"body":{"license.html":{}}}],["aeiou",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alphabet",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":621,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":664,"title":{},"body":{"license.html":{}}}],["anthony",{"_index":635,"title":{},"body":{"index.html":{}}}],["api",{"_index":8,"title":{},"body":{"controllers/ApiController.html":{},"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.controller",{"_index":124,"title":{},"body":{"modules/ApiModule.html":{}}}],["api.service",{"_index":71,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{}}}],["api/api.module",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["apicontroller",{"_index":1,"title":{"controllers/ApiController.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"coverage.html":{}}}],["apimodule",{"_index":107,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apis",{"_index":590,"title":{},"body":{"index.html":{}}}],["apiservice",{"_index":70,"title":{"injectables/ApiService.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":488,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":492,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app_pipe",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":139,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":300,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["arising",{"_index":701,"title":{},"body":{"license.html":{}}}],["array(numconsonants)].map",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array(numvowels)].map",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":650,"title":{},"body":{"license.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["atleastone('digit",{"_index":277,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('lowercase",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('special",{"_index":278,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('uppercase",{"_index":279,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["auth.controller",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":402,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":406,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":172,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":408,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":409,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":438,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":113,"title":{"modules/AuthModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":714,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":690,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":184,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":83,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{}}}],["backers",{"_index":622,"title":{},"body":{"index.html":{}}}],["bcdfghjklmnpqrstvwxyz",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["body",{"_index":54,"title":{},"body":{"controllers/ApiController.html":{}}}],["bootstrap",{"_index":542,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":706,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":704,"title":{},"body":{"modules.html":{}}}],["c",{"_index":639,"title":{},"body":{"license.html":{}}}],["catch",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"classes/GameGateway.html":{}}}],["changed",{"_index":344,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["characters",{"_index":390,"title":{},"body":{"injectables/GamesService.html":{}}}],["charge",{"_index":645,"title":{},"body":{"license.html":{}}}],["claim",{"_index":693,"title":{},"body":{"license.html":{}}}],["class",{"_index":76,"title":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":260,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"overview.html":{}}}],["cleanup",{"_index":470,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client",{"_index":454,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.disconnect(true",{"_index":461,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.emit('error",{"_index":460,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.emit('welcome",{"_index":462,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.handshake.auth.token",{"_index":459,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["cluster_apimodule",{"_index":110,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_imports",{"_index":112,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_providers",{"_index":111,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_gamesmodule",{"_index":354,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_gamesmodule_exports",{"_index":355,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_gamesmodule_providers",{"_index":356,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_playmodule",{"_index":476,"title":{},"body":{"modules/PlayModule.html":{}}}],["cluster_playmodule_imports",{"_index":477,"title":{},"body":{"modules/PlayModule.html":{}}}],["cluster_usersmodule",{"_index":493,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":495,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":494,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["comes",{"_index":596,"title":{},"body":{"index.html":{}}}],["compare",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(pass",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["conditions",{"_index":672,"title":{},"body":{"license.html":{}}}],["configmodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":385,"title":{},"body":{"injectables/GamesService.html":{}}}],["connection",{"_index":702,"title":{},"body":{"license.html":{}}}],["connectuserdto",{"_index":259,"title":{"classes/ConnectUserDto.html":{}},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{}}}],["connectuserschema",{"_index":266,"title":{},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consonants",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consonants.length",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consonants[math.floor(math.random",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":86,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":77,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":294,"title":{},"body":{"classes/GameGateway.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{}}}],["constructor(prisma",{"_index":366,"title":{},"body":{"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":134,"title":{},"body":{"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["context",{"_index":407,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["context.gettype",{"_index":410,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":412,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtows().getclient",{"_index":415,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["contract",{"_index":698,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('api",{"_index":74,"title":{},"body":{"controllers/ApiController.html":{}}}],["controller('auth",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["copies",{"_index":666,"title":{},"body":{"license.html":{}}}],["copy",{"_index":648,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":638,"title":{},"body":{"license.html":{}}}],["cors",{"_index":315,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["coverage",{"_index":529,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":389,"title":{},"body":{"injectables/GamesService.html":{}}}],["creategame",{"_index":362,"title":{},"body":{"injectables/GamesService.html":{}}}],["creategame(...users",{"_index":368,"title":{},"body":{"injectables/GamesService.html":{}}}],["createuser",{"_index":12,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["createuser(@body",{"_index":94,"title":{},"body":{"controllers/ApiController.html":{}}}],["createuser(data",{"_index":19,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":20,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["createuserschema",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createzoddto",{"_index":263,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{}}}],["createzoddto(connectuserschema",{"_index":270,"title":{},"body":{"classes/ConnectUserDto.html":{}}}],["createzoddto(createuserschema.required",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["credentials",{"_index":325,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["ctx",{"_index":414,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ctx.handshake",{"_index":416,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cursor",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["damages",{"_index":694,"title":{},"body":{"license.html":{}}}],["data",{"_index":30,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["data.password",{"_index":135,"title":{},"body":{"injectables/ApiService.html":{}}}],["data.winner_id",{"_index":103,"title":{},"body":{"controllers/ApiController.html":{}}}],["deal",{"_index":652,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":703,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["default",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"classes/MatchmakeGateway.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["deleteuser",{"_index":499,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(where",{"_index":503,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":109,"title":{"dependencies.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":597,"title":{},"body":{"index.html":{}}}],["description",{"_index":582,"title":{},"body":{"index.html":{},"properties.html":{}}}],["designer",{"_index":632,"title":{},"body":{"index.html":{}}}],["development",{"_index":605,"title":{},"body":{"index.html":{}}}],["dictionary",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":662,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":530,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["email",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":483,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":485,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"classes/GameGateway.html":{}}}],["error(`this",{"_index":417,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["event",{"_index":345,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"license.html":{}}}],["exclude",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["execution",{"_index":600,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":405,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["expiresin",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":75,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":560,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":269,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":434,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":595,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":651,"title":{},"body":{"license.html":{}}}],["find",{"_index":586,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":686,"title":{},"body":{"license.html":{}}}],["following",{"_index":671,"title":{},"body":{"license.html":{}}}],["found",{"_index":91,"title":{},"body":{"controllers/ApiController.html":{}}}],["framework",{"_index":593,"title":{},"body":{"index.html":{}}}],["free",{"_index":644,"title":{},"body":{"license.html":{}}}],["function",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":577,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":669,"title":{},"body":{"license.html":{}}}],["game",{"_index":61,"title":{},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"index.html":{}}}],["game.gateway",{"_index":480,"title":{},"body":{"modules/PlayModule.html":{}}}],["gamegateway",{"_index":284,"title":{"classes/GameGateway.html":{}},"body":{"classes/GameGateway.html":{},"modules/PlayModule.html":{},"coverage.html":{}}}],["gameid",{"_index":327,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{}}}],["gameover",{"_index":363,"title":{},"body":{"injectables/GamesService.html":{}}}],["gameover(gameid",{"_index":370,"title":{},"body":{"injectables/GamesService.html":{}}}],["games.service",{"_index":359,"title":{},"body":{"modules/GamesModule.html":{}}}],["games/games.module",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["gameservice",{"_index":79,"title":{},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["gamesmodule",{"_index":114,"title":{"modules/GamesModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["gamesservice",{"_index":72,"title":{"injectables/GamesService.html":{}},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{},"overview.html":{}}}],["gamestatus",{"_index":378,"title":{},"body":{"injectables/GamesService.html":{}}}],["gamestatus.ended",{"_index":396,"title":{},"body":{"injectables/GamesService.html":{}}}],["gamestatus.in_progress",{"_index":383,"title":{},"body":{"injectables/GamesService.html":{}}}],["generaterandomsequence",{"_index":379,"title":{},"body":{"injectables/GamesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('games/:id",{"_index":37,"title":{},"body":{"controllers/ApiController.html":{}}}],["get('hello",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('users",{"_index":81,"title":{},"body":{"controllers/ApiController.html":{}}}],["get('users/:id",{"_index":41,"title":{},"body":{"controllers/ApiController.html":{}}}],["get('users/:id/games",{"_index":44,"title":{},"body":{"controllers/ApiController.html":{}}}],["getallusers",{"_index":13,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame",{"_index":14,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame(@param('id",{"_index":97,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame(id",{"_index":35,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgamebyid",{"_index":364,"title":{},"body":{"injectables/GamesService.html":{}}}],["getgamebyid(id",{"_index":373,"title":{},"body":{"injectables/GamesService.html":{}}}],["getrequest",{"_index":403,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["getrequest(context",{"_index":404,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["getting",{"_index":579,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":15,"title":{},"body":{"controllers/ApiController.html":{}}}],["getuser(@param('id",{"_index":85,"title":{},"body":{"controllers/ApiController.html":{}}}],["getuser(id",{"_index":40,"title":{},"body":{"controllers/ApiController.html":{}}}],["getusergames",{"_index":16,"title":{},"body":{"controllers/ApiController.html":{},"injectables/GamesService.html":{}}}],["getusergames(@param('id",{"_index":92,"title":{},"body":{"controllers/ApiController.html":{}}}],["getusergames(id",{"_index":43,"title":{},"body":{"controllers/ApiController.html":{},"injectables/GamesService.html":{}}}],["granted",{"_index":643,"title":{},"body":{"license.html":{}}}],["grow",{"_index":617,"title":{},"body":{"index.html":{}}}],["guard",{"_index":418,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["guards",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleconnection",{"_index":291,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["handleconnection(client",{"_index":452,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["handleconnection(socket",{"_index":298,"title":{},"body":{"classes/GameGateway.html":{}}}],["handledisconnect",{"_index":292,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["handledisconnect(client",{"_index":455,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["handledisconnect(socket",{"_index":302,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlegamemoveorevent",{"_index":293,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlegamemoveorevent(data",{"_index":305,"title":{},"body":{"classes/GameGateway.html":{}}}],["hash",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{}}}],["hash(data.password",{"_index":136,"title":{},"body":{"injectables/ApiService.html":{}}}],["hello",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["hello(@request",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["hello(req",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["here",{"_index":584,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":642,"title":{},"body":{"license.html":{}}}],["holders",{"_index":691,"title":{},"body":{"license.html":{}}}],["http",{"_index":411,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["httpexception",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(err.message",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.bad_request",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":39,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{}}}],["identifier",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":435,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":286,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{}}}],["implied",{"_index":682,"title":{},"body":{"license.html":{}}}],["import",{"_index":53,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlayModule.html":{}}}],["included",{"_index":676,"title":{},"body":{"license.html":{}}}],["including",{"_index":655,"title":{},"body":{"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":486,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":126,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injection",{"_index":598,"title":{},"body":{"index.html":{}}}],["installation",{"_index":602,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":604,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":324,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["isws",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["join",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["joined",{"_index":335,"title":{},"body":{"classes/GameGateway.html":{}}}],["josef",{"_index":629,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":65,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":433,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":202,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kind",{"_index":681,"title":{},"body":{"license.html":{}}}],["left",{"_index":346,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["liability",{"_index":695,"title":{},"body":{"license.html":{}}}],["liable",{"_index":692,"title":{},"body":{"license.html":{}}}],["license",{"_index":637,"title":{"license.html":{}},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":614,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":656,"title":{},"body":{"license.html":{}}}],["limited",{"_index":683,"title":{},"body":{"license.html":{}}}],["literal",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["local",{"_index":443,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":186,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":203,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["lol",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["lot",{"_index":594,"title":{},"body":{"index.html":{}}}],["macera",{"_index":630,"title":{},"body":{"index.html":{}}}],["made",{"_index":419,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["makemove",{"_index":365,"title":{},"body":{"injectables/GamesService.html":{}}}],["makemove(move",{"_index":376,"title":{},"body":{"injectables/GamesService.html":{}}}],["map",{"_index":450,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["markgameasover",{"_index":17,"title":{},"body":{"controllers/ApiController.html":{}}}],["markgameasover(@param('id",{"_index":101,"title":{},"body":{"controllers/ApiController.html":{}}}],["markgameasover(id",{"_index":47,"title":{},"body":{"controllers/ApiController.html":{}}}],["matched",{"_index":468,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["matching",{"_index":105,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matchmake",{"_index":458,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["matchmake.gateway",{"_index":479,"title":{},"body":{"modules/PlayModule.html":{}}}],["matchmakegateway",{"_index":446,"title":{"classes/MatchmakeGateway.html":{}},"body":{"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"coverage.html":{}}}],["max(100",{"_index":276,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":685,"title":{},"body":{"license.html":{}}}],["merge",{"_index":660,"title":{},"body":{"license.html":{}}}],["message",{"_index":331,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["messagebody",{"_index":309,"title":{},"body":{"classes/GameGateway.html":{}}}],["metadata",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["mikeal",{"_index":633,"title":{},"body":{"index.html":{}}}],["min(8",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":576,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":613,"title":{},"body":{"index.html":{}}}],["mode",{"_index":609,"title":{},"body":{"index.html":{}}}],["modify",{"_index":659,"title":{},"body":{"license.html":{}}}],["module",{"_index":106,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":108,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["montana",{"_index":636,"title":{},"body":{"index.html":{}}}],["more",{"_index":601,"title":{},"body":{"index.html":{}}}],["move",{"_index":352,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{}}}],["moves",{"_index":388,"title":{},"body":{"injectables/GamesService.html":{}}}],["name",{"_index":27,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["namespace",{"_index":316,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["nest",{"_index":592,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":60,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":313,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"dependencies.html":{}}}],["net",{"_index":457,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["new",{"_index":89,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{}}}],["newgame",{"_index":465,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["newgame.id",{"_index":469,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["newmove",{"_index":349,"title":{},"body":{"classes/GameGateway.html":{}}}],["noninfringement",{"_index":689,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":55,"title":{},"body":{"controllers/ApiController.html":{}}}],["notfoundexception('user",{"_index":90,"title":{},"body":{"controllers/ApiController.html":{}}}],["notice",{"_index":674,"title":{},"body":{"license.html":{}}}],["npm",{"_index":603,"title":{},"body":{"index.html":{}}}],["null",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["numconsonants",{"_index":548,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["numvowels",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":647,"title":{},"body":{"license.html":{}}}],["ongatewayconnection",{"_index":288,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["ongatewaydisconnect",{"_index":287,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["onmoduleinit",{"_index":484,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":615,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["orderby",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["otherwise",{"_index":700,"title":{},"body":{"license.html":{}}}],["out",{"_index":118,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":707,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":554,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":56,"title":{},"body":{"controllers/ApiController.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["particular",{"_index":687,"title":{},"body":{"license.html":{}}}],["pass",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":430,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":431,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["permission",{"_index":641,"title":{},"body":{"license.html":{}}}],["permit",{"_index":667,"title":{},"body":{"license.html":{}}}],["person",{"_index":646,"title":{},"body":{"license.html":{}}}],["persons",{"_index":668,"title":{},"body":{"license.html":{}}}],["picture",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/GamesService.html":{},"miscellaneous/variables.html":{}}}],["play",{"_index":317,"title":{},"body":{"classes/GameGateway.html":{}}}],["play/play.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["players",{"_index":384,"title":{},"body":{"injectables/GamesService.html":{}}}],["playmodule",{"_index":142,"title":{"modules/PlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["please",{"_index":624,"title":{},"body":{"index.html":{}}}],["points",{"_index":398,"title":{},"body":{"injectables/GamesService.html":{}}}],["portions",{"_index":678,"title":{},"body":{"license.html":{}}}],["post",{"_index":57,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["post('login",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('users",{"_index":23,"title":{},"body":{"controllers/ApiController.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["prisma",{"_index":62,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["prisma.movecreatemanyinput",{"_index":306,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{}}}],["prisma.service",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.usercreateinput",{"_index":96,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["prisma.userorderbywithrelationinput",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userupdateinput",{"_index":526,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereinput",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereuniqueinput",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma/client",{"_index":64,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":482,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":357,"title":{"injectables/PrismaService.html":{}},"body":{"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":78,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["process.env.jwt_secret",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":611,"title":{},"body":{"index.html":{}}}],["programmer",{"_index":628,"title":{},"body":{"index.html":{}}}],["project",{"_index":616,"title":{},"body":{"index.html":{}}}],["promise",{"_index":32,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":289,"title":{"properties.html":{}},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"properties.html":{}}}],["provide",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":679,"title":{},"body":{"license.html":{}}}],["providers",{"_index":120,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["publish",{"_index":661,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":688,"title":{},"body":{"license.html":{}}}],["put",{"_index":58,"title":{},"body":{"controllers/ApiController.html":{}}}],["put('games/:id/game_over",{"_index":48,"title":{},"body":{"controllers/ApiController.html":{}}}],["put('users/:id",{"_index":51,"title":{},"body":{"controllers/ApiController.html":{}}}],["randomconsonants",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomvowels",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomvowels.concat(randomconsonants",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":625,"title":{},"body":{"index.html":{}}}],["realime",{"_index":589,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["req",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["requests",{"_index":420,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["reset",{"_index":117,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["rest",{"_index":588,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":654,"title":{},"body":{"license.html":{}}}],["result",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":104,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":82,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["rights",{"_index":657,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["roomlength",{"_index":336,"title":{},"body":{"classes/GameGateway.html":{}}}],["rootpath",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["rule",{"_index":634,"title":{},"body":{"index.html":{}}}],["run",{"_index":606,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":471,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["s.disconnect(true",{"_index":473,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["scope",{"_index":599,"title":{},"body":{"index.html":{}}}],["secret",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":436,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":392,"title":{},"body":{"injectables/GamesService.html":{}}}],["sell",{"_index":665,"title":{},"body":{"license.html":{}}}],["seq",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seq.join",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":290,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"index.html":{}}}],["serveroot",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["shall",{"_index":675,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["skip",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["socket",{"_index":299,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["socket.disconnect(true",{"_index":326,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.emit('error",{"_index":323,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.emit('welcome",{"_index":330,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.emit('your",{"_index":341,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.handshake.auth.id",{"_index":328,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.handshake.auth.token",{"_index":321,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.io",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{},"dependencies.html":{}}}],["socket.join(game.id",{"_index":333,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.leave(room",{"_index":348,"title":{},"body":{"classes/GameGateway.html":{}}}],["socket.rooms.foreach((room",{"_index":347,"title":{},"body":{"classes/GameGateway.html":{}}}],["software",{"_index":649,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spellsword",{"_index":581,"title":{},"body":{"index.html":{},"license.html":{}}}],["spellsword's",{"_index":587,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":619,"title":{},"body":{"index.html":{}}}],["src/.../connect",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../words.ts",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api.controller.ts",{"_index":6,"title":{},"body":{"controllers/ApiController.html":{},"coverage.html":{}}}],["src/api/api.controller.ts:26",{"_index":34,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:31",{"_index":42,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:40",{"_index":45,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:44",{"_index":25,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:51",{"_index":38,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:56",{"_index":52,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:66",{"_index":49,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.module.ts",{"_index":119,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/api/api.service.ts",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/api/api.service.ts:7",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/api/api.service.ts:9",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app.module.ts",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:10",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":122,"title":{},"body":{"modules/ApiModule.html":{},"modules/PlayModule.html":{}}}],["src/auth/auth.module.ts",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":314,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["src/auth/auth.service.ts",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards",{"_index":66,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/auth/guards/jwt",{"_index":401,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":437,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:15",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:6",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":439,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:12",{"_index":442,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":440,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/games/games.module",{"_index":125,"title":{},"body":{"modules/ApiModule.html":{},"modules/PlayModule.html":{}}}],["src/games/games.module.ts",{"_index":358,"title":{},"body":{"modules/GamesModule.html":{}}}],["src/games/games.service",{"_index":73,"title":{},"body":{"controllers/ApiController.html":{},"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["src/games/games.service.ts",{"_index":361,"title":{},"body":{"injectables/GamesService.html":{},"coverage.html":{}}}],["src/games/games.service.ts:10",{"_index":369,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:25",{"_index":374,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:46",{"_index":377,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:50",{"_index":372,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:62",{"_index":375,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:7",{"_index":367,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/main.ts",{"_index":540,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models",{"_index":67,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{}}}],["src/models/user/connect",{"_index":261,"title":{},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/user/create",{"_index":271,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/play/game.gateway.ts",{"_index":285,"title":{},"body":{"classes/GameGateway.html":{},"coverage.html":{}}}],["src/play/game.gateway.ts:20",{"_index":295,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:25",{"_index":301,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:58",{"_index":297,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:60",{"_index":303,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/game.gateway.ts:72",{"_index":308,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/play/matchmake.gateway.ts",{"_index":447,"title":{},"body":{"classes/MatchmakeGateway.html":{},"coverage.html":{}}}],["src/play/matchmake.gateway.ts:20",{"_index":448,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:26",{"_index":449,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:27",{"_index":451,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:28",{"_index":453,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/matchmake.gateway.ts:60",{"_index":456,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/play.module.ts",{"_index":478,"title":{},"body":{"modules/PlayModule.html":{}}}],["src/prisma.service",{"_index":360,"title":{},"body":{"modules/GamesModule.html":{},"injectables/GamesService.html":{},"modules/UsersModule.html":{}}}],["src/prisma.service.ts",{"_index":481,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma.service.ts:10",{"_index":487,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma.service.ts:6",{"_index":489,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/users.module",{"_index":123,"title":{},"body":{"modules/ApiModule.html":{},"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":496,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":69,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{}}}],["src/users/users.service.ts",{"_index":498,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:17",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:34",{"_index":502,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:40",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:51",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:6",{"_index":501,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/util/words",{"_index":380,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/util/words.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":607,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":610,"title":{},"body":{"index.html":{}}}],["start:prodsupport",{"_index":612,"title":{},"body":{"index.html":{}}}],["started",{"_index":580,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":382,"title":{},"body":{"injectables/GamesService.html":{}}}],["stay",{"_index":626,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":36,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":670,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":663,"title":{},"body":{"license.html":{}}}],["subscribemessage",{"_index":310,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["subscribemessage('moves",{"_index":307,"title":{},"body":{"classes/GameGateway.html":{}}}],["substantial",{"_index":677,"title":{},"body":{"license.html":{}}}],["super",{"_index":432,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":620,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":705,"title":{},"body":{"modules.html":{}}}],["table",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["thanks",{"_index":618,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":490,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":491,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.apiservice.createuser",{"_index":95,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.authservice.login(req.user",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":445,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.verify",{"_index":320,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["this.gameservice.creategame(...this.users.values",{"_index":466,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.gameservice.gameover(id",{"_index":102,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.gameservice.getgamebyid(gameid",{"_index":329,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.gameservice.getgamebyid(id",{"_index":98,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.gameservice.getusergames(id",{"_index":93,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.gameservice.makemove(data",{"_index":350,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.jwtservice.sign(payload",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.game.create",{"_index":381,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.game.findmany",{"_index":397,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.game.findunique",{"_index":391,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.game.update",{"_index":395,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.move.create",{"_index":394,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.user.create",{"_index":525,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":528,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":527,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.server.emit('match",{"_index":467,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.server.emit('users",{"_index":343,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["this.server.to(data.gameid).emit('new",{"_index":351,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.server.to(game.id).emit('player",{"_index":334,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.server.to(game.id).emit('ready",{"_index":339,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.server.to(game.id).fetchsockets()).length",{"_index":337,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.users.clear",{"_index":474,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.delete(client",{"_index":475,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.keys",{"_index":472,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.set(client",{"_index":463,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.size",{"_index":464,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.usersservice.createuser(data",{"_index":138,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.usersservice.updateuser",{"_index":100,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.usersservice.user",{"_index":87,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.users",{"_index":84,"title":{},"body":{"controllers/ApiController.html":{}}}],["throw",{"_index":88,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["timestamp",{"_index":393,"title":{},"body":{"injectables/GamesService.html":{}}}],["todo",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["tort",{"_index":699,"title":{},"body":{"license.html":{}}}],["touch",{"_index":627,"title":{},"body":{"index.html":{}}}],["transports",{"_index":318,"title":{},"body":{"classes/GameGateway.html":{}}}],["true",{"_index":322,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{}}}],["try",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"classes/GameGateway.html":{}}}],["turn",{"_index":342,"title":{},"body":{"classes/GameGateway.html":{}}}],["type",{"_index":28,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":631,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception",{"_index":444,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unknown",{"_index":46,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":713,"title":{},"body":{"properties.html":{}}}],["updateuser",{"_index":500,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(params",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusers",{"_index":18,"title":{},"body":{"controllers/ApiController.html":{}}}],["updateusers(@param('id",{"_index":99,"title":{},"body":{"controllers/ApiController.html":{}}}],["updateusers(id",{"_index":50,"title":{},"body":{"controllers/ApiController.html":{}}}],["use",{"_index":658,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":59,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":80,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('hello",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('users",{"_index":33,"title":{},"body":{"controllers/ApiController.html":{}}}],["useguards(localauthguard",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":63,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["user(userwhereuniqueinput",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":262,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.id",{"_index":387,"title":{},"body":{"injectables/GamesService.html":{}}}],["user.password",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":332,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["userid",{"_index":399,"title":{},"body":{"injectables/GamesService.html":{}}}],["username",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":340,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["users(params",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.map((user",{"_index":386,"title":{},"body":{"injectables/GamesService.html":{}}}],["users.service",{"_index":497,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":115,"title":{"modules/UsersModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":68,"title":{"injectables/UsersService.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwhereuniqueinput",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["uses",{"_index":591,"title":{},"body":{"index.html":{}}}],["validate",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":441,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"classes/MatchmakeGateway.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":715,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["verify(token",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyword",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":711,"title":{},"body":{"properties.html":{}}}],["void",{"_index":304,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["vowels",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vowels.length",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vowels[math.floor(math.random",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":684,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":680,"title":{},"body":{"license.html":{}}}],["watch",{"_index":608,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":319,"title":{},"body":{"classes/GameGateway.html":{}}}],["websocketgateway",{"_index":311,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["websocketserver",{"_index":296,"title":{},"body":{"classes/GameGateway.html":{},"classes/MatchmakeGateway.html":{}}}],["welcome",{"_index":583,"title":{},"body":{"index.html":{}}}],["whether",{"_index":696,"title":{},"body":{"license.html":{}}}],["winner",{"_index":400,"title":{},"body":{"injectables/GamesService.html":{}}}],["winnerid",{"_index":371,"title":{},"body":{"injectables/GamesService.html":{}}}],["without",{"_index":653,"title":{},"body":{"license.html":{}}}],["word",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws",{"_index":413,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["wsexception",{"_index":312,"title":{},"body":{"classes/GameGateway.html":{}}}],["wsexception(err",{"_index":353,"title":{},"body":{"classes/GameGateway.html":{}}}],["you'd",{"_index":623,"title":{},"body":{"index.html":{}}}],["you'll",{"_index":585,"title":{},"body":{"index.html":{}}}],["z",{"_index":264,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":267,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().email",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().min(6).max(20",{"_index":268,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().url",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["zod/z",{"_index":265,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{}}}],["zodvalidationpipe",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":116,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/ApiController.html":{"url":"controllers/ApiController.html","title":"controller - ApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getGame\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserGames\n                            \n                            \n                                    Async\n                                markGameAsOver\n                            \n                            \n                                    Async\n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('users')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('users')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('games/:id')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('users/:id')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserGames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserGames(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('users/:id/games')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        markGameAsOver\n                        \n                    \n                \n            \n            \n                \n                    \n                    markGameAsOver(id: string, data)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('games/:id/game_over')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUsers(id: string, data)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('users/:id')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { Game, Prisma, User } from '@prisma/client';\nimport { JwtAuthGuard } from 'src/auth/guards';\nimport { CreateUserDto } from 'src/models';\nimport { UsersService } from 'src/users/users.service';\nimport { ApiService } from './api.service';\nimport { GamesService } from 'src/games/games.service';\n@Controller('api')\nexport class ApiController {\n  constructor(\n    private usersService: UsersService,\n    private apiService: ApiService,\n    private gameService: GamesService,\n  ) {}\n  @UseGuards(JwtAuthGuard)\n  @Get('users')\n  async getAllUsers(): Promise {\n    return await this.usersService.users({});\n  }\n\n  @Get('users/:id')\n  async getUser(@Param('id') id: string): Promise {\n    const user = await this.usersService.user({ id });\n    if (!user) {\n      throw new NotFoundException('User with id ' + id + ' not found.');\n    }\n    return user;\n  }\n\n  @Get('users/:id/games')\n  async getUserGames(@Param('id') id: string) {\n    return await this.gameService.getUserGames(id);\n  }\n  @Post('users')\n  async createUser(@Body() data: CreateUserDto): Promise {\n    return await this.apiService.createUser({\n      ...(data as Prisma.UserCreateInput),\n    });\n  }\n\n  @Get('games/:id')\n  async getGame(@Param('id') id: string): Promise {\n    return await this.gameService.getGameById(id);\n  }\n\n  @Put('users/:id')\n  async updateUsers(@Param('id') id: string, @Body() data): Promise {\n    return this.usersService.updateUser({\n      where: {\n        id,\n      },\n      data,\n    });\n  }\n\n  @Put('games/:id/game_over')\n  async markGameAsOver(@Param('id') id: string, @Body() data): Promise {\n    return this.gameService.gameOver(id, data.winner_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_providers\n\n\n\ncluster_ApiModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nApiModule -->\n\nGamesModule->ApiModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nApiModule -->\n\nUsersModule->ApiModule\n\n\n\n\n\nApiService\n\nApiService\n\nApiModule -->\n\nApiService->ApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { ApiController } from './api.controller';\nimport { ApiService } from './api.service';\nimport { GamesModule } from 'src/games/games.module';\n\n@Module({\n  controllers: [ApiController],\n  providers: [ApiService],\n  imports: [UsersModule, AuthModule, GamesModule],\n})\nexport class ApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from 'src/models';\nimport { UsersService } from 'src/users/users.service';\nimport { hash } from 'bcrypt';\nimport { Prisma, User } from '@prisma/client';\n@Injectable()\nexport class ApiService {\n  constructor(private usersService: UsersService) {}\n  async createUser(data: CreateUserDto): Promise {\n    data.password = await hash(data.password, 10);\n    return await this.usersService.createUser(data as Prisma.UserCreateInput);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nAppModule -->\n\nGamesModule->AppModule\n\n\n\n\n\nPlayModule\n\nPlayModule\n\nAppModule -->\n\nPlayModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ApiModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                        \n                            PlayModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { ZodValidationPipe } from 'nestjs-zod';\nimport { ApiModule } from './api/api.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { PlayModule } from './play/play.module';\nimport { GamesModule } from './games/games.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    ApiModule,\n    UsersModule,\n    AuthModule,\n    PlayModule,\n    GamesModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n      exclude: ['/auth', '/api', '/socket.io'],\n      serveRoot: '/static',\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_PIPE,\n      useClass: ZodValidationPipe,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hello\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hello\n                        \n                    \n                \n            \n            \n                \n                    \n                    hello(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('hello')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Post, UseGuards, Get } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './guards/local-auth.guard';\nimport { JwtAuthGuard } from './guards';\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('hello')\n  async hello(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategies/jwt.strategy';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: 'lol',\n      signOptions: { expiresIn: '7d' },\n    }),\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(token: string, isWs)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isWs\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { compare } from 'bcrypt';\nimport { User } from '@prisma/client';\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.user({ username });\n    if (user && (await compare(pass, user.password))) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: User) {\n    const { password, ...payload } = user;\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  async verify(token: string, isWs = false): Promise {\n    try {\n      const payload = this.jwtService.verify(token, {\n        secret: process.env.JWT_SECRET,\n      });\n      const user = await this.usersService.user({\n        id: payload.id,\n      });\n\n      if (!user) {\n        if (isWs) {\n          return null;\n        } else {\n          throw new HttpException(\n            'Unauthorized access',\n            HttpStatus.BAD_REQUEST,\n          );\n        }\n      }\n\n      return user;\n    } catch (err: any) {\n      if (isWs) {\n        return null;\n      } else {\n        throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectUserDto.html":{"url":"classes/ConnectUserDto.html","title":"class - ConnectUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/connect-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from 'nestjs-zod';\nimport { z } from 'nestjs-zod/z';\n\nconst ConnectUserSchema = z.object({\n  username: z.string().min(6).max(20),\n});\n\nexport class ConnectUserDto extends createZodDto(ConnectUserSchema) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from 'nestjs-zod';\nimport { z } from 'nestjs-zod/z';\n\nconst CreateUserSchema = z.object({\n  username: z.string().min(6).max(20)!,\n  email: z.string().email(),\n  password: z\n    .password()\n    .min(8)\n    .max(100)\n    .atLeastOne('digit')\n    .atLeastOne('special')\n    .atLeastOne('uppercase')\n    .atLeastOne('lowercase'),\n  picture: z.string().url(),\n});\n\nexport class CreateUserDto extends createZodDto(CreateUserSchema.required()) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameGateway.html":{"url":"classes/GameGateway.html","title":"class - GameGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/play/game.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayDisconnect\n                        OnGatewayConnection\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                    Async\n                                handleGameMoveOrEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameService: GamesService)\n                    \n                \n                        \n                            \n                                Defined in src/play/game.gateway.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GamesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/play/game.gateway.ts:58\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleConnection(socket: Socket, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/play/game.gateway.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(socket: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/play/game.gateway.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleGameMoveOrEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleGameMoveOrEvent(data: Prisma.MoveCreateManyInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('moves')\n                \n            \n\n            \n                \n                    Defined in src/play/game.gateway.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.MoveCreateManyInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MessageBody,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  WsException,\n} from '@nestjs/websockets';\nimport { Socket, Server } from 'socket.io';\nimport { AuthService } from 'src/auth/auth.service';\nimport { User, Prisma } from '@prisma/client';\nimport { GamesService } from 'src/games/games.service';\n\n@WebSocketGateway({\n  cors: '*:*',\n  namespace: 'play',\n  transports: ['websocket'],\n})\nexport class GameGateway implements OnGatewayDisconnect, OnGatewayConnection {\n  constructor(\n    private authService: AuthService,\n    private gameService: GamesService,\n  ) {}\n  async handleConnection(socket: Socket, ...args: any[]) {\n    const user: User = await this.authService.verify(\n      socket.handshake.auth.token,\n      true,\n    );\n    if (!user) {\n      socket.emit('error', 'Invalid credentials.');\n      socket.disconnect(true);\n      return;\n    }\n    const gameId = socket.handshake.auth.id;\n\n    const game = await this.gameService.getGameById(gameId);\n\n    socket.emit('welcome', {\n      message: `Hello, ${user.username!}`,\n      game,\n    });\n\n    await socket.join(game.id);\n    this.server.to(game.id).emit('player-joined', {\n      user,\n    });\n\n    const roomLength = (await this.server.to(game.id).fetchSockets()).length;\n    if (roomLength >= 2) {\n      this.server.to(game.id).emit('ready', {\n        message: 'all users joined!',\n      });\n      socket.emit('your-turn');\n    }\n  }\n  @WebSocketServer()\n  server: Server;\n\n  handleDisconnect(socket: Socket) {\n    this.server.emit('users-changed', {\n      event: 'left',\n    });\n    socket.rooms.forEach((room) => {\n      socket.leave(room);\n    });\n\n    socket.disconnect(true);\n  }\n\n  @SubscribeMessage('moves')\n  async handleGameMoveOrEvent(\n    @MessageBody()\n    data: Prisma.MoveCreateManyInput,\n  ) {\n    try {\n      const newMove = await this.gameService.makeMove(data);\n      this.server.to(data.gameId).emit('new-move', {\n        data,\n      });\n    } catch (err) {\n      throw new WsException(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GamesModule.html":{"url":"modules/GamesModule.html","title":"module - GamesModule","body":"\n                   \n\n\n\n\n    Modules\n    GamesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GamesModule\n\n\n\ncluster_GamesModule_exports\n\n\n\ncluster_GamesModule_providers\n\n\n\n\nGamesService \n\nGamesService \n\n\n\nGamesModule\n\nGamesModule\n\nGamesService  -->\n\nGamesModule->GamesService \n\n\n\n\n\nGamesService\n\nGamesService\n\nGamesModule -->\n\nGamesService->GamesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nGamesModule -->\n\nPrismaService->GamesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/games/games.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GamesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GamesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GamesService } from './games.service';\nimport { PrismaService } from 'src/prisma.service';\n\n@Module({\n  providers: [GamesService, PrismaService],\n  exports: [GamesService],\n})\nexport class GamesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamesService.html":{"url":"injectables/GamesService.html","title":"injectable - GamesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/games/games.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                gameOver\n                            \n                            \n                                    Async\n                                getGameById\n                            \n                            \n                                    Async\n                                getUserGames\n                            \n                            \n                                    Async\n                                makeMove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/games/games.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(...users: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    users\n                                    \n                                            User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        gameOver\n                        \n                    \n                \n            \n            \n                \n                    \n                    gameOver(gameId: string, winnerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gameId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    winnerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGameById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGameById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserGames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserGames(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        makeMove\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeMove(move: Prisma.MoveCreateManyInput)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    move\n                                    \n                                            Prisma.MoveCreateManyInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User, Game, GameStatus, Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma.service';\nimport { generateRandomSequence } from 'src/util/words';\n\n@Injectable()\nexport class GamesService {\n  constructor(private prisma: PrismaService) {}\n\n  async createGame(...users: User[]): Promise {\n    return await this.prisma.game.create({\n      data: {\n        status: GameStatus.IN_PROGRESS,\n        players: {\n          connect: users.map((user) => {\n            return { id: user.id };\n          }),\n        },\n        moves: { create: [] },\n        characters: generateRandomSequence(),\n      },\n    });\n  }\n\n  async getGameById(id: string): Promise {\n    return await this.prisma.game.findUnique({\n      where: {\n        id,\n      },\n      select: {\n        timestamp: true,\n        id: true,\n        characters: true,\n        status: true,\n        winnerId: true,\n        players: {\n          select: {\n            username: true,\n            picture: true,\n          },\n        },\n      },\n    });\n  }\n\n  async makeMove(move: Prisma.MoveCreateManyInput) {\n    return await this.prisma.move.create({ data: { ...move } });\n  }\n\n  async gameOver(gameId: string, winnerId: string) {\n    return this.prisma.game.update({\n      where: {\n        id: gameId,\n      },\n      data: {\n        winnerId,\n        status: GameStatus.ENDED,\n      },\n    });\n  }\n\n  async getUserGames(id: string) {\n    return await this.prisma.game.findMany({\n      where: {\n        players: {\n          some: {\n            id,\n          },\n        },\n      },\n      select: {\n        timestamp: true,\n        characters: true,\n        moves: {\n          select: {\n            points: true,\n            userId: true,\n          },\n        },\n        players: {\n          select: {\n            username: true,\n            id: true,\n          },\n        },\n        id: true,\n        winner: {\n          select: {\n            username: true,\n          },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const type = context.getType();\n    if (type === 'http') {\n      return context.switchToHttp().getRequest();\n    } else if (type === 'ws') {\n      const ctx = context.switchToWs().getClient();\n      return ctx.handshake;\n    } else {\n      throw new Error(`This guard was not made for ${type} requests`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload) {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchmakeGateway.html":{"url":"classes/MatchmakeGateway.html","title":"class - MatchmakeGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchmakeGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/play/matchmake.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayDisconnect\n                        OnGatewayConnection\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameService: GamesService)\n                    \n                \n                        \n                            \n                                Defined in src/play/matchmake.gateway.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GamesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/play/matchmake.gateway.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/play/matchmake.gateway.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleConnection(client: Socket, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/play/matchmake.gateway.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/play/matchmake.gateway.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Socket } from 'socket.io';\nimport { Server } from 'net';\nimport { AuthService } from 'src/auth/auth.service';\nimport { User } from '@prisma/client';\nimport { GamesService } from 'src/games/games.service';\n\n@WebSocketGateway({\n  cors: '*:*',\n  namespace: 'matchmake',\n})\nexport class MatchmakeGateway\n  implements OnGatewayDisconnect, OnGatewayConnection\n{\n  constructor(\n    private authService: AuthService,\n    private gameService: GamesService,\n  ) {}\n  @WebSocketServer()\n  server: Server;\n  users = new Map();\n  async handleConnection(client: Socket, ...args: any[]) {\n    const user: User = await this.authService.verify(\n      client.handshake.auth.token,\n      true,\n    );\n    if (!user) {\n      client.emit('error', 'Invalid credentials.');\n      client.disconnect(true);\n      return;\n    }\n    client.emit('welcome', {\n      message: `Hello, ${user.username}!`,\n    });\n\n    this.users.set(client, user);\n    if (this.users.size == 2) {\n      const newGame = await this.gameService.createGame(...this.users.values());\n\n      this.server.emit('match', {\n        message: 'You have been matched!',\n        id: newGame.id,\n      });\n\n      // cleanup\n\n      for (const s of this.users.keys()) {\n        s.disconnect(true);\n      }\n      this.users.clear();\n    }\n  }\n\n  handleDisconnect(client: Socket) {\n    this.users.delete(client);\n    this.server.emit('users-changed', {\n      event: 'left',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayModule.html":{"url":"modules/PlayModule.html","title":"module - PlayModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PlayModule\n\n\n\ncluster_PlayModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nPlayModule\n\nPlayModule\n\nPlayModule -->\n\nAuthModule->PlayModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nPlayModule -->\n\nGamesModule->PlayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/play/play.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MatchmakeGateway } from './matchmake.gateway';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { GamesModule } from 'src/games/games.module';\nimport { GameGateway } from './game.gateway';\n\n@Module({\n  providers: [MatchmakeGateway, GameGateway],\n  imports: [AuthModule, GamesModule],\n})\nexport class PlayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma.service';\nimport { UsersService } from './users.service';\n\n@Module({\n  providers: [UsersService, PrismaService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                user\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: Prisma.UserCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.UserCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(where: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(userWhereUniqueInput: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userWhereUniqueInput\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma.service';\nimport { User, Prisma } from '@prisma/client';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) {}\n\n  async user(\n    userWhereUniqueInput: Prisma.UserWhereUniqueInput,\n  ): Promise {\n    return this.prisma.user.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  async users(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.UserWhereUniqueInput;\n    where?: Prisma.UserWhereInput;\n    orderBy?: Prisma.UserOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.user.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  async createUser(data: Prisma.UserCreateInput): Promise {\n    return this.prisma.user.create({\n      data,\n    });\n  }\n\n  async updateUser(params: {\n    where: Prisma.UserWhereUniqueInput;\n    data: Prisma.UserUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.user.update({\n      data,\n      where,\n    });\n  }\n\n  async deleteUser(where: Prisma.UserWhereUniqueInput): Promise {\n    return this.prisma.user.delete({\n      where,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/api.controller.ts\n            \n            controller\n            ApiController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/games/games.service.ts\n            \n            injectable\n            GamesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/connect-user.dto.ts\n            \n            class\n            ConnectUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/connect-user.dto.ts\n            \n            variable\n            ConnectUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/create-user.dto.ts\n            \n            variable\n            CreateUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/play/game.gateway.ts\n            \n            class\n            GameGateway\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/play/matchmake.gateway.ts\n            \n            class\n            MatchmakeGateway\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            alphabet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            consonants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            generateRandomSequence\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            numConsonants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            numVowels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            verifyWord\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            vowels\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-socket.io : ^9.4.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @nestjs/websockets : ^9.4.0\n        \n            @prisma/client : ^4.11.0\n        \n            bcrypt : ^5.1.0\n        \n            nestjs-zod : ^1.2.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSpellsword API Documentation\nDescription\nWelcome! Here, you'll find the documentation for Spellsword's REST and Realime APIs. The server uses the Nest framework. which has a lot of features when it comes to dependency injection, scope, execution context, and more.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodSupport\nSpellsword is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nProgrammer Josef Macera\nUI Designer Mikeal Macera\nGame Rule Designer Anthony Montana\n\nLicense\nSpellsword is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2023 Spellsword\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GamesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\ncluster_ApiModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GamesModule\n\n\n\ncluster_GamesModule_exports\n\n\n\ncluster_GamesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nPlayModule\n\nPlayModule\n\nPlayModule -->\n\nAuthModule->PlayModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nGamesModule\n\nGamesModule\n\nApiModule -->\n\nGamesModule->ApiModule\n\n\n\nPlayModule -->\n\nGamesModule->PlayModule\n\n\n\nAppModule -->\n\nGamesModule->AppModule\n\n\n\n\n\nGamesService \n\nGamesService \n\nGamesService  -->\n\nGamesModule->GamesService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nApiModule -->\n\nUsersModule->ApiModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nApiModule -->\n\nApiService->ApiModule\n\n\n\nAppModule -->\n\nPlayModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nGamesService\n\nGamesService\n\nGamesModule -->\n\nGamesService->GamesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nGamesModule -->\n\nPrismaService->GamesModule\n\n\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alphabet   (src/.../words.ts)\n                        \n                        \n                            ConnectUserSchema   (src/.../connect-user.dto.ts)\n                        \n                        \n                            consonants   (src/.../words.ts)\n                        \n                        \n                            CreateUserSchema   (src/.../create-user.dto.ts)\n                        \n                        \n                            generateRandomSequence   (src/.../words.ts)\n                        \n                        \n                            numConsonants   (src/.../words.ts)\n                        \n                        \n                            numVowels   (src/.../words.ts)\n                        \n                        \n                            verifyWord   (src/.../words.ts)\n                        \n                        \n                            vowels   (src/.../words.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/words.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alphabet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : consonants + vowels\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consonants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BCDFGHJKLMNPQRSTVWXYZ'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomSequence\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const randomVowels = [...Array(numVowels)].map(\n    () => vowels[Math.floor(Math.random() * vowels.length)],\n  );\n  const randomConsonants = [...Array(numConsonants)].map(\n    () => consonants[Math.floor(Math.random() * consonants.length)],\n  );\n  const seq = randomVowels.concat(randomConsonants);\n  return seq.join('');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numConsonants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numVowels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyWord\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (word: string): Promise => {\n  // TODO: use dictionary API to verify word\n  return false;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vowels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AEIOU'\n                    \n                \n\n\n        \n    \n\n    src/models/user/connect-user.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConnectUserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  username: z.string().min(6).max(20),\n})\n                    \n                \n\n\n        \n    \n\n    src/models/user/create-user.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateUserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  username: z.string().min(6).max(20)!,\n  email: z.string().email(),\n  password: z\n    .password()\n    .min(8)\n    .max(100)\n    .atLeastOne('digit')\n    .atLeastOne('special')\n    .atLeastOne('uppercase')\n    .atLeastOne('lowercase'),\n  picture: z.string().url(),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
