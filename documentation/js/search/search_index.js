var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/ApiController.html",[0,1.72,1,1.928]],["body/controllers/ApiController.html",[0,1.172,1,1.989,2,1.172,3,0.244,4,0.211,5,0.211,6,1.728,7,1.728,8,1.728,9,0.489,10,0.988,11,1.729,12,2.258,13,4.258,14,3.162,15,3.162,16,1.49,17,2.39,18,3.04,19,0.037,20,3.162,21,1.33,22,2.088,23,1.192,24,1.192,25,1.192,26,1.192,27,2.401,28,1.33,29,2.352,30,2.088,31,2.088,32,2.088,33,2.702,34,3.162,35,2.088,36,1.989,37,2.088,38,3.162,39,2.088,40,2.089,41,0.586,42,2.088,43,3.162,44,2.088,45,1.728,46,1.728,47,1.728,48,0.317,49,1.728,50,1.313,51,2.089,52,0.865,53,1.172,54,2.088,55,1.728,56,1.582,57,1.728,58,1.927,59,1.728,60,1.444,61,1.728,62,2.088,63,0.244,64,0.119,65,0.865,66,2.725,67,1.728,68,1.728,69,2.088,70,1.33,71,1.944,72,2.088,73,2.088,74,0.787,75,1.728,76,1.313,77,1.054,78,1.728,79,2.088,80,2.088,81,1.49,82,2.088,83,2.088,84,0.019,85,0.019]],["title/modules/ApiModule.html",[86,0.871,87,1.72]],["body/modules/ApiModule.html",[1,2.988,2,2.348,3,0.361,4,0.311,5,0.311,19,0.036,41,0.643,48,0.467,58,2.774,59,2.549,63,0.361,64,0.175,84,0.025,85,0.025,86,1.188,87,3.346,88,1.16,89,1.576,90,2.549,91,2.549,92,2.549,93,2.509,94,2.509,95,2.509,96,1.91,97,1.406,98,1.406,99,3.08,100,2.112,101,2.631,102,2.549,103,2.549,104,3.08,105,2.549]],["title/injectables/ApiService.html",[58,1.547,106,0.411]],["body/injectables/ApiService.html",[3,0.365,4,0.315,5,0.315,9,0.729,10,1.317,11,1.492,12,3.01,16,3.01,17,2.874,19,0.036,21,1.317,23,1.317,24,1.317,25,1.317,26,1.317,27,1.96,28,0.973,29,1.925,41,0.626,48,0.473,50,1.96,51,1.423,52,1.291,55,2.579,56,2.284,57,2.579,58,2.129,63,0.365,64,0.177,65,1.291,70,0.973,71,1.925,81,2.225,84,0.025,85,0.025,106,0.565,107,1.069,108,2.579,109,2.579,110,3.116,111,3.116,112,3.116,113,2.225,114,1.749,115,3.116,116,3.116,117,3.116,118,3.116]],["title/modules/AppModule.html",[86,0.871,119,1.928]],["body/modules/AppModule.html",[3,0.306,4,0.264,5,0.264,19,0.037,41,0.672,48,0.396,63,0.306,64,0.149,84,0.022,85,0.022,86,1.06,87,2.928,88,0.984,89,1.405,93,2.382,94,2.382,95,2.382,96,1.703,97,1.193,98,1.193,100,1.319,101,2.346,119,3.704,120,2.161,121,2.161,122,2.928,123,2.612,124,3.729,125,2.161,126,3.729,127,1.643,128,1.643,129,2.612,130,2.612,131,2.612,132,2.612,133,2.161,134,2.612,135,2.612,136,2.612,137,2.161,138,2.161,139,2.161,140,2.612,141,2.612,142,2.612,143,2.612,144,2.612,145,2.612,146,2.612,147,2.612]],["title/controllers/AuthController.html",[0,1.72,148,1.928]],["body/controllers/AuthController.html",[0,1.689,2,1.689,3,0.352,4,0.304,5,0.304,7,2.49,9,0.704,10,1.286,11,1.704,18,2.939,19,0.036,21,1.286,23,1.286,24,1.286,26,1.286,28,1.286,41,0.591,45,2.49,46,4.176,47,2.49,48,0.457,53,1.689,63,0.352,64,0.171,68,2.49,70,1.286,84,0.024,85,0.024,114,1.689,148,2.59,149,2.49,150,3.009,151,3.407,152,3.407,153,3.009,154,3.009,155,3.009,156,2.939,157,3.009,158,3.009,159,3.009,160,3.009,161,1.945,162,2.148,163,1.893,164,3.009,165,3.009,166,3.009,167,3.009,168,3.009,169,3.009,170,3.009,171,3.009,172,3.009,173,3.009,174,3.009]],["title/modules/AuthModule.html",[86,0.871,93,1.399]],["body/modules/AuthModule.html",[2,2.159,3,0.32,4,0.276,5,0.276,19,0.037,41,0.65,48,0.414,63,0.32,64,0.155,84,0.023,85,0.023,86,1.093,88,1.028,89,1.449,93,2.688,95,2.416,96,1.756,97,1.246,98,1.246,100,1.942,101,2.42,103,2.258,148,2.803,161,2.42,162,1.948,175,2.258,176,2.258,177,2.258,178,2.729,179,2.971,180,2.971,181,2.729,182,2.746,183,3.847,184,1.378,185,2.729,186,2.729,187,2.729,188,1.948,189,2.729,190,2.729,191,2.258,192,2.729,193,2.729,194,2.729,195,2.729]],["title/injectables/AuthService.html",[106,0.411,161,1.27]],["body/injectables/AuthService.html",[3,0.228,4,0.197,5,0.197,9,0.456,10,0.937,11,1.614,19,0.037,21,1.283,23,1.283,24,1.283,25,1.283,26,1.283,28,1.142,29,1.876,33,2.902,36,1.226,40,1.37,41,0.52,48,0.296,51,2.489,52,0.807,56,1.942,63,0.228,64,0.111,65,1.243,66,2.142,70,1.463,71,1.67,74,1.672,75,2.483,76,1.887,77,1.515,84,0.018,85,0.018,106,0.402,107,0.668,109,1.613,113,1.391,152,2.483,156,1.391,161,1.243,188,1.391,191,1.613,196,1.613,197,3,198,2.483,199,4.882,200,1.949,201,3,202,1.949,203,3,204,3.658,205,1.949,206,3,207,4.436,208,1.949,209,1.391,210,1.391,211,1.949,212,2.142,213,3,214,1.949,215,1.949,216,1.949,217,1.949,218,1.949,219,1.887,220,3,221,3.658,222,2.483,223,1.949,224,1.949,225,1.949,226,1.949,227,1.613,228,1.949,229,1.949,230,1.949,231,3,232,1.949,233,1.949,234,1.949]],["title/classes/ConnectUserDto.html",[64,0.174,235,2.188]],["body/classes/ConnectUserDto.html",[3,0.473,4,0.408,5,0.408,19,0.036,40,1.844,41,0.584,63,0.473,64,0.23,74,1.522,84,0.029,85,0.029,127,3.137,128,2.541,235,3.56,236,2.541,237,2.884,238,2.541,239,3.343,240,2.884,241,3.343,242,2.884,243,2.884,244,2.884,245,1.844,246,4.039]],["title/classes/CreateUserDto.html",[17,1.72,64,0.174]],["body/classes/CreateUserDto.html",[3,0.444,4,0.383,5,0.383,17,2.689,19,0.035,40,1.73,41,0.561,63,0.444,64,0.216,74,1.427,84,0.028,85,0.028,127,3.014,128,2.383,219,3.014,236,2.383,238,2.383,239,3.135,240,3.42,241,3.135,243,2.704,244,2.704,245,1.73,247,2.704,248,2.704,249,3.135,250,3.135,251,3.135,252,3.135,253,3.135,254,3.135,255,3.135,256,3.135,257,2.704,258,3.135,259,3.788]],["title/modules/GamesModule.html",[86,0.871,94,1.399]],["body/modules/GamesModule.html",[3,0.403,4,0.348,5,0.348,19,0.036,41,0.588,48,0.522,60,2.769,63,0.403,64,0.196,84,0.026,85,0.026,86,1.28,88,1.297,89,1.697,94,2.707,96,2.057,97,1.571,98,1.571,100,2.274,182,3.216,260,2.848,261,2.848,262,2.848,263,2.35,264,3.442,265,3.442,266,2.457]],["title/injectables/GamesService.html",[60,1.399,106,0.411]],["body/injectables/GamesService.html",[3,0.288,4,0.248,5,0.248,9,0.575,10,1.115,11,1.596,19,0.037,21,1.312,23,1.312,24,1.312,25,1.312,26,1.312,27,1.546,28,1.115,29,2.106,33,2.359,36,2.901,40,1.122,41,0.54,48,0.373,49,2.034,50,2.245,51,2.106,52,1.018,60,1.63,63,0.288,64,0.14,65,1.018,70,1.312,71,1.63,84,0.021,85,0.021,106,0.478,107,0.843,114,1.379,257,1.754,263,1.911,266,1.754,267,2.034,268,3.569,269,3.569,270,2.034,271,2.458,272,3.569,273,2.458,274,1.754,275,3.569,276,2.458,277,2.458,278,2.548,279,2.458,280,2.458,281,3.569,282,2.458,283,3.569,284,2.458,285,2.458,286,2.458,287,2.458,288,2.458,289,3.569,290,2.458,291,3.569,292,4.228,293,2.458]],["title/injectables/JwtAuthGuard.html",[53,1.72,106,0.411]],["body/injectables/JwtAuthGuard.html",[3,0.38,4,0.328,5,0.328,9,0.759,10,1.353,19,0.037,21,1.013,23,1.013,24,1.013,25,1.693,26,1.013,28,1.013,41,0.507,48,0.492,53,2.431,63,0.38,64,0.185,70,1.353,74,1.632,76,2.041,77,1.638,84,0.025,85,0.025,106,0.58,107,1.113,184,1.638,245,1.481,294,3.584,295,2.316,296,4.331,297,4.331,298,5.204,299,3.244,300,3.244,301,2.684,302,3.244,303,3.244,304,3.244,305,3.244,306,3.244,307,3.244,308,3.244,309,3.244,310,3.244,311,3.244,312,3.244,313,3.244]],["title/injectables/JwtStrategy.html",[106,0.411,179,1.72]],["body/injectables/JwtStrategy.html",[3,0.396,4,0.342,5,0.342,9,0.792,10,1.391,11,1.555,19,0.036,21,1.391,23,1.056,24,1.056,26,1.056,28,1.056,41,0.583,48,0.513,63,0.396,64,0.193,65,2.063,70,1.056,84,0.026,85,0.026,106,0.597,107,1.16,156,2.415,179,2.5,184,1.708,212,2.415,222,3.685,227,2.799,245,1.545,314,2.799,315,3.685,316,3.383,317,4.453,318,3.383,319,3.383,320,2.799,321,2.415,322,2.799,323,2.799,324,2.799,325,2.799,326,3.383,327,3.383,328,3.383,329,3.383]],["title/injectables/LocalAuthGuard.html",[106,0.411,163,1.928]],["body/injectables/LocalAuthGuard.html",[3,0.493,4,0.425,5,0.425,19,0.035,41,0.599,48,0.639,63,0.493,64,0.24,84,0.03,85,0.03,106,0.686,107,1.445,163,3.218,184,2.126,245,1.923,295,3.007,301,3.485,330,3.485,331,4.211]],["title/injectables/LocalStrategy.html",[106,0.411,180,1.72]],["body/injectables/LocalStrategy.html",[3,0.35,4,0.302,5,0.302,9,0.699,10,1.279,11,1.46,19,0.036,21,1.279,23,1.279,24,1.279,25,1.279,26,1.279,28,0.933,29,1.87,33,3.056,40,1.364,41,0.589,48,0.453,51,2.134,63,0.35,64,0.17,65,1.237,70,0.933,71,1.364,74,1.125,76,1.879,77,1.508,84,0.024,85,0.024,106,0.549,107,1.024,114,1.676,161,2.256,162,2.132,180,2.299,184,1.508,219,3.164,245,1.364,315,3.389,320,2.472,321,2.132,323,2.472,324,2.472,325,2.472,332,2.472,333,2.472,334,2.987,335,4.096,336,2.987,337,2.472,338,4.096,339,2.987]],["title/classes/MatchmakeGateway.html",[64,0.174,340,1.928]],["body/classes/MatchmakeGateway.html",[3,0.242,4,0.209,5,0.209,9,0.483,10,0.98,11,1.184,18,1.475,19,0.037,21,1.422,23,1.184,24,1.184,25,1.323,26,1.184,28,0.98,36,1.3,41,0.562,51,2.079,52,0.856,60,1.934,61,1.71,63,0.242,64,0.118,65,1.3,66,2.24,67,3.139,70,0.645,71,1.432,74,1.429,77,1.584,78,1.71,84,0.018,85,0.018,151,1.71,161,1.987,209,1.475,210,1.475,236,1.3,274,2.708,292,1.71,333,1.71,340,1.973,341,1.71,342,2.596,343,3.793,344,3.793,345,2.24,346,3.968,347,3.137,348,3.137,349,2.066,350,3.793,351,2.066,352,3.137,353,2.066,354,3.137,355,4.983,356,3.793,357,2.066,358,3.137,359,3.137,360,2.066,361,2.066,362,3.137,363,1.71,364,1.71,365,2.066,366,2.066,367,2.066,368,2.066,369,2.066,370,2.066,371,2.066,372,2.066,373,2.066,374,2.066,375,2.066,376,2.066,377,2.066,378,2.066,379,3.137,380,2.066,381,2.066,382,2.066,383,1.71,384,2.066,385,2.066,386,2.066,387,2.066,388,2.066,389,2.066,390,2.066,391,2.066,392,2.066,393,2.066,394,2.066,395,2.066,396,2.066,397,2.066,398,2.066,399,2.066]],["title/modules/PlayModule.html",[86,0.871,122,1.72]],["body/modules/PlayModule.html",[3,0.41,4,0.354,5,0.354,19,0.036,41,0.628,48,0.532,63,0.41,64,0.199,84,0.027,85,0.027,86,1.295,88,1.32,89,1.717,93,2.602,94,2.602,96,2.08,97,1.599,98,1.599,100,1.769,101,2.866,102,2.898,105,2.898,122,3.302,340,2.866,400,3.503,401,3.503,402,3.503,403,3.503]],["title/injectables/PrismaService.html",[106,0.411,263,1.27]],["body/injectables/PrismaService.html",[3,0.383,4,0.33,5,0.33,9,0.765,10,1.36,11,1.782,19,0.036,21,1.36,23,1.021,24,1.021,25,1.021,26,1.021,28,1.36,41,0.51,48,0.496,52,1.355,63,0.383,64,0.186,71,1.989,84,0.026,85,0.026,106,0.584,107,1.122,245,1.989,263,1.805,342,2.707,404,2.707,405,4.897,406,4.355,407,5.591,408,4.355,409,5.221,410,3.271,411,2.707,412,3.271,413,3.271,414,3.271,415,3.271]],["title/modules/UsersModule.html",[86,0.871,95,1.399]],["body/modules/UsersModule.html",[3,0.403,4,0.348,5,0.348,19,0.036,41,0.588,48,0.522,56,2.513,63,0.403,64,0.196,84,0.026,85,0.026,86,1.28,88,1.297,89,1.697,95,2.707,96,2.057,97,1.571,98,1.571,100,2.274,182,3.216,263,2.35,266,2.457,416,2.848,417,2.848,418,2.848,419,3.442,420,3.442]],["title/injectables/UsersService.html",[56,1.27,106,0.411]],["body/injectables/UsersService.html",[3,0.239,4,0.207,5,0.207,9,0.478,10,0.972,11,1.776,12,2.222,16,2.222,19,0.037,21,1.491,23,1.491,24,1.491,25,1.67,26,1.491,27,2.852,28,1.416,29,2.441,41,0.441,48,0.31,50,2.371,51,1.924,52,0.847,56,1.29,63,0.239,64,0.116,65,0.847,70,1.416,74,1.173,81,2.69,84,0.018,85,0.018,106,0.417,107,0.701,114,1.148,263,1.746,270,1.692,274,2.222,421,1.692,422,3.112,423,3.112,424,2.044,425,2.044,426,3.112,427,5.117,428,2.044,429,3.112,430,4.213,431,2.044,432,4.213,433,2.044,434,2.044,435,3.769,436,3.112,437,2.044,438,2.044,439,2.044,440,3.769,441,2.576,442,3.769,443,3.769,444,2.044,445,3.769,446,2.044,447,2.044,448,2.044,449,2.044,450,2.044,451,2.044]],["title/coverage.html",[452,2.976]],["body/coverage.html",[0,1.999,1,1.541,5,0.248,6,2.027,17,1.375,19,0.036,25,0.765,53,1.375,56,1.015,58,1.237,60,1.119,64,0.239,77,1.237,84,0.021,85,0.021,106,0.737,108,2.027,148,1.541,149,2.027,161,1.015,163,1.541,179,1.375,180,1.375,196,2.027,235,1.749,237,2.542,238,2.897,242,1.749,247,2.542,248,1.749,263,1.015,267,2.027,278,1.749,294,2.027,295,2.542,314,2.027,330,2.027,332,2.027,340,1.541,341,2.027,404,2.027,421,2.027,452,1.749,453,2.45,454,2.45,455,2.45,456,6.095,457,3.561,458,4.892,459,2.45,460,5.778,461,2.45,462,2.027,463,2.45,464,2.027,465,5.501,466,2.45,467,2.45,468,4.359,469,2.027,470,2.027,471,2.027,472,2.027,473,2.027,474,2.027,475,2.45,476,2.45]],["title/dependencies.html",[89,1.387,477,2.123]],["body/dependencies.html",[19,0.037,48,0.532,52,1.451,84,0.027,85,0.027,89,1.32,113,2.501,125,2.898,127,2.203,128,2.203,133,2.898,137,2.898,138,2.898,184,1.769,188,2.501,321,3.615,322,2.898,337,2.898,363,2.898,364,2.898,478,5.064,479,3.503,480,3.503,481,3.503,482,4.556,483,3.503,484,4.556,485,3.503,486,3.503,487,3.503,488,3.503,489,3.503,490,3.503,491,3.503,492,3.503,493,3.503,494,3.503,495,3.503,496,3.503,497,3.503,498,3.503]],["title/miscellaneous/functions.html",[499,1.614,500,3.047]],["body/miscellaneous/functions.html",[9,1.077,19,0.032,84,0.032,85,0.032,462,3.81,464,4.736,499,2.896,500,3.81,501,4.604]],["title/index.html",[9,0.601,502,2.566,503,2.566]],["body/index.html",[4,0.312,19,0.036,84,0.025,85,0.025,139,2.558,346,2.558,411,2.558,452,2.207,504,3.092,505,3.092,506,4.194,507,3.092,508,3.092,509,3.092,510,3.092,511,3.092,512,2.558,513,4.759,514,3.092,515,3.092,516,3.092,517,3.092,518,5.626,519,3.092,520,3.092,521,5.501,522,3.092,523,3.092,524,4.194,525,3.092,526,3.092,527,3.092,528,3.092,529,4.194,530,4.194,531,3.092,532,3.092,533,3.092,534,4.194,535,4.194,536,3.092,537,3.092,538,3.092,539,3.092,540,3.092,541,2.558,542,3.092,543,3.092,544,3.092,545,3.092,546,3.092,547,3.092,548,3.092,549,3.092,550,3.092,551,2.558,552,3.092,553,3.092,554,3.092,555,3.092,556,3.092,557,3.092,558,2.558]],["title/modules.html",[88,1.571]],["body/modules.html",[19,0.029,84,0.029,85,0.029,87,2.279,88,1.53,93,1.854,94,1.854,95,1.854,119,2.554,122,2.279,541,4.898,559,5.919,560,5.919,561,5.919]],["title/overview.html",[562,3.45]],["body/overview.html",[2,1.419,19,0.036,56,2.203,58,2.156,60,2.428,84,0.021,85,0.021,87,3.199,88,0.953,89,1.373,90,2.092,91,2.092,92,2.092,93,2.674,94,2.57,95,2.57,96,1.663,97,1.154,98,1.154,107,0.867,119,3.623,120,2.092,121,2.092,122,2.985,161,2.203,175,2.092,176,2.092,177,2.092,179,2.397,180,2.397,236,1.59,260,2.092,261,2.092,262,2.092,263,1.936,383,2.092,416,2.092,417,2.092,418,2.092,562,2.092,563,2.528,564,2.528,565,2.092]],["title/properties.html",[345,2.629,477,2.123]],["body/properties.html",[19,0.036,84,0.031,85,0.031,345,3.23,512,3.744,551,3.744,558,3.744,566,4.525,567,4.525,568,4.525]],["title/miscellaneous/variables.html",[499,1.614,569,3.047]],["body/miscellaneous/variables.html",[8,2.086,9,0.59,11,0.787,19,0.037,25,1.457,29,1.151,33,2.393,40,1.66,70,1.135,74,1.606,84,0.021,85,0.021,198,2.086,209,3.955,210,3.955,212,1.799,219,2.286,237,1.799,238,2.935,240,1.799,242,2.595,243,2.595,244,2.595,247,1.799,248,2.595,249,2.086,250,2.086,251,2.086,252,2.086,253,2.086,254,2.086,255,2.086,256,2.086,257,1.799,258,2.086,278,2.595,441,3.008,468,2.086,469,3.008,470,3.528,471,3.008,472,3.008,473,3.008,474,3.528,499,1.585,565,2.086,569,2.086,570,5.313,571,2.52,572,2.52,573,2.52,574,2.52,575,2.52,576,2.52,577,2.52,578,2.52,579,2.52,580,2.52,581,2.52,582,2.52,583,2.52,584,2.52,585,2.52,586,3.635,587,2.52,588,2.52,589,2.52,590,2.52]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":567,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{}}}],["10.0.2",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":383,"title":{},"body":{"classes/MatchmakeGateway.html":{},"overview.html":{}}}],["2.3.1",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":565,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["4.11.0",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.1.0",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":563,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["9",{"_index":564,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["aeiou",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alphabet",{"_index":469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":542,"title":{},"body":{"index.html":{}}}],["api",{"_index":8,"title":{},"body":{"controllers/ApiController.html":{},"miscellaneous/variables.html":{}}}],["api.controller",{"_index":104,"title":{},"body":{"modules/ApiModule.html":{}}}],["api.service",{"_index":59,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{}}}],["api/api.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["apicontroller",{"_index":1,"title":{"controllers/ApiController.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"coverage.html":{}}}],["apimodule",{"_index":87,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apiservice",{"_index":58,"title":{"injectables/ApiService.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":411,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":415,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app_pipe",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":511,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":119,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":356,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["array(numconsonants)].map",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array(numvowels)].map",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["atleastone('digit",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('lowercase",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('special",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["atleastone('uppercase",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":295,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":299,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":148,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":301,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":302,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":331,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":93,"title":{"modules/AuthModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":551,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":161,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":71,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{}}}],["backers",{"_index":543,"title":{},"body":{"index.html":{}}}],["bcdfghjklmnpqrstvwxyz",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["body",{"_index":42,"title":{},"body":{"controllers/ApiController.html":{}}}],["bootstrap",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":561,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":559,"title":{},"body":{"modules.html":{}}}],["building",{"_index":507,"title":{},"body":{"index.html":{}}}],["catch",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["changed",{"_index":397,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["characters",{"_index":289,"title":{},"body":{"injectables/GamesService.html":{}}}],["class",{"_index":64,"title":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/MatchmakeGateway.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":236,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"classes/MatchmakeGateway.html":{},"overview.html":{}}}],["cleanup",{"_index":390,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client",{"_index":358,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.disconnect(true",{"_index":377,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.emit('error",{"_index":374,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.emit('welcome",{"_index":378,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["client.handshake.auth.token",{"_index":373,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["cluster_apimodule",{"_index":90,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_imports",{"_index":92,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_providers",{"_index":91,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_gamesmodule",{"_index":260,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_gamesmodule_exports",{"_index":261,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_gamesmodule_providers",{"_index":262,"title":{},"body":{"modules/GamesModule.html":{},"overview.html":{}}}],["cluster_playmodule",{"_index":400,"title":{},"body":{"modules/PlayModule.html":{}}}],["cluster_playmodule_imports",{"_index":401,"title":{},"body":{"modules/PlayModule.html":{}}}],["cluster_usersmodule",{"_index":416,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":418,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":417,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["compare",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(pass",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["configmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":284,"title":{},"body":{"injectables/GamesService.html":{}}}],["connected",{"_index":371,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["connectuserdto",{"_index":235,"title":{"classes/ConnectUserDto.html":{}},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{}}}],["connectuserschema",{"_index":242,"title":{},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.log('match",{"_index":384,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["console.log('user",{"_index":370,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["consonants",{"_index":470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consonants.length",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consonants[math.floor(math.random",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":74,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":65,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":333,"title":{},"body":{"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{}}}],["constructor(prisma",{"_index":270,"title":{},"body":{"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["context",{"_index":300,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gettype",{"_index":303,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":305,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtows().getclient",{"_index":308,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('api",{"_index":62,"title":{},"body":{"controllers/ApiController.html":{}}}],["controller('auth",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["cors",{"_index":367,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["coverage",{"_index":452,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":288,"title":{},"body":{"injectables/GamesService.html":{}}}],["creategame",{"_index":268,"title":{},"body":{"injectables/GamesService.html":{}}}],["creategame(...users",{"_index":272,"title":{},"body":{"injectables/GamesService.html":{}}}],["createuser",{"_index":12,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["createuser(@body",{"_index":79,"title":{},"body":{"controllers/ApiController.html":{}}}],["createuser(data",{"_index":16,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":17,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["createuserschema",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createzoddto",{"_index":239,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{}}}],["createzoddto(connectuserschema",{"_index":246,"title":{},"body":{"classes/ConnectUserDto.html":{}}}],["createzoddto(createuserschema.required",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["credentials",{"_index":376,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["ctx",{"_index":307,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ctx.handshake",{"_index":309,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cursor",{"_index":443,"title":{},"body":{"injectables/UsersService.html":{}}}],["data",{"_index":27,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["data.password",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{}}}],["decorators",{"_index":18,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"classes/MatchmakeGateway.html":{}}}],["default",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"classes/MatchmakeGateway.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["deleteuser",{"_index":422,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(where",{"_index":426,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":89,"title":{"dependencies.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":512,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":520,"title":{},"body":{"index.html":{}}}],["dictionary",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":531,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":508,"title":{},"body":{"index.html":{}}}],["email",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":406,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":408,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(`this",{"_index":310,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["event",{"_index":398,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["executioncontext",{"_index":298,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["expiresin",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":63,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":245,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["found",{"_index":78,"title":{},"body":{"controllers/ApiController.html":{},"classes/MatchmakeGateway.html":{}}}],["framework",{"_index":506,"title":{},"body":{"index.html":{}}}],["function",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":500,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":49,"title":{},"body":{"controllers/ApiController.html":{},"injectables/GamesService.html":{}}}],["games.service",{"_index":265,"title":{},"body":{"modules/GamesModule.html":{}}}],["games/games.module",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["gameservice",{"_index":67,"title":{},"body":{"controllers/ApiController.html":{},"classes/MatchmakeGateway.html":{}}}],["gamesmodule",{"_index":94,"title":{"modules/GamesModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["gamesservice",{"_index":60,"title":{"injectables/GamesService.html":{}},"body":{"controllers/ApiController.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{},"overview.html":{}}}],["gamestatus",{"_index":277,"title":{},"body":{"injectables/GamesService.html":{}}}],["gamestatus.in_progress",{"_index":282,"title":{},"body":{"injectables/GamesService.html":{}}}],["generaterandomsequence",{"_index":278,"title":{},"body":{"injectables/GamesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('games/:id",{"_index":34,"title":{},"body":{"controllers/ApiController.html":{}}}],["get('hello",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('users",{"_index":69,"title":{},"body":{"controllers/ApiController.html":{}}}],["get('users/:username",{"_index":38,"title":{},"body":{"controllers/ApiController.html":{}}}],["getallusers",{"_index":13,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame",{"_index":14,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame(@param('id",{"_index":82,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgame(id",{"_index":32,"title":{},"body":{"controllers/ApiController.html":{}}}],["getgamebyid",{"_index":269,"title":{},"body":{"injectables/GamesService.html":{}}}],["getgamebyid(id",{"_index":275,"title":{},"body":{"injectables/GamesService.html":{}}}],["getrequest",{"_index":296,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["getrequest(context",{"_index":297,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["getting",{"_index":502,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":15,"title":{},"body":{"controllers/ApiController.html":{}}}],["getuser(@param('username",{"_index":73,"title":{},"body":{"controllers/ApiController.html":{}}}],["getuser(username",{"_index":37,"title":{},"body":{"controllers/ApiController.html":{}}}],["grow",{"_index":538,"title":{},"body":{"index.html":{}}}],["guard",{"_index":311,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["guards",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleconnection",{"_index":347,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["handleconnection(client",{"_index":354,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["handledisconnect",{"_index":348,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["handledisconnect(client",{"_index":359,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["hash",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{}}}],["hash(data.password",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{}}}],["hello",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"classes/MatchmakeGateway.html":{}}}],["hello(@request",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["hello(req",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["here",{"_index":548,"title":{},"body":{"index.html":{}}}],["http",{"_index":304,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["httpexception",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(err.message",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":555,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.bad_request",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":36,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{}}}],["identifier",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":342,"title":{},"body":{"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":41,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":101,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlayModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":409,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":106,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":517,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":519,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":375,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["isws",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["join",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":53,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":179,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":552,"title":{},"body":{"index.html":{}}}],["left",{"_index":399,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["license",{"_index":558,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":535,"title":{},"body":{"index.html":{}}}],["literal",{"_index":430,"title":{},"body":{"injectables/UsersService.html":{}}}],["local",{"_index":337,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":163,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":180,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["lol",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["made",{"_index":312,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["map",{"_index":352,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["matched",{"_index":388,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["matching",{"_index":85,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matchmake",{"_index":369,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["matchmakegateway",{"_index":340,"title":{"classes/MatchmakeGateway.html":{}},"body":{"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"coverage.html":{}}}],["max(100",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":379,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["metadata",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["min(8",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":499,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":534,"title":{},"body":{"index.html":{}}}],["mode",{"_index":524,"title":{},"body":{"index.html":{}}}],["module",{"_index":86,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":88,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":547,"title":{},"body":{"index.html":{}}}],["moves",{"_index":287,"title":{},"body":{"injectables/GamesService.html":{}}}],["myśliwiec",{"_index":553,"title":{},"body":{"index.html":{}}}],["name",{"_index":24,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["namespace",{"_index":368,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["nest",{"_index":513,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":557,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":48,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":363,"title":{},"body":{"classes/MatchmakeGateway.html":{},"dependencies.html":{}}}],["net",{"_index":365,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["new",{"_index":77,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"coverage.html":{}}}],["newgame",{"_index":385,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["newgame.id",{"_index":389,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["node.js",{"_index":505,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":43,"title":{},"body":{"controllers/ApiController.html":{}}}],["npm",{"_index":518,"title":{},"body":{"index.html":{}}}],["null",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":441,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["numconsonants",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["numvowels",{"_index":472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ongatewayconnection",{"_index":344,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["ongatewaydisconnect",{"_index":343,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["onmoduleinit",{"_index":407,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":536,"title":{},"body":{"index.html":{}}}],["optional",{"_index":26,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["orderby",{"_index":445,"title":{},"body":{"injectables/UsersService.html":{}}}],["out",{"_index":98,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":562,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":477,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":44,"title":{},"body":{"controllers/ApiController.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{}}}],["pass",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["picture",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/GamesService.html":{},"miscellaneous/variables.html":{}}}],["play.gateway",{"_index":403,"title":{},"body":{"modules/PlayModule.html":{}}}],["play/play.module",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["players",{"_index":283,"title":{},"body":{"injectables/GamesService.html":{}}}],["playmodule",{"_index":122,"title":{"modules/PlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlayModule.html":{},"modules.html":{},"overview.html":{}}}],["please",{"_index":545,"title":{},"body":{"index.html":{}}}],["post",{"_index":45,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["post('login",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('users",{"_index":20,"title":{},"body":{"controllers/ApiController.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["prisma",{"_index":50,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/GamesService.html":{},"injectables/UsersService.html":{}}}],["prisma.service",{"_index":438,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.usercreateinput",{"_index":81,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/UsersService.html":{}}}],["prisma.userorderbywithrelationinput",{"_index":446,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userupdateinput",{"_index":449,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereinput",{"_index":444,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereuniqueinput",{"_index":427,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma/client",{"_index":52,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":405,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":263,"title":{"injectables/PrismaService.html":{}},"body":{"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":66,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/MatchmakeGateway.html":{}}}],["process.env.jwt_secret",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":526,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":504,"title":{},"body":{"index.html":{}}}],["project",{"_index":537,"title":{},"body":{"index.html":{}}}],["promise",{"_index":29,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":345,"title":{"properties.html":{}},"body":{"classes/MatchmakeGateway.html":{},"properties.html":{}}}],["provide",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":100,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["randomconsonants",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomvowels",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomvowels.concat(randomconsonants",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":546,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":516,"title":{},"body":{"index.html":{}}}],["req",{"_index":46,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["req.user",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["requests",{"_index":313,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["reset",{"_index":97,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":84,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":70,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":28,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":521,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":391,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["s.disconnect(true",{"_index":393,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["scalable",{"_index":509,"title":{},"body":{"index.html":{}}}],["secret",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":291,"title":{},"body":{"injectables/GamesService.html":{}}}],["seq",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seq.join",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":346,"title":{},"body":{"classes/MatchmakeGateway.html":{},"index.html":{}}}],["servestaticmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":510,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["skip",{"_index":440,"title":{},"body":{"injectables/UsersService.html":{}}}],["socket",{"_index":355,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["socket.io",{"_index":364,"title":{},"body":{"classes/MatchmakeGateway.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"modules/GamesModule.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"modules/PlayModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":540,"title":{},"body":{"index.html":{}}}],["src/.../connect",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../words.ts",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api.controller.ts",{"_index":6,"title":{},"body":{"controllers/ApiController.html":{},"coverage.html":{}}}],["src/api/api.controller.ts:26",{"_index":31,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:31",{"_index":39,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:42",{"_index":22,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.controller.ts:49",{"_index":35,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/api/api.module.ts",{"_index":99,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/api/api.service.ts",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/api/api.service.ts:7",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/api/api.service.ts:9",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app.module.ts",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:10",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":102,"title":{},"body":{"modules/ApiModule.html":{},"modules/PlayModule.html":{}}}],["src/auth/auth.module.ts",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":366,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/auth/auth.service.ts",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards",{"_index":54,"title":{},"body":{"controllers/ApiController.html":{}}}],["src/auth/guards/jwt",{"_index":294,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":330,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:15",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:6",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":332,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:12",{"_index":336,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":334,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/games/games.module",{"_index":105,"title":{},"body":{"modules/ApiModule.html":{},"modules/PlayModule.html":{}}}],["src/games/games.module.ts",{"_index":264,"title":{},"body":{"modules/GamesModule.html":{}}}],["src/games/games.service",{"_index":61,"title":{},"body":{"controllers/ApiController.html":{},"classes/MatchmakeGateway.html":{}}}],["src/games/games.service.ts",{"_index":267,"title":{},"body":{"injectables/GamesService.html":{},"coverage.html":{}}}],["src/games/games.service.ts:10",{"_index":273,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:25",{"_index":276,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/games/games.service.ts:7",{"_index":271,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/main.ts",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models",{"_index":55,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{}}}],["src/models/user/connect",{"_index":237,"title":{},"body":{"classes/ConnectUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/user/create",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/play/play.gateway.ts",{"_index":341,"title":{},"body":{"classes/MatchmakeGateway.html":{},"coverage.html":{}}}],["src/play/play.gateway.ts:19",{"_index":349,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/play.gateway.ts:24",{"_index":353,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/play.gateway.ts:25",{"_index":357,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/play.gateway.ts:59",{"_index":351,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/play.gateway.ts:61",{"_index":360,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["src/play/play.module.ts",{"_index":402,"title":{},"body":{"modules/PlayModule.html":{}}}],["src/prisma.service",{"_index":266,"title":{},"body":{"modules/GamesModule.html":{},"injectables/GamesService.html":{},"modules/UsersModule.html":{}}}],["src/prisma.service.ts",{"_index":404,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma.service.ts:10",{"_index":410,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma.service.ts:6",{"_index":412,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/users.module",{"_index":103,"title":{},"body":{"modules/ApiModule.html":{},"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":419,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":57,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{}}}],["src/users/users.service.ts",{"_index":421,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:17",{"_index":437,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:34",{"_index":425,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:40",{"_index":431,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:51",{"_index":428,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:6",{"_index":424,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/util/words",{"_index":279,"title":{},"body":{"injectables/GamesService.html":{}}}],["src/util/words.ts",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":522,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":525,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":527,"title":{},"body":{"index.html":{}}}],["started",{"_index":503,"title":{"index.html":{}},"body":{}}],["starter",{"_index":515,"title":{},"body":{"index.html":{}}}],["statements",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":281,"title":{},"body":{"injectables/GamesService.html":{}}}],["stay",{"_index":549,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":33,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":541,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":560,"title":{},"body":{"modules.html":{}}}],["table",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":442,"title":{},"body":{"injectables/UsersService.html":{}}}],["test",{"_index":530,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":533,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":532,"title":{},"body":{"index.html":{}}}],["tests",{"_index":529,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":539,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":413,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":414,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.apiservice.createuser",{"_index":80,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.authservice.login(req.user",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":339,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.verify",{"_index":372,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.gameservice.creategame(...this.users.values",{"_index":386,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.gameservice.getgamebyid(id",{"_index":83,"title":{},"body":{"controllers/ApiController.html":{}}}],["this.jwtservice.sign(payload",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.game.create",{"_index":280,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.game.findunique",{"_index":290,"title":{},"body":{"injectables/GamesService.html":{}}}],["this.prisma.user.create",{"_index":448,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":451,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":447,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":439,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":450,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.server.emit('match",{"_index":387,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.server.emit('users",{"_index":396,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.clear",{"_index":394,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.delete(client",{"_index":395,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.keys",{"_index":392,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.set(client",{"_index":381,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.users.size",{"_index":382,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["this.usersservice.createuser(data",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.usersservice.user",{"_index":75,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.users",{"_index":72,"title":{},"body":{"controllers/ApiController.html":{}}}],["throw",{"_index":76,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["todo",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":550,"title":{},"body":{"index.html":{}}}],["true",{"_index":292,"title":{},"body":{"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{}}}],["try",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":556,"title":{},"body":{"index.html":{}}}],["type",{"_index":25,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":514,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception",{"_index":338,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unit",{"_index":528,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":568,"title":{},"body":{"properties.html":{}}}],["updateuser",{"_index":423,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(params",{"_index":429,"title":{},"body":{"injectables/UsersService.html":{}}}],["use",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":47,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":68,"title":{},"body":{"controllers/ApiController.html":{},"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('hello",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('users",{"_index":30,"title":{},"body":{"controllers/ApiController.html":{}}}],["useguards(localauthguard",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":51,"title":{},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["user(userwhereuniqueinput",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":238,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.id",{"_index":286,"title":{},"body":{"injectables/GamesService.html":{}}}],["user.password",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":380,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["username",{"_index":40,"title":{},"body":{"controllers/ApiController.html":{},"injectables/AuthService.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/GamesService.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":274,"title":{},"body":{"injectables/GamesService.html":{},"classes/MatchmakeGateway.html":{},"injectables/UsersService.html":{}}}],["users(params",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.map((user",{"_index":285,"title":{},"body":{"injectables/GamesService.html":{}}}],["users.service",{"_index":420,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":95,"title":{"modules/UsersModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":56,"title":{"injectables/UsersService.html":{}},"body":{"controllers/ApiController.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwhereuniqueinput",{"_index":435,"title":{},"body":{"injectables/UsersService.html":{}}}],["validate",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":335,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"classes/MatchmakeGateway.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":569,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["verify(token",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyword",{"_index":473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":566,"title":{},"body":{"properties.html":{}}}],["void",{"_index":361,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["vowels",{"_index":474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vowels.length",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vowels[math.floor(math.random",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":523,"title":{},"body":{"index.html":{}}}],["website",{"_index":554,"title":{},"body":{"index.html":{}}}],["websocketgateway",{"_index":362,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["websocketserver",{"_index":350,"title":{},"body":{"classes/MatchmakeGateway.html":{}}}],["winnerid",{"_index":293,"title":{},"body":{"injectables/GamesService.html":{}}}],["word",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws",{"_index":306,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["you'd",{"_index":544,"title":{},"body":{"index.html":{}}}],["z",{"_index":240,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":243,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().email",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().min(6).max(20",{"_index":244,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["z.string().url",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["zod/z",{"_index":241,"title":{},"body":{"classes/ConnectUserDto.html":{},"classes/CreateUserDto.html":{}}}],["zodvalidationpipe",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":96,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamesModule.html":{},"modules/PlayModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/ApiController.html":{"url":"controllers/ApiController.html","title":"controller - ApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getGame\n                            \n                            \n                                    Async\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('users')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('users')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('games/:id')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('users/:username')\n                \n            \n\n            \n                \n                    Defined in src/api/api.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { Game, Prisma, User } from '@prisma/client';\nimport { JwtAuthGuard } from 'src/auth/guards';\nimport { CreateUserDto } from 'src/models';\nimport { UsersService } from 'src/users/users.service';\nimport { ApiService } from './api.service';\nimport { GamesService } from 'src/games/games.service';\n@Controller('api')\nexport class ApiController {\n  constructor(\n    private usersService: UsersService,\n    private apiService: ApiService,\n    private gameService: GamesService,\n  ) {}\n  @UseGuards(JwtAuthGuard)\n  @Get('users')\n  async getAllUsers(): Promise {\n    return await this.usersService.users({});\n  }\n\n  @Get('users/:username')\n  async getUser(@Param('username') username: string): Promise {\n    const user = await this.usersService.user({ username });\n    if (!user) {\n      throw new NotFoundException(\n        'User with username ' + username + ' not found.',\n      );\n    }\n    return user;\n  }\n\n  @Post('users')\n  async createUser(@Body() data: CreateUserDto): Promise {\n    return await this.apiService.createUser({\n      ...(data as Prisma.UserCreateInput),\n    });\n  }\n\n  @Get('games/:id')\n  async getGame(@Param('id') id: string): Promise {\n    return await this.gameService.getGameById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_providers\n\n\n\ncluster_ApiModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nApiModule -->\n\nGamesModule->ApiModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nApiModule -->\n\nUsersModule->ApiModule\n\n\n\n\n\nApiService\n\nApiService\n\nApiModule -->\n\nApiService->ApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { ApiController } from './api.controller';\nimport { ApiService } from './api.service';\nimport { GamesModule } from 'src/games/games.module';\n\n@Module({\n  controllers: [ApiController],\n  providers: [ApiService],\n  imports: [UsersModule, AuthModule, GamesModule],\n})\nexport class ApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from 'src/models';\nimport { UsersService } from 'src/users/users.service';\nimport { hash } from 'bcrypt';\nimport { Prisma, User } from '@prisma/client';\n@Injectable()\nexport class ApiService {\n  constructor(private usersService: UsersService) {}\n  async createUser(data: CreateUserDto): Promise {\n    data.password = await hash(data.password, 10);\n    return await this.usersService.createUser(data as Prisma.UserCreateInput);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nAppModule -->\n\nGamesModule->AppModule\n\n\n\n\n\nPlayModule\n\nPlayModule\n\nAppModule -->\n\nPlayModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ApiModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                        \n                            PlayModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { ZodValidationPipe } from 'nestjs-zod';\nimport { ApiModule } from './api/api.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { PlayModule } from './play/play.module';\nimport { GamesModule } from './games/games.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    ApiModule,\n    UsersModule,\n    AuthModule,\n    PlayModule,\n    GamesModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_PIPE,\n      useClass: ZodValidationPipe,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hello\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hello\n                        \n                    \n                \n            \n            \n                \n                    \n                    hello(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('hello')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Post, UseGuards, Get } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './guards/local-auth.guard';\nimport { JwtAuthGuard } from './guards';\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('hello')\n  async hello(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategies/jwt.strategy';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: 'lol',\n      signOptions: { expiresIn: '7d' },\n    }),\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(token: string, isWs)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isWs\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { compare } from 'bcrypt';\nimport { User } from '@prisma/client';\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.user({ username });\n    if (user && (await compare(pass, user.password))) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: User) {\n    const { password, ...payload } = user;\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  async verify(token: string, isWs = false): Promise {\n    try {\n      const payload = this.jwtService.verify(token, {\n        secret: process.env.JWT_SECRET,\n      });\n      const user = await this.usersService.user({\n        id: payload.id,\n      });\n\n      if (!user) {\n        if (isWs) {\n          return null;\n        } else {\n          throw new HttpException(\n            'Unauthorized access',\n            HttpStatus.BAD_REQUEST,\n          );\n        }\n      }\n\n      return user;\n    } catch (err: any) {\n      if (isWs) {\n        return null;\n      } else {\n        throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectUserDto.html":{"url":"classes/ConnectUserDto.html","title":"class - ConnectUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/connect-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from 'nestjs-zod';\nimport { z } from 'nestjs-zod/z';\n\nconst ConnectUserSchema = z.object({\n  username: z.string().min(6).max(20),\n});\n\nexport class ConnectUserDto extends createZodDto(ConnectUserSchema) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from 'nestjs-zod';\nimport { z } from 'nestjs-zod/z';\n\nconst CreateUserSchema = z.object({\n  username: z.string().min(6).max(20)!,\n  email: z.string().email(),\n  password: z\n    .password()\n    .min(8)\n    .max(100)\n    .atLeastOne('digit')\n    .atLeastOne('special')\n    .atLeastOne('uppercase')\n    .atLeastOne('lowercase'),\n  picture: z.string().url(),\n});\n\nexport class CreateUserDto extends createZodDto(CreateUserSchema.required()) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GamesModule.html":{"url":"modules/GamesModule.html","title":"module - GamesModule","body":"\n                   \n\n\n\n\n    Modules\n    GamesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GamesModule\n\n\n\ncluster_GamesModule_exports\n\n\n\ncluster_GamesModule_providers\n\n\n\n\nGamesService \n\nGamesService \n\n\n\nGamesModule\n\nGamesModule\n\nGamesService  -->\n\nGamesModule->GamesService \n\n\n\n\n\nGamesService\n\nGamesService\n\nGamesModule -->\n\nGamesService->GamesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nGamesModule -->\n\nPrismaService->GamesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/games/games.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GamesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GamesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GamesService } from './games.service';\nimport { PrismaService } from 'src/prisma.service';\n\n@Module({\n  providers: [GamesService, PrismaService],\n  exports: [GamesService],\n})\nexport class GamesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamesService.html":{"url":"injectables/GamesService.html","title":"injectable - GamesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/games/games.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                getGameById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/games/games.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(...users: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    users\n                                    \n                                            User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGameById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGameById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/games/games.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User, Game, GameStatus } from '@prisma/client';\nimport { PrismaService } from 'src/prisma.service';\nimport { generateRandomSequence } from 'src/util/words';\n\n@Injectable()\nexport class GamesService {\n  constructor(private prisma: PrismaService) {}\n\n  async createGame(...users: User[]): Promise {\n    return await this.prisma.game.create({\n      data: {\n        status: GameStatus.IN_PROGRESS,\n        players: {\n          connect: users.map((user) => {\n            return { id: user.id };\n          }),\n        },\n        moves: { create: [] },\n        characters: generateRandomSequence(),\n      },\n    });\n  }\n\n  async getGameById(id: string): Promise {\n    return await this.prisma.game.findUnique({\n      where: {\n        id,\n      },\n      select: {\n        id: true,\n        characters: true,\n        status: true,\n        winnerId: true,\n        players: {\n          select: {\n            username: true,\n            picture: true,\n          },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const type = context.getType();\n    if (type === 'http') {\n      return context.switchToHttp().getRequest();\n    } else if (type === 'ws') {\n      const ctx = context.switchToWs().getClient();\n      return ctx.handshake;\n    } else {\n      throw new Error(`This guard was not made for ${type} requests`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload) {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchmakeGateway.html":{"url":"classes/MatchmakeGateway.html","title":"class - MatchmakeGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchmakeGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/play/play.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayDisconnect\n                        OnGatewayConnection\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameService: GamesService)\n                    \n                \n                        \n                            \n                                Defined in src/play/play.gateway.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GamesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/play/play.gateway.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/play/play.gateway.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleConnection(client: Socket, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/play/play.gateway.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/play/play.gateway.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  WebSocketGateway,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Socket } from 'socket.io';\nimport { Server } from 'net';\nimport { AuthService } from 'src/auth/auth.service';\nimport { User } from '@prisma/client';\nimport { GamesService } from 'src/games/games.service';\n\n@WebSocketGateway({\n  cors: '*:*',\n  namespace: 'matchmake',\n})\nexport class MatchmakeGateway\n  implements OnGatewayDisconnect, OnGatewayConnection\n{\n  constructor(\n    private authService: AuthService,\n    private gameService: GamesService,\n  ) {}\n  users = new Map();\n  async handleConnection(client: Socket, ...args: any[]) {\n    console.log('user connected');\n    const user: User = await this.authService.verify(\n      client.handshake.auth.token,\n      true,\n    );\n    if (!user) {\n      client.emit('error', 'Invalid credentials.');\n      client.disconnect(true);\n      return;\n    }\n    client.emit('welcome', {\n      message: `Hello, ${user.username}!`,\n    });\n\n    this.users.set(client, user);\n    if (this.users.size == 2) {\n      console.log('match found!!!');\n      const newGame = await this.gameService.createGame(...this.users.values());\n\n      this.server.emit('match', {\n        message: 'You have been matched!',\n        id: newGame.id,\n      });\n\n      // cleanup\n\n      for (const s of this.users.keys()) {\n        s.disconnect(true);\n      }\n      this.users.clear();\n    }\n  }\n  @WebSocketServer()\n  server: Server;\n\n  handleDisconnect(client: Socket) {\n    this.users.delete(client);\n    this.server.emit('users-changed', {\n      event: 'left',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayModule.html":{"url":"modules/PlayModule.html","title":"module - PlayModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PlayModule\n\n\n\ncluster_PlayModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nPlayModule\n\nPlayModule\n\nPlayModule -->\n\nAuthModule->PlayModule\n\n\n\n\n\nGamesModule\n\nGamesModule\n\nPlayModule -->\n\nGamesModule->PlayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/play/play.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GamesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MatchmakeGateway } from './play.gateway';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { GamesModule } from 'src/games/games.module';\n\n@Module({\n  providers: [MatchmakeGateway],\n  imports: [AuthModule, GamesModule],\n})\nexport class PlayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma.service';\nimport { UsersService } from './users.service';\n\n@Module({\n  providers: [UsersService, PrismaService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                user\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: Prisma.UserCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.UserCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(where: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(userWhereUniqueInput: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userWhereUniqueInput\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma.service';\nimport { User, Prisma } from '@prisma/client';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) {}\n\n  async user(\n    userWhereUniqueInput: Prisma.UserWhereUniqueInput,\n  ): Promise {\n    return this.prisma.user.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  async users(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.UserWhereUniqueInput;\n    where?: Prisma.UserWhereInput;\n    orderBy?: Prisma.UserOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.user.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  async createUser(data: Prisma.UserCreateInput): Promise {\n    return this.prisma.user.create({\n      data,\n    });\n  }\n\n  async updateUser(params: {\n    where: Prisma.UserWhereUniqueInput;\n    data: Prisma.UserUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.user.update({\n      data,\n      where,\n    });\n  }\n\n  async deleteUser(where: Prisma.UserWhereUniqueInput): Promise {\n    return this.prisma.user.delete({\n      where,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/api.controller.ts\n            \n            controller\n            ApiController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/games/games.service.ts\n            \n            injectable\n            GamesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/connect-user.dto.ts\n            \n            class\n            ConnectUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/connect-user.dto.ts\n            \n            variable\n            ConnectUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user/create-user.dto.ts\n            \n            variable\n            CreateUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/play/play.gateway.ts\n            \n            class\n            MatchmakeGateway\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            alphabet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            consonants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            generateRandomSequence\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            numConsonants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            numVowels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            verifyWord\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/words.ts\n            \n            variable\n            vowels\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-socket.io : ^9.4.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @nestjs/websockets : ^9.4.0\n        \n            @prisma/client : ^4.11.0\n        \n            bcrypt : ^5.1.0\n        \n            nestjs-zod : ^1.2.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GamesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\ncluster_ApiModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GamesModule\n\n\n\ncluster_GamesModule_exports\n\n\n\ncluster_GamesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nPlayModule\n\nPlayModule\n\nPlayModule -->\n\nAuthModule->PlayModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nGamesModule\n\nGamesModule\n\nApiModule -->\n\nGamesModule->ApiModule\n\n\n\nPlayModule -->\n\nGamesModule->PlayModule\n\n\n\nAppModule -->\n\nGamesModule->AppModule\n\n\n\n\n\nGamesService \n\nGamesService \n\nGamesService  -->\n\nGamesModule->GamesService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nApiModule -->\n\nUsersModule->ApiModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nApiModule -->\n\nApiService->ApiModule\n\n\n\nAppModule -->\n\nPlayModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nGamesService\n\nGamesService\n\nGamesModule -->\n\nGamesService->GamesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nGamesModule -->\n\nPrismaService->GamesModule\n\n\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alphabet   (src/.../words.ts)\n                        \n                        \n                            ConnectUserSchema   (src/.../connect-user.dto.ts)\n                        \n                        \n                            consonants   (src/.../words.ts)\n                        \n                        \n                            CreateUserSchema   (src/.../create-user.dto.ts)\n                        \n                        \n                            generateRandomSequence   (src/.../words.ts)\n                        \n                        \n                            numConsonants   (src/.../words.ts)\n                        \n                        \n                            numVowels   (src/.../words.ts)\n                        \n                        \n                            verifyWord   (src/.../words.ts)\n                        \n                        \n                            vowels   (src/.../words.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/words.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alphabet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : consonants + vowels\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consonants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BCDFGHJKLMNPQRSTVWXYZ'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomSequence\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const randomVowels = [...Array(numVowels)].map(\n    () => vowels[Math.floor(Math.random() * vowels.length)],\n  );\n  const randomConsonants = [...Array(numConsonants)].map(\n    () => consonants[Math.floor(Math.random() * consonants.length)],\n  );\n  const seq = randomVowels.concat(randomConsonants);\n  return seq.join('');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numConsonants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numVowels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyWord\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (word: string): Promise => {\n  // TODO: use dictionary API to verify word\n  return false;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vowels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AEIOU'\n                    \n                \n\n\n        \n    \n\n    src/models/user/connect-user.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConnectUserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  username: z.string().min(6).max(20),\n})\n                    \n                \n\n\n        \n    \n\n    src/models/user/create-user.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateUserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  username: z.string().min(6).max(20)!,\n  email: z.string().email(),\n  password: z\n    .password()\n    .min(8)\n    .max(100)\n    .atLeastOne('digit')\n    .atLeastOne('special')\n    .atLeastOne('uppercase')\n    .atLeastOne('lowercase'),\n  picture: z.string().url(),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
